// @generated
/// Implement `DataProvider<PersianYearNamesV1Marker>` on the given struct using the data
/// hardcoded in this file. This allows the struct to be used with
/// `icu`'s `_unstable` constructors.
#[doc(hidden)]
#[macro_export]
macro_rules! __impl_datetime_symbols_persian_years_v1 {
    ($ provider : ty) => {
        #[clippy::msrv = "1.70"]
        const _: () = <$provider>::MUST_USE_MAKE_PROVIDER_MACRO;
        #[clippy::msrv = "1.70"]
        impl icu_provider::DataProvider<icu::datetime::provider::neo::PersianYearNamesV1Marker> for $provider {
            fn load(&self, req: icu_provider::DataRequest) -> Result<icu_provider::DataResponse<icu::datetime::provider::neo::PersianYearNamesV1Marker>, icu_provider::DataError> {
                static FR_X_3: <icu::datetime::provider::neo::PersianYearNamesV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0ah") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0A. P.") })
                });
                static RO_X_3: <icu::datetime::provider::neo::PersianYearNamesV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0ah") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0A.P.") })
                });
                static FR_CA_X_3: <icu::datetime::provider::neo::PersianYearNamesV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0ah") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0AP") })
                });
                static SV_X_5: <icu::datetime::provider::neo::PersianYearNamesV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0ah") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0Anno Persarum") })
                });
                static FI_X_5: <icu::datetime::provider::neo::PersianYearNamesV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0ah") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0Anno Persico") })
                });
                static MK_X_3: <icu::datetime::provider::neo::PersianYearNamesV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0ah") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\xD0\x90\xD0\x9F") })
                });
                static RU_X_3: <icu::datetime::provider::neo::PersianYearNamesV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0ah") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\xD0\xBF\xD0\xB5\xD1\x80\xD1\x81. \xD0\xB3\xD0\xBE\xD0\xB4") })
                });
                static RU_X_5: <icu::datetime::provider::neo::PersianYearNamesV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0ah") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\xD0\xBF\xD0\xB5\xD1\x80\xD1\x81\xD0\xB8\xD0\xB4\xD1\x81\xD0\xBA\xD0\xB8\xD0\xB9 \xD0\xB3\xD0\xBE\xD0\xB4") })
                });
                static HE_X_5: <icu::datetime::provider::neo::PersianYearNamesV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0ah") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\xD7\x94\xD7\xA1\xD7\xA4\xD7\x99\xD7\xA8\xD7\x94 \xD7\x94\xD7\xA4\xD7\xA8\xD7\xA1\xD7\x99\xD7\xAA") })
                });
                static FA_X_5: <icu::datetime::provider::neo::PersianYearNamesV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0ah") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\xD9\x87\xD8\xAC\xD8\xB1\xDB\x8C \xD8\xB4\xD9\x85\xD8\xB3\xDB\x8C") })
                });
                static AR_X_3: <icu::datetime::provider::neo::PersianYearNamesV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0ah") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\xD9\x87\xE2\x80\x8D.\xD8\xB4") })
                });
                static FA_X_3: <icu::datetime::provider::neo::PersianYearNamesV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0ah") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\xD9\x87\xE2\x80\x8D.\xD8\xB4.") })
                });
                static TH_X_3: <icu::datetime::provider::neo::PersianYearNamesV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0ah") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\xE0\xB8\x9B\xE0\xB8\xB5\xE0\xB9\x80\xE0\xB8\x9B\xE0\xB8\xAD\xE0\xB8\xA3\xE0\xB9\x8C\xE0\xB9\x80\xE0\xB8\x8B\xE0\xB8\xB5\xE0\xB8\xA2") })
                });
                static LO_X_3: <icu::datetime::provider::neo::PersianYearNamesV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0ah") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\xE0\xBA\x9B\xE0\xBA\xB5\xE0\xBB\x80\xE0\xBA\x9B\xE0\xBA\xB5\xE0\xBB\x80\xE0\xBA\x8A\xE0\xBA\x8D") })
                });
                static YUE_HANS_X_3: <icu::datetime::provider::neo::PersianYearNamesV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0ah") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\xE6\xB3\xA2\xE6\x96\xAF\xE5\x8E\x86") })
                });
                static YUE_X_3: <icu::datetime::provider::neo::PersianYearNamesV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0ah") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\xE6\xB3\xA2\xE6\x96\xAF\xE6\x9B\x86") })
                });
                static FF_ADLM_X_3: <icu::datetime::provider::neo::PersianYearNamesV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0ah") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\xF0\x9E\xA4\x80\xF0\x9E\xA4\x86") })
                });
                static SC_X_3: <icu::datetime::provider::neo::PersianYearNamesV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0ah") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0a.p.") })
                });
                static SC_X_5: <icu::datetime::provider::neo::PersianYearNamesV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0ah") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0annu persianu") })
                });
                static UZ_X_3: <icu::datetime::provider::neo::PersianYearNamesV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0ah") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0forsiy") })
                });
                static LV_X_3: <icu::datetime::provider::neo::PersianYearNamesV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0ah") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0pers. gads") })
                });
                static LV_X_5: <icu::datetime::provider::neo::PersianYearNamesV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0ah") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0persie\xC5\xA1u gads") })
                });
                static DATA: [(&str, &str, &<icu::datetime::provider::neo::PersianYearNamesV1Marker as icu_provider::DynamicDataMarker>::Yokeable); 57usize] = [("ar", "3", &AR_X_3), ("ar", "4", &AR_X_3), ("ar", "5", &AR_X_3), ("fa", "3", &FA_X_3), ("fa", "4", &FA_X_3), ("fa", "5", &FA_X_5), ("ff-Adlm", "3", &FF_ADLM_X_3), ("ff-Adlm", "4", &FF_ADLM_X_3), ("ff-Adlm", "5", &FF_ADLM_X_3), ("fi", "5", &FI_X_5), ("fr", "3", &FR_X_3), ("fr", "4", &FR_X_3), ("fr", "5", &FI_X_5), ("fr-CA", "3", &FR_CA_X_3), ("fr-CA", "4", &FR_CA_X_3), ("fr-CA", "5", &FR_CA_X_3), ("he", "5", &HE_X_5), ("lo", "3", &LO_X_3), ("lo", "4", &LO_X_3), ("lo", "5", &LO_X_3), ("lv", "3", &LV_X_3), ("lv", "4", &LV_X_3), ("lv", "5", &LV_X_5), ("mk", "3", &MK_X_3), ("mk", "4", &MK_X_3), ("mk", "5", &MK_X_3), ("ro", "3", &RO_X_3), ("ro", "4", &RO_X_3), ("ro", "5", &FI_X_5), ("ru", "3", &RU_X_3), ("ru", "4", &RU_X_3), ("ru", "5", &RU_X_5), ("sc", "3", &SC_X_3), ("sc", "4", &SC_X_3), ("sc", "5", &SC_X_5), ("sv", "5", &SV_X_5), ("th", "3", &TH_X_3), ("th", "4", &TH_X_3), ("th", "5", &TH_X_3), ("und", "3", &FR_CA_X_3), ("und", "4", &FR_CA_X_3), ("und", "5", &FR_CA_X_3), ("uz", "3", &UZ_X_3), ("uz", "4", &UZ_X_3), ("uz", "5", &UZ_X_3), ("yue", "3", &YUE_X_3), ("yue", "4", &YUE_X_3), ("yue", "5", &YUE_X_3), ("yue-Hans", "3", &YUE_HANS_X_3), ("yue-Hans", "4", &YUE_HANS_X_3), ("yue-Hans", "5", &YUE_HANS_X_3), ("zh", "3", &YUE_HANS_X_3), ("zh", "4", &YUE_HANS_X_3), ("zh", "5", &YUE_HANS_X_3), ("zh-Hant", "3", &YUE_X_3), ("zh-Hant", "4", &YUE_X_3), ("zh-Hant", "5", &YUE_X_3)];
                fn lookup(req: icu_provider::DataRequest) -> Option<&'static <icu::datetime::provider::neo::PersianYearNamesV1Marker as icu_provider::DynamicDataMarker>::Yokeable> {
                    DATA.binary_search_by(|(l, a, _)| req.locale.strict_cmp(l.as_bytes()).reverse().then_with(|| a.cmp(&&**req.marker_attributes))).map(|i| (*unsafe { DATA.get_unchecked(i) }).2).ok()
                }
                let mut metadata = icu_provider::DataResponseMetadata::default();
                let payload = if let Some(payload) = lookup(req) {
                    payload
                } else {
                    const FALLBACKER: icu::locale::fallback::LocaleFallbackerWithConfig<'static> = icu::locale::fallback::LocaleFallbacker::new().for_config(<icu::datetime::provider::neo::PersianYearNamesV1Marker as icu_provider::DataMarker>::INFO.fallback_config);
                    let mut fallback_iterator = FALLBACKER.fallback_for(req.locale.clone());
                    loop {
                        if let Some(payload) = lookup(icu_provider::DataRequest { locale: fallback_iterator.get(), ..req }) {
                            metadata.locale = Some(fallback_iterator.take());
                            break payload;
                        }
                        if fallback_iterator.get().is_und() {
                            return Err(icu_provider::DataErrorKind::MissingLocale.with_req(<icu::datetime::provider::neo::PersianYearNamesV1Marker as icu_provider::DataMarker>::INFO, req));
                        }
                        fallback_iterator.step();
                    }
                };
                Ok(icu_provider::DataResponse { payload: Some(icu_provider::DataPayload::from_static_ref(payload)), metadata })
            }
        }
    };
}
/// Implement `IterableDataProvider<PersianYearNamesV1Marker>` on the given struct using the data
/// hardcoded in this file. This allows the struct to be used with
/// `DatagenDriver` for this marker.
#[doc(hidden)]
#[macro_export]
macro_rules! __impliterable_datetime_symbols_persian_years_v1 {
    ($ provider : ty) => {
        #[clippy::msrv = "1.70"]
        impl icu_provider::datagen::IterableDataProvider<icu::datetime::provider::neo::PersianYearNamesV1Marker> for $provider {
            fn supported_requests(&self) -> Result<std::collections::HashSet<(icu_provider::DataLocale, icu_provider::DataMarkerAttributes)>, icu_provider::DataError> {
                Ok(["ar-x-3", "ar-x-4", "ar-x-5", "fa-x-3", "fa-x-4", "fa-x-5", "ff-Adlm-x-3", "ff-Adlm-x-4", "ff-Adlm-x-5", "fi-x-5", "fr-CA-x-3", "fr-CA-x-4", "fr-CA-x-5", "fr-x-3", "fr-x-4", "fr-x-5", "he-x-5", "lo-x-3", "lo-x-4", "lo-x-5", "lv-x-3", "lv-x-4", "lv-x-5", "mk-x-3", "mk-x-4", "mk-x-5", "ro-x-3", "ro-x-4", "ro-x-5", "ru-x-3", "ru-x-4", "ru-x-5", "sc-x-3", "sc-x-4", "sc-x-5", "sv-x-5", "th-x-3", "th-x-4", "th-x-5", "und-x-3", "und-x-4", "und-x-5", "uz-x-3", "uz-x-4", "uz-x-5", "yue-Hans-x-3", "yue-Hans-x-4", "yue-Hans-x-5", "yue-x-3", "yue-x-4", "yue-x-5", "zh-Hant-x-3", "zh-Hant-x-4", "zh-Hant-x-5", "zh-x-3", "zh-x-4", "zh-x-5"].into_iter().filter_map(icu_provider::DataRequest::legacy_decode).collect())
            }
        }
    };
}
