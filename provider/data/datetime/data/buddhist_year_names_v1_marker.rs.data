// @generated
/// Implement `DataProvider<BuddhistYearNamesV1Marker>` on the given struct using the data
/// hardcoded in this file. This allows the struct to be used with
/// `icu`'s `_unstable` constructors.
#[doc(hidden)]
#[macro_export]
macro_rules! __impl_buddhist_year_names_v1_marker {
    ($ provider : ty) => {
        #[clippy::msrv = "1.70"]
        const _: () = <$provider>::MUST_USE_MAKE_PROVIDER_MACRO;
        #[clippy::msrv = "1.70"]
        impl $provider {
            const DATA_BUDDHIST_YEAR_NAMES_V1_MARKER: icu_provider_baked::binary_search::Data<icu_provider_baked::binary_search::AttributesAndLocale, icu::datetime::provider::neo::BuddhistYearNamesV1Marker> = {
                type S = <icu::datetime::provider::neo::BuddhistYearNamesV1Marker as icu_provider::DynamicDataMarker>::Yokeable;
                const _3_AF: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0be") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0BE") })
                });
                const _3_AST: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0be") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0EB") })
                });
                const _3_BE: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0be") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\xD0\xB1.\xD1\x8D.") })
                });
                const _3_BR: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0be") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0A.B.") })
                });
                const _3_BS_CYRL: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0be") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\xD0\x91\xD0\x95") })
                });
                const _3_CA: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0be") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0eB") })
                });
                const _3_ET: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0be") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0BK") })
                });
                const _3_EU: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0be") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0BG") })
                });
                const _3_FA: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0be") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\xD8\xAA\xD9\x82\xD9\x88\xDB\x8C\xD9\x85 \xD8\xA8\xD9\x88\xD8\xAF\xD8\xA7\xDB\x8C\xDB\x8C") })
                });
                const _3_FF_ADLM: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0be") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\xF0\x9E\xA4\x98\xF0\x9E\xA4\x84") })
                });
                const _3_FR: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0be") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0E. B.") })
                });
                const _3_GA: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0be") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0RB") })
                });
                const _3_HI: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0be") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\xE0\xA4\xAC\xE0\xA5\x8C\xE0\xA4\xA6\xE0\xA5\x8D\xE0\xA4\xA7 \xE0\xA4\xB8\xE0\xA4\x82\xE0\xA4\xB5\xE0\xA4\xA4") })
                });
                const _3_IS: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0be") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0BD") })
                });
                const _3_KO: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0be") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\xEB\xB6\x88\xEA\xB8\xB0") })
                });
                const _3_LO: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0be") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\xE0\xBA\x9E.\xE0\xBA\xAA.") })
                });
                const _3_LV: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0be") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0B.E.") })
                });
                const _3_MR: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0be") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\xE0\xA4\x87\xE0\xA4\xB8\xE0\xA4\xAA\xE0\xA5\x82.") })
                });
                const _3_PA: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0be") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\xE0\xA8\x88\xE0\xA8\xB8\xE0\xA8\xB5\xE0\xA9\x80 \xE0\xA8\xAA\xE0\xA9\x82\xE0\xA8\xB0\xE0\xA8\xB5") })
                });
                const _3_PL: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0be") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0e.b.") })
                });
                const _3_SC: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0be") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0E.B.") })
                });
                const _3_SL: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0be") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0bud. kol.") })
                });
                const _3_TH: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0be") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\xE0\xB8\x9E.\xE0\xB8\xA8.") })
                });
                const _3_UK: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0be") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\xD0\xB1. \xD0\xB5.") })
                });
                const _3_YUE: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0be") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\xE4\xBD\x9B\xE6\x9B\x86") })
                });
                const _3_YUE_HANS: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0be") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\xE4\xBD\x9B\xE5\x8E\x86") })
                });
                const _4_BR: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0be") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0AB") })
                });
                const _4_PA: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0be") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\xE0\xA8\x88. \xE0\xA8\xAA\xE0\xA9\x82.") })
                });
                const _4_RU: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0be") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\xD0\xB1\xD1\x8D") })
                });
                const _4_UK: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0be") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\xD0\xB1.\xD0\xB5.") })
                });
                const _5_AR: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0be") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\xD8\xA7\xD9\x84\xD8\xAA\xD9\x82\xD9\x88\xD9\x8A\xD9\x85 \xD8\xA7\xD9\x84\xD8\xA8\xD9\x88\xD8\xB0\xD9\x8A") })
                });
                const _5_AST: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0be") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0era budista") })
                });
                const _5_BR: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0be") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0amzervezh voudaek") })
                });
                const _5_EL: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0be") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\xCE\x92.\xCE\x95.") })
                });
                const _5_FF_ADLM: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0be") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\xF0\x9E\xA4\x98\xF0\x9E\xA4\xAD\xF0\x9E\xA4\xAA\xF0\x9E\xA4\xA2\xF0\x9E\xA4\xA4 \xF0\x9E\xA4\x84\xF0\x9E\xA4\xB5\xF0\x9E\xA5\x85\xF0\x9E\xA4\xA3\xF0\x9E\xA4\xA2\xF0\x9E\xA4\xB2\xF0\x9E\xA4\xB3\xF0\x9E\xA4\xAE\xF0\x9E\xA4\xB1\xF0\x9E\xA4\xA2\xF0\x9E\xA4\xA4") })
                });
                const _5_FI: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0be") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0buddhalainen aika") })
                });
                const _5_FR: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0be") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\xC3\xA8re bouddhique") })
                });
                const _5_HE: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0be") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\xD7\x94\xD7\xA1\xD7\xA4\xD7\x99\xD7\xA8\xD7\x94 \xD7\x94\xD7\x91\xD7\x95\xD7\x93\xD7\x94\xD7\x99\xD7\xA1\xD7\x98\xD7\x99\xD7\xAA") })
                });
                const _5_ID: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0be") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0Era Buddhis") })
                });
                const _5_IS: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0be") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0b\xC3\xBAddhadagatal") })
                });
                const _5_JA: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0be") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\xE4\xBB\x8F\xE6\x9A\xA6") })
                });
                const _5_LV: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0be") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0budistu \xC4\x93ra") })
                });
                const _5_MR: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0be") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\xE0\xA4\x87\xE0\xA4\xB8\xE0\xA4\xB5\xE0\xA5\x80\xE0\xA4\xB8\xE0\xA4\xA8 \xE0\xA4\xAA\xE0\xA5\x82\xE0\xA4\xB0\xE0\xA5\x8D\xE0\xA4\xB5") })
                });
                const _5_RO: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0be") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0era budist\xC4\x83") })
                });
                const _5_RU: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0be") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\xD0\xB1\xD1\x83\xD0\xB4\xD0\xB4\xD0\xB8\xD0\xB9\xD1\x81\xD0\xBA\xD0\xB0\xD1\x8F \xD1\x8D\xD1\x80\xD0\xB0") })
                });
                const _5_SC: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0be") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0era buddhista") })
                });
                const _5_SL: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0be") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0budisti\xC4\x8Dni koledar") })
                });
                const _5_SV: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0be") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0Buddhistisk era") })
                });
                const _5_TH: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0be") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\xE0\xB8\x9E\xE0\xB8\xB8\xE0\xB8\x97\xE0\xB8\x98\xE0\xB8\xA8\xE0\xB8\xB1\xE0\xB8\x81\xE0\xB8\xA3\xE0\xB8\xB2\xE0\xB8\x8A") })
                });
                const _5_UG: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0be") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\xD8\xA8\xDB\x87\xD8\xAF\xD8\xAF\xD8\xA7 \xD9\x8A\xD9\x89\xD9\x84\xD9\x86\xD8\xA7\xD9\x85\xDB\x95\xD8\xB3\xD9\x89") })
                });
                icu_provider_baked::binary_search::Data(&[(("3", "af"), _3_AF), (("3", "am"), _3_AF), (("3", "ar"), _3_AF), (("3", "as"), _3_AF), (("3", "ast"), _3_AST), (("3", "az"), _3_AF), (("3", "be"), _3_BE), (("3", "bg"), _3_AF), (("3", "bgc"), _3_AF), (("3", "bho"), _3_AF), (("3", "blo"), _3_AF), (("3", "bn"), _3_AF), (("3", "br"), _3_BR), (("3", "brx"), _3_AF), (("3", "bs"), _3_AF), (("3", "bs-Cyrl"), _3_BS_CYRL), (("3", "ca"), _3_CA), (("3", "ceb"), _3_AF), (("3", "chr"), _3_AF), (("3", "cs"), _3_AF), (("3", "csw"), _3_AF), (("3", "cv"), _3_AF), (("3", "cy"), _3_AF), (("3", "da"), _3_AF), (("3", "de"), _3_AF), (("3", "doi"), _3_AF), (("3", "dsb"), _3_AF), (("3", "el"), _3_AF), (("3", "en"), _3_AF), (("3", "eo"), _3_AF), (("3", "es"), _3_AF), (("3", "et"), _3_ET), (("3", "eu"), _3_EU), (("3", "fa"), _3_FA), (("3", "ff-Adlm"), _3_FF_ADLM), (("3", "fi"), _3_AF), (("3", "fil"), _3_AF), (("3", "fo"), _3_AF), (("3", "fr"), _3_FR), (("3", "fy"), _3_AF), (("3", "ga"), _3_GA), (("3", "gd"), _3_AF), (("3", "gl"), _3_AF), (("3", "gu"), _3_AF), (("3", "ha"), _3_AF), (("3", "he"), _3_AF), (("3", "hi"), _3_HI), (("3", "hr"), _3_AF), (("3", "hsb"), _3_AF), (("3", "hu"), _3_ET), (("3", "hy"), _3_AF), (("3", "ia"), _3_AF), (("3", "id"), _3_AST), (("3", "ie"), _3_AF), (("3", "ig"), _3_AF), (("3", "is"), _3_IS), (("3", "it"), _3_AST), (("3", "ja"), _3_AF), (("3", "jv"), _3_AF), (("3", "ka"), _3_AF), (("3", "kea"), _3_AF), (("3", "kgp"), _3_AF), (("3", "kk"), _3_AF), (("3", "km"), _3_AF), (("3", "kn"), _3_AF), (("3", "ko"), _3_KO), (("3", "kok"), _3_AF), (("3", "ks"), _3_AF), (("3", "ks-Deva"), _3_AF), (("3", "ku"), _3_AF), (("3", "kxv"), _3_AF), (("3", "kxv-Deva"), _3_AF), (("3", "kxv-Orya"), _3_AF), (("3", "kxv-Telu"), _3_AF), (("3", "ky"), _3_AF), (("3", "lb"), _3_AF), (("3", "lij"), _3_AF), (("3", "lmo"), _3_AF), (("3", "lo"), _3_LO), (("3", "lt"), _3_AF), (("3", "lv"), _3_LV), (("3", "mai"), _3_AF), (("3", "mi"), _3_AF), (("3", "mk"), _3_AF), (("3", "ml"), _3_AF), (("3", "mn"), _3_AF), (("3", "mni"), _3_AF), (("3", "mr"), _3_MR), (("3", "ms"), _3_AF), (("3", "mt"), _3_AF), (("3", "my"), _3_AF), (("3", "nds"), _3_AF), (("3", "ne"), _3_AF), (("3", "nl"), _3_AF), (("3", "no"), _3_AF), (("3", "nqo"), _3_AF), (("3", "oc"), _3_AF), (("3", "or"), _3_AF), (("3", "pa"), _3_PA), (("3", "pcm"), _3_AF), (("3", "pl"), _3_PL), (("3", "prg"), _3_AF), (("3", "ps"), _3_AF), (("3", "pt"), _3_AF), (("3", "qu"), _3_AF), (("3", "raj"), _3_AF), (("3", "rm"), _3_AF), (("3", "ro"), _3_PL), (("3", "ru"), _3_AF), (("3", "sa"), _3_AF), (("3", "sah"), _3_AF), (("3", "sat"), _3_AF), (("3", "sc"), _3_SC), (("3", "sd"), _3_AF), (("3", "sd-Deva"), _3_AF), (("3", "si"), _3_AF), (("3", "sk"), _3_AF), (("3", "sl"), _3_SL), (("3", "so"), _3_AF), (("3", "sq"), _3_AF), (("3", "sr"), _3_BS_CYRL), (("3", "sr-Latn"), _3_AF), (("3", "su"), _3_AF), (("3", "sv"), _3_AF), (("3", "sw"), _3_AF), (("3", "syr"), _3_AF), (("3", "szl"), _3_AF), (("3", "ta"), _3_AF), (("3", "te"), _3_AF), (("3", "tg"), _3_AF), (("3", "th"), _3_TH), (("3", "ti"), _3_AF), (("3", "tk"), _3_AF), (("3", "to"), _3_AF), (("3", "tr"), _3_AF), (("3", "tt"), _3_AF), (("3", "ug"), _3_AF), (("3", "uk"), _3_UK), (("3", "und"), _3_AF), (("3", "ur"), _3_AF), (("3", "uz"), _3_AF), (("3", "uz-Cyrl"), _3_AF), (("3", "vec"), _3_AF), (("3", "vi"), _3_AF), (("3", "vmw"), _3_AF), (("3", "wo"), _3_AF), (("3", "xh"), _3_AF), (("3", "xnr"), _3_AF), (("3", "yo"), _3_AF), (("3", "yrl"), _3_AF), (("3", "yue"), _3_YUE), (("3", "yue-Hans"), _3_YUE_HANS), (("3", "za"), _3_AF), (("3", "zh"), _3_YUE_HANS), (("3", "zh-Hant"), _3_YUE), (("3", "zu"), _3_AF), (("4", "af"), _3_AF), (("4", "am"), _3_AF), (("4", "ar"), _3_AF), (("4", "as"), _3_AF), (("4", "ast"), _3_AST), (("4", "az"), _3_AF), (("4", "be"), _3_BE), (("4", "bg"), _3_AF), (("4", "bgc"), _3_AF), (("4", "bho"), _3_AF), (("4", "blo"), _3_AF), (("4", "bn"), _3_AF), (("4", "br"), _4_BR), (("4", "brx"), _3_AF), (("4", "bs"), _3_AF), (("4", "bs-Cyrl"), _3_BS_CYRL), (("4", "ca"), _3_CA), (("4", "ceb"), _3_AF), (("4", "chr"), _3_AF), (("4", "cs"), _3_AF), (("4", "csw"), _3_AF), (("4", "cv"), _3_AF), (("4", "cy"), _3_AF), (("4", "da"), _3_AF), (("4", "de"), _3_AF), (("4", "doi"), _3_AF), (("4", "dsb"), _3_AF), (("4", "el"), _3_AF), (("4", "en"), _3_AF), (("4", "eo"), _3_AF), (("4", "es"), _3_AF), (("4", "et"), _3_ET), (("4", "eu"), _3_EU), (("4", "fa"), _3_FA), (("4", "ff-Adlm"), _3_FF_ADLM), (("4", "fi"), _3_AF), (("4", "fil"), _3_AF), (("4", "fo"), _3_AF), (("4", "fr"), _3_AST), (("4", "fy"), _3_AF), (("4", "ga"), _3_GA), (("4", "gd"), _3_AF), (("4", "gl"), _3_AF), (("4", "gu"), _3_AF), (("4", "ha"), _3_AF), (("4", "he"), _3_AF), (("4", "hi"), _3_HI), (("4", "hr"), _3_AF), (("4", "hsb"), _3_AF), (("4", "hu"), _3_ET), (("4", "hy"), _3_AF), (("4", "ia"), _3_AF), (("4", "id"), _3_AST), (("4", "ie"), _3_AF), (("4", "ig"), _3_AF), (("4", "is"), _3_IS), (("4", "it"), _3_AST), (("4", "ja"), _3_AF), (("4", "jv"), _3_AF), (("4", "ka"), _3_AF), (("4", "kea"), _3_AF), (("4", "kgp"), _3_AST), (("4", "kk"), _3_AF), (("4", "km"), _3_AF), (("4", "kn"), _3_AF), (("4", "ko"), _3_KO), (("4", "kok"), _3_AF), (("4", "ks"), _3_AF), (("4", "ks-Deva"), _3_AF), (("4", "ku"), _3_AF), (("4", "kxv"), _3_AF), (("4", "kxv-Deva"), _3_AF), (("4", "kxv-Orya"), _3_AF), (("4", "kxv-Telu"), _3_AF), (("4", "ky"), _3_AF), (("4", "lb"), _3_AF), (("4", "lij"), _3_AF), (("4", "lmo"), _3_AF), (("4", "lo"), _3_LO), (("4", "lt"), _3_AF), (("4", "lv"), _3_LV), (("4", "mai"), _3_AF), (("4", "mi"), _3_AF), (("4", "mk"), _3_AF), (("4", "ml"), _3_AF), (("4", "mn"), _3_AF), (("4", "mni"), _3_AF), (("4", "mr"), _3_MR), (("4", "ms"), _3_AF), (("4", "mt"), _3_AF), (("4", "my"), _3_AF), (("4", "nds"), _3_AF), (("4", "ne"), _3_AF), (("4", "nl"), _3_AF), (("4", "no"), _3_AF), (("4", "nqo"), _3_AF), (("4", "oc"), _3_AF), (("4", "or"), _3_AF), (("4", "pa"), _4_PA), (("4", "pcm"), _3_AF), (("4", "pl"), _3_PL), (("4", "prg"), _3_AF), (("4", "ps"), _3_AF), (("4", "pt"), _3_AST), (("4", "pt-PT"), _3_AF), (("4", "qu"), _3_AF), (("4", "raj"), _3_AF), (("4", "rm"), _3_AF), (("4", "ro"), _3_PL), (("4", "ru"), _4_RU), (("4", "sa"), _3_AF), (("4", "sah"), _3_AF), (("4", "sat"), _3_AF), (("4", "sc"), _3_AST), (("4", "sd"), _3_AF), (("4", "sd-Deva"), _3_AF), (("4", "si"), _3_AF), (("4", "sk"), _3_AF), (("4", "sl"), _3_ET), (("4", "so"), _3_AF), (("4", "sq"), _3_AF), (("4", "sr"), _3_BS_CYRL), (("4", "sr-Latn"), _3_AF), (("4", "su"), _3_AF), (("4", "sv"), _3_AF), (("4", "sw"), _3_AF), (("4", "syr"), _3_AF), (("4", "szl"), _3_AF), (("4", "ta"), _3_AF), (("4", "te"), _3_AF), (("4", "tg"), _3_AF), (("4", "th"), _3_TH), (("4", "ti"), _3_AF), (("4", "tk"), _3_AF), (("4", "to"), _3_AF), (("4", "tr"), _3_AF), (("4", "tt"), _3_AF), (("4", "ug"), _3_AF), (("4", "uk"), _4_UK), (("4", "und"), _3_AF), (("4", "ur"), _3_AF), (("4", "uz"), _3_AF), (("4", "uz-Cyrl"), _3_AF), (("4", "vec"), _3_AF), (("4", "vi"), _3_AF), (("4", "vmw"), _3_AF), (("4", "wo"), _3_AF), (("4", "xh"), _3_AF), (("4", "xnr"), _3_AF), (("4", "yo"), _3_AF), (("4", "yrl"), _3_AST), (("4", "yue"), _3_YUE), (("4", "yue-Hans"), _3_YUE_HANS), (("4", "za"), _3_AF), (("4", "zh"), _3_YUE_HANS), (("4", "zh-Hant"), _3_YUE), (("4", "zu"), _3_AF), (("5", "af"), _3_AF), (("5", "am"), _3_AF), (("5", "ar"), _5_AR), (("5", "as"), _3_AF), (("5", "ast"), _5_AST), (("5", "az"), _3_AF), (("5", "be"), _3_BE), (("5", "bg"), _3_AF), (("5", "bgc"), _3_AF), (("5", "bho"), _3_AF), (("5", "blo"), _3_AF), (("5", "bn"), _3_AF), (("5", "br"), _5_BR), (("5", "brx"), _3_AF), (("5", "bs"), _3_AF), (("5", "bs-Cyrl"), _3_BS_CYRL), (("5", "ca"), _3_CA), (("5", "ceb"), _3_AF), (("5", "chr"), _3_AF), (("5", "cs"), _3_AF), (("5", "csw"), _3_AF), (("5", "cv"), _3_AF), (("5", "cy"), _3_AF), (("5", "da"), _3_AF), (("5", "de"), _3_LV), (("5", "doi"), _3_AF), (("5", "dsb"), _3_AF), (("5", "el"), _5_EL), (("5", "en"), _3_AF), (("5", "eo"), _3_AF), (("5", "es"), _3_AF), (("5", "et"), _3_ET), (("5", "eu"), _3_EU), (("5", "fa"), _3_FA), (("5", "ff-Adlm"), _5_FF_ADLM), (("5", "fi"), _5_FI), (("5", "fil"), _3_AF), (("5", "fo"), _3_AF), (("5", "fr"), _5_FR), (("5", "fy"), _3_AF), (("5", "ga"), _3_GA), (("5", "gd"), _3_AF), (("5", "gl"), _3_AF), (("5", "gu"), _3_AF), (("5", "ha"), _3_AF), (("5", "he"), _5_HE), (("5", "hi"), _3_HI), (("5", "hr"), _3_AF), (("5", "hsb"), _3_AF), (("5", "hu"), _3_ET), (("5", "hy"), _3_AF), (("5", "ia"), _3_AF), (("5", "id"), _5_ID), (("5", "ie"), _3_AF), (("5", "ig"), _3_AF), (("5", "is"), _5_IS), (("5", "it"), _3_AST), (("5", "ja"), _5_JA), (("5", "jv"), _3_AF), (("5", "ka"), _3_AF), (("5", "kea"), _3_AF), (("5", "kgp"), _3_AST), (("5", "kk"), _3_AF), (("5", "km"), _3_AF), (("5", "kn"), _3_AF), (("5", "ko"), _3_KO), (("5", "kok"), _3_AF), (("5", "ks"), _3_AF), (("5", "ks-Deva"), _3_AF), (("5", "ku"), _3_AF), (("5", "kxv"), _3_AF), (("5", "kxv-Deva"), _3_AF), (("5", "kxv-Orya"), _3_AF), (("5", "kxv-Telu"), _3_AF), (("5", "ky"), _3_AF), (("5", "lb"), _3_AF), (("5", "lij"), _3_AF), (("5", "lmo"), _3_AF), (("5", "lo"), _3_LO), (("5", "lt"), _3_AF), (("5", "lv"), _5_LV), (("5", "mai"), _3_AF), (("5", "mi"), _3_AF), (("5", "mk"), _3_AF), (("5", "ml"), _3_AF), (("5", "mn"), _3_AF), (("5", "mni"), _3_AF), (("5", "mr"), _5_MR), (("5", "ms"), _3_AF), (("5", "mt"), _3_AF), (("5", "my"), _3_AF), (("5", "nds"), _3_AF), (("5", "ne"), _3_AF), (("5", "nl"), _3_AF), (("5", "no"), _3_AF), (("5", "nqo"), _3_AF), (("5", "oc"), _3_AF), (("5", "or"), _3_AF), (("5", "pa"), _3_PA), (("5", "pcm"), _3_AF), (("5", "pl"), _3_PL), (("5", "prg"), _3_AF), (("5", "ps"), _3_AF), (("5", "pt"), _3_AST), (("5", "pt-PT"), _3_AF), (("5", "qu"), _3_AF), (("5", "raj"), _3_AF), (("5", "rm"), _3_AF), (("5", "ro"), _5_RO), (("5", "ru"), _5_RU), (("5", "sa"), _3_AF), (("5", "sah"), _3_AF), (("5", "sat"), _3_AF), (("5", "sc"), _5_SC), (("5", "sd"), _3_AF), (("5", "sd-Deva"), _3_AF), (("5", "si"), _3_AF), (("5", "sk"), _3_AF), (("5", "sl"), _5_SL), (("5", "so"), _3_AF), (("5", "sq"), _3_AF), (("5", "sr"), _3_BS_CYRL), (("5", "sr-Latn"), _3_AF), (("5", "su"), _3_AF), (("5", "sv"), _5_SV), (("5", "sw"), _3_AF), (("5", "syr"), _3_AF), (("5", "szl"), _3_AF), (("5", "ta"), _3_AF), (("5", "te"), _3_AF), (("5", "tg"), _3_AF), (("5", "th"), _5_TH), (("5", "ti"), _3_AF), (("5", "tk"), _3_AF), (("5", "to"), _3_AF), (("5", "tr"), _3_AF), (("5", "tt"), _3_AF), (("5", "ug"), _5_UG), (("5", "uk"), _3_UK), (("5", "und"), _3_AF), (("5", "ur"), _3_AF), (("5", "uz"), _3_AF), (("5", "uz-Cyrl"), _3_AF), (("5", "vec"), _3_AF), (("5", "vi"), _3_AF), (("5", "vmw"), _3_AF), (("5", "wo"), _3_AF), (("5", "xh"), _3_AF), (("5", "xnr"), _3_AF), (("5", "yo"), _3_AF), (("5", "yrl"), _3_AST), (("5", "yue"), _3_YUE), (("5", "yue-Hans"), _3_YUE_HANS), (("5", "za"), _3_AF), (("5", "zh"), _3_YUE_HANS), (("5", "zh-Hant"), _3_YUE), (("5", "zu"), _3_AF)])
            };
        }
        #[clippy::msrv = "1.70"]
        impl icu_provider::DataProvider<icu::datetime::provider::neo::BuddhistYearNamesV1Marker> for $provider {
            fn load(&self, req: icu_provider::DataRequest) -> Result<icu_provider::DataResponse<icu::datetime::provider::neo::BuddhistYearNamesV1Marker>, icu_provider::DataError> {
                let mut metadata = icu_provider::DataResponseMetadata::default();
                let payload = if let Some(payload) = icu_provider_baked::DataStore::get(&Self::DATA_BUDDHIST_YEAR_NAMES_V1_MARKER, req.id) {
                    payload
                } else {
                    const FALLBACKER: icu::locale::fallback::LocaleFallbackerWithConfig<'static> = icu::locale::fallback::LocaleFallbacker::new().for_config(<icu::datetime::provider::neo::BuddhistYearNamesV1Marker as icu_provider::DataMarker>::INFO.fallback_config);
                    let mut fallback_iterator = FALLBACKER.fallback_for(req.id.locale.clone());
                    loop {
                        if let Some(payload) = icu_provider_baked::DataStore::get(&Self::DATA_BUDDHIST_YEAR_NAMES_V1_MARKER, icu_provider::DataIdentifierBorrowed::for_marker_attributes_and_locale(req.id.marker_attributes, fallback_iterator.get())) {
                            metadata.locale = Some(fallback_iterator.take());
                            break payload;
                        }
                        if fallback_iterator.get().is_und() {
                            return Err(icu_provider::DataErrorKind::MissingLocale.with_req(<icu::datetime::provider::neo::BuddhistYearNamesV1Marker as icu_provider::DataMarker>::INFO, req));
                        }
                        fallback_iterator.step();
                    }
                };
                Ok(icu_provider::DataResponse { payload: icu_provider::DataPayload::from_static_ref(payload), metadata })
            }
        }
        impl icu_provider::CanLoad<icu::datetime::provider::neo::BuddhistYearNamesV1Marker> for $provider {
            fn can_load(&self, req: icu_provider::DataRequest) -> Result<bool, icu_provider::DataError> {
                Ok(icu_provider_baked::DataStore::contains(&Self::DATA_BUDDHIST_YEAR_NAMES_V1_MARKER, req.id))
            }
        }
    };
    ($ provider : ty , ITER) => {
        __impl_buddhist_year_names_v1_marker!($provider);
        #[clippy::msrv = "1.70"]
        impl icu_provider::IterableDataProvider<icu::datetime::provider::neo::BuddhistYearNamesV1Marker> for $provider {
            fn iter_ids(&self) -> Result<std::collections::HashSet<icu_provider::DataIdentifierCow<'static>>, icu_provider::DataError> {
                Ok(icu_provider_baked::DataStore::iter(&Self::DATA_BUDDHIST_YEAR_NAMES_V1_MARKER).collect())
            }
        }
    };
}
#[doc(inline)]
pub use __impl_buddhist_year_names_v1_marker as impl_buddhist_year_names_v1_marker;
