// @generated
/// Implement `DataProvider<ChineseDateNeoSkeletonPatternsV1Marker>` on the given struct using the data
/// hardcoded in this file. This allows the struct to be used with
/// `icu`'s `_unstable` constructors.
#[doc(hidden)]
#[macro_export]
macro_rules! __impl_chinese_date_neo_skeleton_patterns_v1_marker {
    ($ provider : ty) => {
        #[clippy::msrv = "1.70"]
        const _: () = <$provider>::MUST_USE_MAKE_PROVIDER_MACRO;
        #[clippy::msrv = "1.70"]
        impl $provider {
            const DATA_CHINESE_DATE_NEO_SKELETON_PATTERNS_V1_MARKER: icu_provider_baked::binary_search::Data<icu_provider_baked::binary_search::AttributesAndLocale, icu::datetime::provider::neo::ChineseDateNeoSkeletonPatternsV1Marker> = {
                type S = <icu::datetime::provider::neo::ChineseDateNeoSkeletonPatternsV1Marker as icu_provider::DynamicDataMarker>::Yokeable;
                const _A1E_AF: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\"\0;\0\0\x80\x13\x01\0\0(\x80\x12\x01\0\0)\0\0 \x80 \x04\0\0 \x80@\x01\0\0,\0\0 \x80P\x04\0\x80\x13\x01\0\0 \x80 \x03\0\0 \x80@\x01\0\0,\0\0 \x80P\x01\0\x80\x13\x01\0\0-\x80 \x01\0\0-\x80@\x01\0\0,\0\0 \x80P\x01") } };
                const _A1E_BR: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\"\0;\0\0\x80P\x04\0\0 \x80@\x01\0\0 \x80 \x04\0\0 \x80\x13\x01\0\0 \0\0(\x80\x12\x01\0\0)\0\x80\x13\x01\0\0 \x80 \x03\0\0 \x80@\x01\0\0,\0\0 \x80P\x01\0\x80\x13\x01\0\0-\x80 \x01\0\0-\x80@\x01\0\0,\0\0 \x80P\x01") } };
                const _A1E_BS: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\x1C\x005\0\0\x80P\x01\0\0,\0\0 \x80@\x01\0\0.\x80 \x01\0\0.\x80\x10\x01\0\0.\0\x80\x13\x01\0\0 \x80 \x03\0\0 \x80@\x01\0\0,\0\0 \x80P\x01\0\x80\x13\x01\0\0-\x80 \x01\0\0-\x80@\x01\0\0,\0\0 \x80P\x01") } };
                const _A1E_CA: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\x19\x002\0\0\x80P\x04\0\0,\0\0 \x80@\x02\0\0 \x80 \x04\0\0 \x80\x12\x02\0\x80\x13\x01\0\0 \x80 \x03\0\0 \x80@\x01\0\0,\0\0 \x80P\x01\0\x80\x13\x01\0\0-\x80 \x01\0\0-\x80@\x01\0\0,\0\0 \x80P\x01") } };
                const _A1E_CS: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\x1F\08\0\0\x80P\x04\0\0,\0\0 \x80@\x01\0\0.\0\0 \x80 \x01\0\0.\0\0 \x80\x10\x01\0\x80\x13\x01\0\0 \x80 \x03\0\0 \x80@\x01\0\0,\0\0 \x80P\x01\0\x80\x13\x01\0\0-\x80 \x01\0\0-\x80@\x01\0\0,\0\0 \x80P\x01") } };
                const _A1E_DE: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\x1C\08\0\0\x80P\x04\0\0,\0\0 \x80@\x01\0\0.\0\0 \x80 \x04\0\0 \x80\x12\x01\0\x80P\x01\0\0,\0\0 \x80@\x01\0\0.\0\0 \x80 \x03\0\0 \x80\x12\x01\0\x80P\x01\0\0,\0\0 \x80@\x01\0\0.\x80 \x01\0\0.\x80\x10\x01") } };
                const _A1E_EN: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0%\0A\0\0\x80P\x04\0\0,\0\0 \x80 \x04\0\0 \x80@\x01\0\0,\0\0 \x80\x13\x01\0\0(\x80\x12\x01\0\0)\0\x80P\x01\0\0,\0\0 \x80 \x03\0\0 \x80@\x01\0\0,\0\0 \x80\x13\x01\0\x80P\x01\0\0,\0\0 \x80 \x01\0\0/\x80@\x01\0\0/\x80\x13\x01") } };
                const _A1E_EN_001: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\"\0;\0\0\x80P\x04\0\0,\0\0 \x80@\x01\0\0 \x80 \x04\0\0 \x80\x13\x01\0\0(\x80\x12\x01\0\0)\0\x80P\x01\0\0,\0\0 \x80@\x01\0\0 \x80 \x03\0\0 \x80\x13\x01\0\x80P\x01\0\0,\0\0 \x80@\x01\0\0/\x80 \x01\0\0/\x80\x13\x01") } };
                const _A1E_EN_AE: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\"\0D\0\0\x80P\x04\0\0,\0\0 \x80@\x01\0\0 \x80 \x04\0\0 \x80\x13\x01\0\0(\x80\x12\x01\0\0)\0\x80P\x01\0\0,\0\0 \x80@\x01\0\0 \x80 \x03\0\0 \x80\x13\x01\0\0(\x80\x12\x01\0\0)\0\x80P\x01\0\0,\0\0 \x80@\x01\0\0/\x80 \x01\0\0/\x80\x13\x01") } };
                const _A1E_EN_CA: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0(\0M\0\0\x80P\x04\0\0,\0\0 \x80 \x04\0\0 \x80@\x01\0\0,\0\0 \x80\x13\x01\0\0 \0\0(\x80\x12\x01\0\0)\0\x80P\x01\0\0,\0\0 \x80 \x03\0\0 \x80@\x01\0\0,\0\0 \x80\x13\x01\0\0(\x80\x12\x01\0\0)\0\x80P\x01\0\0,\0\0 \x80\x13\x01\0\0-\x80 \x01\0\0-\x80@\x01") } };
                const _A1E_EN_CH: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\"\0;\0\0\x80P\x04\0\0,\0\0 \x80@\x01\0\0 \x80 \x04\0\0 \x80\x13\x01\0\0(\x80\x12\x01\0\0)\0\x80P\x01\0\0,\0\0 \x80@\x01\0\0 \x80 \x03\0\0 \x80\x13\x01\0\x80P\x01\0\0,\0\0 \x80@\x01\0\0.\x80 \x01\0\0.\x80\x13\x01") } };
                const _A1E_ES: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x19\0\0\x80P\x04\0\0,\0\0 \x80@\x01\0\0-\x80 \x01\0\0-\x80\x13\x01\0\x80P\x01\0\0,\0\0 \x80@\x01\0\0-\x80 \x01\0\0-\x80\x13\x01") } };
                const _A1E_FF_ADLM: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\x19\x002\0\0\x80P\x04\0.A\0\0 \x80@\x01\0\0 \x80 \x04\0\0 \x80\x12\x01\0\x80P\x01\0\0,\0\0 \x80@\x01\0\0 \x80 \x03\0\0 \x80\x13\x01\0\x80P\x01\0\0,\0\0 \x80@\x01\0\0-\x80 \x01\0\0-\x80\x13\x01") } };
                const _A1E_FI: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x16\0\0\x80R\x04\0\0 \x80@\x01\0\0.\x80 \x01\0\0.\x80\x10\x01\0\x80P\x01\0\0 \x80@\x01\0\0.\x80 \x01\0\0.\x80\x10\x01") } };
                const _A1E_FR: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\x16\0,\0\0\x80P\x04\0\0 \x80@\x01\0\0 \x80 \x04\0\0 \x80\x12\x01\0\x80P\x01\0\0 \x80@\x01\0\0 \x80 \x03\0\0 \x80\x12\x01\0\x80P\x01\0\0 \x80@\x01\0\0/\x80 \x01\0\0/\x80\x10\x01") } };
                const _A1E_FY: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\x16\0,\0\0\x80P\x04\0\0 \x80@\x01\0\0 \x80 \x04\0\0 \x80\x12\x01\0\x80P\x01\0\0 \x80@\x01\0\0 \x80 \x03\0\0 \x80\x12\x01\0\x80P\x01\0\0 \x80@\x01\0\0-\x80 \x01\0\0-\x80\x10\x01") } };
                const _A1E_GD: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0(\0P\0\0\x80P\x04\0\0,\0\0 \x80@\x01\0\0m\0\0h\0\0 \x80 \x04\0\0 \x80\x13\x01\0\0(\x80\x12\x01\0\0)\0\x80P\x01\0\0,\0\0 \x80@\x01\0\0m\0\0h\0\0 \x80 \x03\0\0 \x80\x13\x01\0\0(\x80\x12\x01\0\0)\0\x80P\x01\0\0,\0\0 \x80@\x01\0\0/\x80 \x01\0\0/\x80\x13\x01") } };
                const _A1E_HR: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\"\0;\0\0\x80P\x01\0\0,\0\0 \x80@\x01\0\0.\0\0 \x80 \x01\0\0.\0\0 \x80\x10\x01\0\0.\0\x80\x13\x01\0\0 \x80 \x03\0\0 \x80@\x01\0\0,\0\0 \x80P\x01\0\x80\x13\x01\0\0-\x80 \x01\0\0-\x80@\x01\0\0,\0\0 \x80P\x01") } };
                const _A1E_ID: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\x19\x002\0\0\x80P\x04\0\0,\0\0 \x80\x12\x01\0\0 \x80 \x04\0\0 \x80@\x02\0\x80\x13\x01\0\0 \x80 \x03\0\0 \x80@\x01\0\0,\0\0 \x80P\x01\0\x80\x13\x01\0\0-\x80 \x01\0\0-\x80@\x01\0\0,\0\0 \x80P\x01") } };
                const _A1E_IT: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\x16\0/\0\0\x80P\x04\0\0 \x80@\x01\0\0 \x80 \x04\0\0 \x80\x12\x01\0\x80\x13\x01\0\0 \x80 \x03\0\0 \x80@\x01\0\0,\0\0 \x80P\x01\0\x80\x13\x01\0\0-\x80 \x01\0\0-\x80@\x01\0\0,\0\0 \x80P\x01") } };
                const _A1E_JA: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\x13\0,\0\0\x80\x12\x01\0^t\x80 \x03\x80@\x01\0e\xE5\x80P\x04\0\x80\x12\x01\0^t\x80 \x03\x80@\x01\0e\xE5\0\0(\x80P\x01\0\0)\0\x80\x12\x01\0^t\x80 \x01\0g\x08\x80@\x01\0e\xE5\0\0(\x80P\x01\0\0)") } };
                const _A1E_KGP: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0%\0>\0\0\x80P\x04\0\0,\0\0 \x80@\x01\0\0 \0\0n\0\0e\0\0 \x80 \x04\0\0,\0\0 \x80\x12\x01\0\x80\x13\x01\0\0 \x80 \x03\0\0 \x80@\x01\0\0,\0\0 \x80P\x01\0\x80\x13\x01\0\0-\x80 \x01\0\0-\x80@\x01\0\0,\0\0 \x80P\x01") } };
                const _A1E_KO: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\x1C\0J\0\0\x80\x12\x01\0\xB1D\0\0 \x80 \x03\0\0 \x80@\x01\0\xC7|\0\0 \x80P\x04\0\x80\x13\x01\0\xB1D\0\0(\x80\x12\x01\0\xB1D\0\0)\0\0 \x80 \x03\0\0 \x80@\x01\0\xC7|\0\0 \0\0(\x80P\x01\0\0)\0\x80\x13\x01\0\0.\0\0 \x80 \x01\0\0.\0\0 \x80@\x01\0\0.\0\0 \0\0(\x80P\x01\0\0)") } };
                const _A1E_LB: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\x1C\x005\0\0\x80P\x04\0\0,\0\0 \x80@\x01\0\0.\0\0 \x80 \x04\0\0 \x80\x12\x01\0\x80\x13\x01\0\0 \x80 \x03\0\0 \x80@\x01\0\0,\0\0 \x80P\x01\0\x80\x13\x01\0\0-\x80 \x01\0\0-\x80@\x01\0\0,\0\0 \x80P\x01") } };
                const _A1E_LT: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\x19\x002\0\0\x80\x12\x01\0\0 \x80 \x04\0\0 \x80@\x01\0\0,\0\0 \x80P\x04\0\x80\x12\x01\0\0 \x80 \x03\0\0 \x80@\x01\0\0,\0\0 \x80P\x01\0\x80\x10\x01\0\0-\x80 \x01\0\0-\x80@\x01\0\0,\0\0 \x80P\x01") } };
                const _A1E_MN: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0@\0Y\0\0\x80\x13\x01\0\0(\x80\x12\x01\0\0)\0\0 \0\x04>\0\x04=\0\x04K\0\0 \x80 \x02\0\0 \0\x04A\0\x040\0\x04@\0\x04K\0\x04=\0\0 \x80@\x01\0\0,\0\0 \x80P\x04\0\x80\x13\x01\0\0 \x80 \x03\0\0 \x80@\x01\0\0,\0\0 \x80P\x01\0\x80\x13\x01\0\0-\x80 \x01\0\0-\x80@\x01\0\0,\0\0 \x80P\x01") } };
                const _A1E_MS: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\"\0;\0\0\x80P\x04\0\0,\0\0 \x80@\x01\0\0 \x80 \x04\0\0 \x80\x13\x01\0\0(\x80\x12\x01\0\0)\0\x80\x13\x01\0\0 \x80 \x03\0\0 \x80@\x01\0\0,\0\0 \x80P\x01\0\x80\x13\x01\0\0-\x80 \x01\0\0-\x80@\x01\0\0,\0\0 \x80P\x01") } };
                const _A1E_NO: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\"\0D\0\0\x80P\x04\0\0 \x80@\x01\0\0.\0\0 \x80 \x04\0\0 \x80\x13\x01\0\0(\x80\x12\x01\0\0)\0\x80P\x01\0\0 \x80@\x01\0\0.\0\0 \x80 \x03\0\0 \x80\x13\x01\0\0(\x80\x12\x01\0\0)\0\x80P\x01\0\0 \x80@\x01\0\0.\x80 \x01\0\0.\x80\x13\x01") } };
                const _A1E_PL: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\x19\x002\0\0\x80P\x04\0\0,\0\0 \x80@\x01\0\0 \x80 \x04\0\0 \x80\x12\x01\0\x80\x13\x01\0\0 \x80 \x03\0\0 \x80@\x01\0\0,\0\0 \x80P\x01\0\x80\x13\x01\0\0-\x80 \x01\0\0-\x80@\x01\0\0,\0\0 \x80P\x01") } };
                const _A1E_PT: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0+\0V\0\0\x80P\x04\0\0,\0\0 \x80@\x01\0\0 \0\0d\0\0e\0\0 \x80 \x04\0\0 \0\0d\0\0e\0\0 \x80\x12\x01\0\x80P\x01\0\0,\0\0 \x80@\x01\0\0 \0\0d\0\0e\0\0 \x80 \x03\0\0 \0\0d\0\0e\0\0 \x80\x12\x01\0\x80P\x01\0\0,\0\0 \x80@\x01\0\0/\x80 \x01\0\0/\x80\x13\x01") } };
                const _A1E_RU: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\x19\x002\0\0\x80P\x04\0\0,\0\0 \x80@\x01\0\0 \x80 \x04\0\0 \x80\x12\x01\0\x80P\x01\0\0,\0\0 \x80@\x01\0\0 \x80 \x03\0\0 \x80\x12\x01\0\x80P\x01\0\0,\0\0 \x80@\x01\0\0.\x80 \x01\0\0.\x80\x10\x01") } };
                const _A1E_SC: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0=\0_\0\0\x80P\x04\0\0 \x80@\x02\0\0 \0\0d\0\0e\0\0 \x80 \x04\0\0 \0\0d\0\0e\0\0 \0\0s\0\0u\0\0 \x80\x13\x01\0\0 \0\0(\x80\x12\x01\0\0)\0\x80P\x01\0\0 \x80@\x01\0\0 \x80 \x03\0\0 \x80\x13\x01\0\0 \0\0(\x80\x12\x01\0\0)\0\x80P\x01\0\0 \x80@\x01\0\0/\x80 \x01\0\0/\x80\x13\x01") } };
                const _A1E_SV: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\x1F\0>\0\0\x80P\x04\0\0 \x80@\x01\0\0 \x80 \x04\0\0 \x80\x13\x01\0\0(\x80\x12\x01\0\0)\0\x80P\x01\0\0 \x80@\x01\0\0 \x80 \x03\0\0 \x80\x13\x01\0\0(\x80\x12\x01\0\0)\0\x80P\x01\0\0 \x80\x13\x01\0\0-\x80 \x01\0\0-\x80@\x01") } };
                const _A1E_TA: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\x19\x002\0\0\x80\x12\x01\0\0 \x80 \x04\0\0 \x80@\x01\0\0,\0\0 \x80P\x04\0\x80\x13\x01\0\0 \x80 \x03\0\0 \x80@\x01\0\0,\0\0 \x80P\x01\0\x80\x13\x01\0\0-\x80 \x01\0\0-\x80@\x01\0\0,\0\0 \x80P\x01") } };
                const _A1E_TH: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\x19\x002\0\0\x80P\x04\0\0,\0\0 \x80\x12\x01\0\0 \x80 \x04\0\0 \x80@\x01\0\x80\x13\x01\0\0 \x80 \x03\0\0 \x80@\x01\0\0,\0\0 \x80P\x01\0\x80\x13\x01\0\0-\x80 \x01\0\0-\x80@\x01\0\0,\0\0 \x80P\x01") } };
                const _A1E_UG: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\x1C\x005\0\0\x80P\x04\0\x06\x0C\0\0 \x80 \x04\0\0 \x80@\x01\0\x06\x0C\0\0 \x80\x12\x01\0\x80\x13\x01\0\0 \x80 \x03\0\0 \x80@\x01\0\0,\0\0 \x80P\x01\0\x80\x13\x01\0\0-\x80 \x01\0\0-\x80@\x01\0\0,\0\0 \x80P\x01") } };
                const _A1E_VI: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\x004\0z\0\0\x80P\x04\0\0,\0\0 \0\0n\0\0g\0\0\xE0\0\0y\0\0 \x80@\x02\0\0 \x80 \x04\0\0 \0\0n\0\x01\x03\0\0m\0\0 \x80\x12\x01\0\x80P\x01\0\0,\0\0 \0\0n\0\0g\0\0\xE0\0\0y\0\0 \x80@\x01\0\0 \0\0t\0\0h\0\0\xE1\0\0n\0\0g\0\0 \x80 \x01\0\0 \0\0n\0\x01\x03\0\0m\0\0 \x80\x13\x01\0\x80P\x01\0\0,\0\0 \x80@\x01\0\0/\x80 \x01\0\0/\x80\x13\x01") } };
                const _A1E_YUE: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\x1F\x002\0\0\x80\x12\x01\0\0 \0\0(\x80\x13\x01\0\0)\0\0 \0^t\x80 \x03\x80@\x01\x80P\x04\0\x80\x13\x01\x80\x12\x01\0^t\x80 \x03\x80@\x01\x80P\x01\0\x80\x13\x01\x80\x12\x01\0^t\x80 \x03\x80@\x01\0\xFF\x0C\x80P\x01") } };
                const _A1E_YUE_HANS: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\x13\0&\0\0\x80\x13\x01\x80\x12\x01\0^t\x80 \x03\x80@\x01\x80P\x04\0\x80\x13\x01\x80\x12\x01\0^t\x80 \x03\x80@\x01\x80P\x01\0\x80\x13\x01\x80\x12\x01\0^t\x80 \x03\x80@\x01\0\xFF\x0C\x80P\x01") } };
                const _A1E_ZH_HANT: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\x16\0)\0\0\x80\x13\x01\x80\x12\x01\0^t\x80 \x03\x80@\x01\0\0 \x80P\x04\0\x80\x13\x01\x80\x12\x01\0^t\x80 \x03\x80@\x01\x80P\x01\0\x80\x13\x01\x80\x12\x01\0^t\x80 \x03\x80@\x01\0\xFF\x0C\x80P\x01") } };
                const _A1E_ZH_HK: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\x19\0,\0\0\x80\x12\x01\0\xFF\x08\x80\x13\x01\0\xFF\t\0^t\x80 \x03\x80@\x01\x80P\x04\0\x80\x13\x01\x80\x12\x01\0^t\x80 \x03\x80@\x01\x80P\x01\0\x80\x13\x01\x80\x12\x01\0^t\x80 \x03\x80@\x01\0\xFF\x0C\x80P\x01") } };
                const _A1E_ZH_SG: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\x13\0&\0\0\x80\x12\x01\0^t\x80 \x03\x80@\x01\0e\xE5\x80P\x04\0\x80\x13\x01\x80\x12\x01\0^t\x80 \x03\x80@\x01\x80P\x01\0\x80\x13\x01\x80\x12\x01\0^t\x80 \x03\x80@\x01\0\xFF\x0C\x80P\x01") } };
                const _A1_AF: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\x19\0)\0\0\x80\x13\x01\0\0(\x80\x12\x01\0\0)\0\0 \x80 \x04\0\0 \x80@\x01\0\x80\x13\x01\0\0 \x80 \x03\0\0 \x80@\x01\0\x80\x13\x01\0\0-\x80 \x02\0\0-\x80@\x02") } };
                const _A1_BR: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\x1C\0,\0\0\x80@\x01\0\0 \x80 \x04\0\0 \x80\x13\x01\0\0 \0\0(\x80\x12\x01\0\0)\0\x80@\x01\0\0 \x80 \x03\0\0 \x80\x13\x01\0\x80@\x02\0\0/\x80 \x02\0\0/\x80\x13\x01") } };
                const _A1_BS: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\0\x80@\x01\0\0.\x80 \x01\0\0.\x80\x10\x01\0\0.") } };
                const _A1_CA: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\x10\0 \0\0\x80@\x01\0\0 \x80 \x04\0\0 \x80\x12\x01\0\x80@\x01\0\0 \x80 \x03\0\0 \x80\x12\x01\0\x80@\x01\0\0/\x80 \x01\0\0/\x80\x10\x01") } };
                const _A1_CS: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\0\x80@\x01\0\0.\0\0 \x80 \x01\0\0.\0\0 \x80\x10\x01") } };
                const _A1_DE: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\x13\0#\0\0\x80@\x01\0\0.\0\0 \x80 \x04\0\0 \x80\x12\x01\0\x80@\x02\0\0.\x80 \x02\0\0 \x80\x12\x01\0\x80@\x02\0\0.\x80 \x02\0\0.\x80\x10\x02") } };
                const _A1_EN: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\x1C\0/\0\0\x80 \x04\0\0 \x80@\x01\0\0,\0\0 \x80\x13\x01\0\0(\x80\x12\x01\0\0)\0\x80 \x03\0\0 \x80@\x01\0\0,\0\0 \x80\x13\x01\0\x80 \x01\0\0/\x80@\x01\0\0/\x80\x13\x01") } };
                const _A1_EN_001: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\x19\0)\0\0\x80@\x01\0\0 \x80 \x04\0\0 \x80\x13\x01\0\0(\x80\x12\x01\0\0)\0\x80@\x01\0\0 \x80 \x03\0\0 \x80\x13\x01\0\x80@\x02\0\0/\x80 \x02\0\0/\x80\x13\x01") } };
                const _A1_EN_CA: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\x1F\x002\0\0\x80 \x04\0\0 \x80@\x01\0\0,\0\0 \x80\x13\x01\0\0 \0\0(\x80\x12\x01\0\0)\0\x80 \x03\0\0 \x80@\x01\0\0,\0\0 \x80\x13\x01\0\x80 \x01\0\0/\x80@\x01\0\0/\x80\x13\x01") } };
                const _A1_EN_CH: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\x19\0)\0\0\x80@\x01\0\0 \x80 \x04\0\0 \x80\x13\x01\0\0(\x80\x12\x01\0\0)\0\x80@\x01\0\0 \x80 \x03\0\0 \x80\x13\x01\0\x80@\x02\0\0.\x80 \x02\0\0.\x80\x13\x01") } };
                const _A1_ES: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\0\x80@\x01\0\0-\x80 \x01\0\0-\x80\x13\x01") } };
                const _A1_FF_ADLM: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\x10\0 \0\0\x80@\x01\0\0 \x80 \x04\0\0 \x80\x12\x01\0\x80@\x01\0\0 \x80 \x03\0\0 \x80\x12\x01\0\x80@\x01\0\0-\x80 \x01\0\0-\x80\x10\x01") } };
                const _A1_FI: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\0\x80@\x01\0\0.\x80 \x01\0\0.\x80\x10\x01") } };
                const _A1_FY: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\x10\0 \0\0\x80@\x01\0\0 \x80 \x04\0\0 \x80\x12\x01\0\x80@\x01\0\0 \x80 \x03\0\0 \x80\x12\x01\0\x80@\x02\0\0-\x80 \x02\0\0-\x80\x10\x02") } };
                const _A1_GD: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\x1F\0/\0\0\x80@\x01\0\0m\0\0h\0\0 \x80 \x04\0\0 \x80\x13\x01\0\0(\x80\x12\x01\0\0)\0\x80@\x01\0\0 \x80 \x03\0\0 \x80\x13\x01\0\x80@\x01\0\0/\x80 \x01\0\0/\x80\x13\x01") } };
                const _A1_HR: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\0\x80@\x01\0\0.\0\0 \x80 \x01\0\0.\0\0 \x80\x10\x01\0\0.") } };
                const _A1_ID: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\x10\0 \0\0\x80\x12\x01\0\0 \x80 \x04\0\0 \x80@\x01\0\x80\x12\x01\0\0 \x80 \x03\0\0 \x80@\x01\0\x80\x10\x01\0\0-\x80 \x01\0\0-\x80@\x01") } };
                const _A1_IT: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\x10\0 \0\0\x80@\x02\0\0 \x80 \x04\0\0 \x80\x12\x01\0\x80@\x02\0\0 \x80 \x03\0\0 \x80\x12\x01\0\x80@\x02\0\0/\x80 \x02\0\0/\x80\x10\x02") } };
                const _A1_JA: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x10\0\0\x80\x12\x01\0^t\x80 \x03\x80@\x01\0e\xE5\0\x80\x12\x01\0\0-\x80 \x01\0\0-\x80@\x01") } };
                const _A1_KGP: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\x1C\0,\0\0\x80@\x01\0\0 \0\0n\0\0e\0\0 \x80 \x04\0\0,\0\0 \x80\x12\x01\0\x80@\x02\0\0/\x80 \x02\0\0 \x80\x12\x01\0\x80@\x02\0\0/\x80 \x02\0\0/\x80\x10\x02") } };
                const _A1_KO: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\x16\0/\0\0\x80\x12\x01\0\xB1D\0\0 \x80 \x03\0\0 \x80@\x01\0\xC7|\0\x80\x10\x01\0\0.\0\0 \x80 \x01\0\0.\0\0 \x80@\x01\0\0.\0\x80\x10\x01\0\0/\x80 \x01\0\0/\x80@\x01") } };
                const _A1_LT: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\x10\0 \0\0\x80\x12\x01\0\0 \x80 \x04\0\0 \x80@\x01\0\x80\x12\x01\0\0 \x80 \x03\0\0 \x80@\x01\0\x80\x10\x01\0\0-\x80 \x02\0\0-\x80@\x02") } };
                const _A1_MN: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0=\0M\0\0\x80\x13\x01\0\0(\x80\x12\x01\0\0)\0\0 \0\x04>\0\x04=\0\x04K\0\0 \x80 \x02\0\0-\0\x04@\0\0 \0\x04A\0\x040\0\x04@\0\x04K\0\x04=\0\0 \x80@\x01\0\x80\x13\x01\0\0.\x80 \x02\0\0.\x80@\x01\0\x80\x13\x01\0\0-\x80 \x02\0\0-\x80@\x02") } };
                const _A1_MS: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\x19\0)\0\0\x80@\x01\0\0 \x80 \x04\0\0 \x80\x13\x01\0\0(\x80\x12\x01\0\0)\0\x80@\x01\0\0 \x80 \x03\0\0 \x80\x13\x01\0\x80@\x01\0\0/\x80 \x01\0\0/\x80\x13\x01") } };
                const _A1_NO: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\x1C\0/\0\0\x80@\x01\0\0.\0\0 \x80 \x04\0\0 \x80\x13\x01\0\0(\x80\x12\x01\0\0)\0\x80@\x01\0\0.\0\0 \x80 \x03\0\0 \x80\x13\x01\0\x80@\x01\0\0.\x80 \x01\0\0.\x80\x13\x01") } };
                const _A1_PL: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\x10\0 \0\0\x80@\x01\0\0 \x80 \x04\0\0 \x80\x12\x01\0\x80@\x01\0\0 \x80 \x03\0\0 \x80\x12\x01\0\x80@\x02\0\0.\x80 \x02\0\0.\x80\x10\x01") } };
                const _A1_PT: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\"\x002\0\0\x80@\x01\0\0 \0\0d\0\0e\0\0 \x80 \x04\0\0 \0\0d\0\0e\0\0 \x80\x12\x01\0\x80@\x02\0\0/\x80 \x02\0\0 \x80\x12\x01\0\x80@\x02\0\0/\x80 \x02\0\0/\x80\x13\x01") } };
                const _A1_PT_PT: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\"\0D\0\0\x80@\x01\0\0 \0\0d\0\0e\0\0 \x80 \x04\0\0 \0\0d\0\0e\0\0 \x80\x12\x01\0\x80@\x01\0\0 \0\0d\0\0e\0\0 \x80 \x03\0\0 \0\0d\0\0e\0\0 \x80\x12\x01\0\x80@\x02\0\0/\x80 \x02\0\0/\x80\x10\x02") } };
                const _A1_RU: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\x10\0 \0\0\x80@\x01\0\0 \x80 \x04\0\0 \x80\x12\x01\0\x80@\x02\0\0.\x80 \x02\0\0 \x80\x12\x01\0\x80@\x02\0\0.\x80 \x02\0\0.\x80\x10\x01") } };
                const _A1_SC: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\x007\0G\0\0\x80@\x02\0\0 \0\0d\0\0e\0\0 \x80 \x04\0\0 \0\0d\0\0e\0\0 \0\0s\0\0u\0\0 \x80\x13\x01\0\0 \0\0(\x80\x12\x01\0\0)\0\x80@\x02\0\0 \x80 \x03\0\0 \x80\x13\x01\0\x80@\x02\0\0-\x80 \x02\0\0-\x80\x13\x01") } };
                const _A1_SV: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\x19\0)\0\0\x80@\x01\0\0 \x80 \x04\0\0 \x80\x13\x01\0\0(\x80\x12\x01\0\0)\0\x80@\x01\0\0 \x80 \x03\0\0 \x80\x13\x01\0\x80\x13\x01\0\0-\x80 \x02\0\0-\x80@\x02") } };
                const _A1_TA: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\x13\0&\0\0\x80\x12\x01\0\0,\0\0 \x80@\x01\0\0 \x80 \x04\0\x80\x12\x01\0\0,\0\0 \x80@\x01\0\0 \x80 \x03\0\x80@\x02\0\0-\x80 \x02\0\0-\x80\x10\x01") } };
                const _A1_UG: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\x13\0&\0\0\x80 \x04\0\0 \x80@\x01\0\x06\x0C\0\0 \x80\x12\x01\0\x80 \x03\0\0 \x80@\x01\0\x06\x0C\0\0 \x80\x12\x01\0\x80 \x01\0\0/\x80@\x01\0\0/\x80\x10\x02") } };
                const _A1_VI: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0=\0M\0\0\0\0N\0\0g\0\0\xE0\0\0y\0\0 \x80@\x02\0\0 \0\0t\0\0h\0\0\xE1\0\0n\0\0g\0\0 \x80 \x01\0\0 \0\0n\0\x01\x03\0\0m\0\0 \x80\x12\x01\0\x80@\x02\0\0-\x80 \x02\0\0 \x80\x12\x01\0\x80@\x02\0\0/\x80 \x02\0\0/\x80\x10\x01") } };
                const _A1_YRL: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\x10\0 \0\0\x80@\x01\0\0 \x80 \x04\0\0 \x80\x12\x01\0\x80@\x02\0\0/\x80 \x02\0\0 \x80\x12\x01\0\x80@\x02\0\0/\x80 \x02\0\0/\x80\x10\x02") } };
                const _A1_YUE: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\x1C\0)\0\0\x80\x12\x01\0\0 \0\0(\x80\x13\x01\0\0)\0\0 \0^t\x80 \x03\x80@\x01\0\x80\x13\x01\0^t\x80 \x03\x80@\x01\0\x80\x13\x01\0\0/\x80 \x01\0\0/\x80@\x01") } };
                const _A1_YUE_HANS: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\x10\0\x1D\0\0\x80\x13\x01\x80\x12\x01\0^t\x80 \x03\x80@\x01\0\x80\x13\x01\0^t\x80 \x03\x80@\x01\0\x80\x13\x01\0\0/\x80 \x01\0\0/\x80@\x01") } };
                const _A1_ZH_HK: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\x16\0#\0\0\x80\x12\x01\0\xFF\x08\x80\x13\x01\0\xFF\t\0^t\x80 \x03\x80@\x01\0\x80\x12\x01\0^t\x80 \x03\x80@\x01\0\x80\x12\x01\0\0/\x80 \x01\0\0/\x80@\x01") } };
                const _A1_ZH_SG: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x10\0\0\x80\x12\x01\0^t\x80 \x03\x80@\x01\0e\xE5\0\x80\x13\x01\0\0/\x80 \x01\0\0/\x80@\x01") } };
                const _DE_AF: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\r\0\0\x80@\x01\0\0,\0\0 \x80P\x04\0\x80@\x01\0\0,\0\0 \x80P\x01") } };
                const _DE_BR: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\n\0\0\x80P\x04\0\0 \x80@\x01\0\x80P\x01\0\0 \x80@\x01") } };
                const _DE_BS: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\n\0\0\x80@\x01\0\0 \x80P\x04\0\x80@\x01\0\0 \x80P\x01") } };
                const _DE_DE: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x10\0\0\x80P\x04\0\0,\0\0 \x80@\x01\0\0.\0\x80P\x01\0\0,\0\0 \x80@\x01\0\0.") } };
                const _DE_JA: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\n\0\0\x80@\x01\0e\xE5\x80P\x04\0\x80@\x01\0e\xE5\0\0(\x80P\x01\0\0)") } };
                const _DE_KO: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\r\0\0\x80@\x01\0\xC7|\0\0 \x80P\x04\0\x80@\x01\0\xC7|\0\0 \0\0(\x80P\x01\0\0)") } };
                const _DE_NO: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\r\0\0\x80P\x04\0\0 \x80@\x01\0\0.\0\x80P\x01\0\0 \x80@\x01\0\0.") } };
                const _DE_PT: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\r\0\0\x80P\x04\0\0,\0\0 \x80@\x01\0\x80P\x01\0\0,\0\0 \x80@\x01") } };
                const _DE_VI: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x1C\0\0\x80P\x04\0\0,\0\0 \0\0n\0\0g\0\0\xE0\0\0y\0\0 \x80@\x01\0\x80P\x01\0\0,\0\0 \0\0n\0\0g\0\0\xE0\0\0y\0\0 \x80@\x01") } };
                const _DE_YUE: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\n\0\0\x80@\x01\0e\xE5\x80P\x04\0\x80@\x01\0e\xE5\x80P\x01") } };
                const _D_AF: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\0\x80@\x01") } };
                const _D_JA: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\0\x80@\x01\0e\xE5") } };
                const _D_KO: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\0\x80@\x01\0\xC7|") } };
                const _D_NO: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\0\x80@\x01\0\0.") } };
                const _E_AF: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x04\0\0\x80R\x04\0\x80R\x03") } };
                const _GYM0DE_AF: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\"\0\0\x80\x13\x01\0\0(\x80\x12\x01\0\0)\0\0 \x80 \x04\0\0 \x80@\x01\0\0,\0\0 \x80P\x04\0\x80\x13\x01\0\0 \x80 \x03\0\0 \x80@\x01\0\0,\0\0 \x80P\x01") } };
                const _GYM0DE_DE: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x1C\0\0\x80P\x04\0\0,\0\0 \x80@\x01\0\0.\0\0 \x80 \x04\0\0 \x80\x12\x01\0\x80P\x01\0\0,\0\0 \x80@\x01\0\0.\0\0 \x80 \x03\0\0 \x80\x12\x01") } };
                const _GYM0DE_EN: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0%\0\0\x80P\x04\0\0,\0\0 \x80 \x04\0\0 \x80@\x01\0\0,\0\0 \x80\x13\x01\0\0(\x80\x12\x01\0\0)\0\x80P\x01\0\0,\0\0 \x80 \x03\0\0 \x80@\x01\0\0,\0\0 \x80\x13\x01") } };
                const _GYM0DE_EN_001: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\"\0\0\x80P\x04\0\0,\0\0 \x80@\x01\0\0 \x80 \x04\0\0 \x80\x13\x01\0\0(\x80\x12\x01\0\0)\0\x80P\x01\0\0,\0\0 \x80@\x01\0\0 \x80 \x03\0\0 \x80\x13\x01") } };
                const _GYM0DE_EN_AE: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0%\0\0\x80P\x04\0\0,\0\0 \x80 \x04\0\0 \x80@\x01\0\0,\0\0 \x80\x13\x01\0\0(\x80\x12\x01\0\0)\0\x80P\x01\0\0,\0\0 \x80@\x01\0\0 \x80 \x03\0\0 \x80\x13\x01\0\0(\x80\x12\x01\0\0)") } };
                const _GYM0DE_EN_CA: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\"\0\0\x80P\x04\0\0,\0\0 \x80@\x01\0\0 \x80 \x04\0\0 \x80\x13\x01\0\0(\x80\x12\x01\0\0)\0\x80P\x01\0\0,\0\0 \x80 \x03\0\0 \x80@\x01\0\0,\0\0 \x80\x13\x01\0\0(\x80\x12\x01\0\0)") } };
                const _GYM0DE_ES: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\"\0\0\x80\x13\x01\0\0(\x80\x12\x01\0\0)\0\0 \x80 \x04\0\0 \x80@\x01\0\0,\0\0 \x80P\x04\0\x80P\x01\0\0,\0\0 \x80@\x01\0\0-\x80 \x01\0\0-\x80\x13\x01") } };
                const _GYM0DE_FF_ADLM: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0%\0\0\x80P\x04\0.A\0\0 \x80@\x01\0\0 \x80 \x04\0.A\0\0 \x80\x13\x01\0\0(\x80\x12\x01\0\0)\0\x80P\x01\0\0 \x80@\x01\0\0 \x80 \x03\0\0 \x80\x12\x01") } };
                const _GYM0DE_FR: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\"\0\0\x80\x13\x01\0\0(\x80\x12\x01\0\0)\0\0 \x80 \x04\0\0 \x80@\x01\0\0,\0\0 \x80P\x04\0\x80P\x01\0\0 \x80@\x01\0\0 \x80 \x03\0\0 \x80\x12\x01") } };
                const _GYM0DE_GD: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\"\0\0\x80\x13\x01\0\0(\x80\x12\x01\0\0)\0\0 \x80 \x04\0\0 \x80@\x01\0\0,\0\0 \x80P\x04\0\x80P\x01\0\0,\0\0 \x80@\x01\0\0m\0\0h\0\0 \x80 \x03\0\0 \x80\x13\x01\0\0(\x80\x12\x01\0\0)") } };
                const _GYM0DE_HI_LATN: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\"\0\0\x80P\x04\0\0,\0\0 \x80@\x01\0\0 \x80 \x04\0\0 \x80\x13\x01\0\0(\x80\x12\x01\0\0)\0\x80P\x01\0\0,\0\0 \x80@\x01\0\0 \x80 \x03\0\0 \x80\x13\x01\0\0(\x80\x12\x01\0\0)") } };
                const _GYM0DE_JA: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x13\0\0\x80\x12\x01\0^t\x80 \x04\x80@\x01\0e\xE5\x80P\x04\0\x80\x12\x01\0^t\x80 \x03\x80@\x01\0e\xE5\0\0(\x80P\x01\0\0)") } };
                const _GYM0DE_KO: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0(\0\0\x80\x13\x01\0\xB1D\0\0(\x80\x12\x01\0\xB1D\0\0)\0\0 \x80 \x04\0\0 \x80@\x01\0\xC7|\0\0 \x80P\x04\0\x80\x13\x01\0\xB1D\0\0(\x80\x12\x01\0\xB1D\0\0)\0\0 \x80 \x03\0\0 \x80@\x01\0\xC7|\0\0 \0\0(\x80P\x01\0\0)") } };
                const _GYM0DE_LT: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\"\0\0\x80\x13\x01\0\0(\x80\x12\x01\0\0)\0\0 \x80 \x04\0\0 \x80@\x01\0\0,\0\0 \x80P\x04\0\x80\x12\x01\0\0 \x80 \x03\0\0 \x80@\x01\0\0,\0\0 \x80P\x01") } };
                const _GYM0DE_NL: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x1F\0\0\x80P\x04\0\0 \x80@\x01\0\0 \x80 \x04\0\0 \x80\x13\x01\0\0(\x80\x12\x01\0\0)\0\x80P\x01\0\0 \x80@\x01\0\0 \x80 \x03\0\0 \x80\x12\x01") } };
                const _GYM0DE_NO: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\"\0\0\x80\x13\x01\0\0(\x80\x12\x01\0\0)\0\0 \x80 \x04\0\0 \x80@\x01\0\0,\0\0 \x80P\x04\0\x80P\x01\0\0 \x80@\x01\0\0.\0\0 \x80 \x03\0\0 \x80\x13\x01\0\0(\x80\x12\x01\0\0)") } };
                const _GYM0DE_PT: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\"\0\0\x80\x13\x01\0\0(\x80\x12\x01\0\0)\0\0 \x80 \x04\0\0 \x80@\x01\0\0,\0\0 \x80P\x04\0\x80P\x01\0\0,\0\0 \x80@\x01\0\0 \0\0d\0\0e\0\0 \x80 \x03\0\0 \0\0d\0\0e\0\0 \x80\x12\x01") } };
                const _GYM0DE_RU: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\"\0\0\x80\x13\x01\0\0(\x80\x12\x01\0\0)\0\0 \x80 \x04\0\0 \x80@\x01\0\0,\0\0 \x80P\x04\0\x80P\x01\0\0,\0\0 \x80@\x01\0\0 \x80 \x03\0\0 \x80\x12\x01") } };
                const _GYM0DE_SC: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0=\0\0\x80P\x04\0\0 \x80@\x01\0\0 \0\0d\0\0e\0\0 \x80 \x04\0\0 \0\0d\0\0e\0\0 \0\0s\0\0u\0\0 \x80\x13\x01\0\0 \0\0(\x80\x12\x01\0\0)\0\x80P\x01\0\0 \x80@\x01\0\0 \x80 \x03\0\0 \x80\x13\x01\0\0 \0\0(\x80\x12\x01\0\0)") } };
                const _GYM0DE_SV: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\"\0\0\x80\x13\x01\0\0(\x80\x12\x01\0\0)\0\0 \x80 \x04\0\0 \x80@\x01\0\0,\0\0 \x80P\x04\0\x80P\x01\0\0 \x80@\x01\0\0 \x80 \x03\0\0 \x80\x13\x01\0\0(\x80\x12\x01\0\0)") } };
                const _GYM0DE_VI: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0L\0\0\x80P\x04\0\0,\0\0 \0\0n\0\0g\0\0\xE0\0\0y\0\0 \x80@\x01\0\0 \0\0t\0\0h\0\0\xE1\0\0n\0\0g\0\0 \x80 \x01\0\0 \0\0n\0\x01\x03\0\0m\0\0 \x80\x12\x01\0\0 \x80\x13\x01\0\x80P\x01\0\0,\0\0 \0\0n\0\0g\0\0\xE0\0\0y\0\0 \x80@\x01\0\0 \0\0t\0\0h\0\0\xE1\0\0n\0\0g\0\0 \x80 \x01\0\0 \0\0n\0\x01\x03\0\0m\0\0 \x80\x13\x01") } };
                const _GYM0DE_YUE: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\"\0\0\x80\x13\x01\0\0(\x80\x12\x01\0\0)\0\0 \x80 \x04\0\0 \x80@\x01\0\0,\0\0 \x80P\x04\0\x80\x13\x01\x80\x12\x01\0^t\x80 \x03\x80@\x01\x80P\x01") } };
                const _GYM0DE_ZH: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x13\0\0\x80\x13\x01\x80\x12\x01\0^t\x80 \x04\x80@\x01\x80P\x04\0\x80\x13\x01\x80\x12\x01\0^t\x80 \x03\x80@\x01\x80P\x01") } };
                const _GYM0DE_ZH_HANT: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x1C\0\0\x80\x13\x01\0\0(\x80\x12\x01\0\0)\x80 \x04\x80@\x01\0e\xE5\0\0 \x80P\x04\0\x80\x13\x01\x80\x12\x01\0^t\x80 \x03\x80@\x01\x80P\x01") } };
                const _GYM0DE_ZH_HK: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x1F\0\0\x80\x13\x01\0\0(\x80\x12\x01\0\0)\0^t\x80 \x04\x80@\x01\0e\xE5\0\0 \x80P\x04\0\x80\x13\x01\x80\x12\x01\0^t\x80 \x03\x80@\x01\x80P\x01") } };
                const _GYM0D_AF: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x19\0\0\x80\x13\x01\0\0(\x80\x12\x01\0\0)\0\0 \x80 \x04\0\0 \x80@\x01\0\x80\x13\x01\0\0 \x80 \x03\0\0 \x80@\x01") } };
                const _GYM0D_DE: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x13\0\0\x80@\x01\0\0.\0\0 \x80 \x04\0\0 \x80\x12\x01\0\x80@\x01\0\0.\0\0 \x80 \x03\0\0 \x80\x12\x01") } };
                const _GYM0D_EN: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x1C\0\0\x80 \x04\0\0 \x80@\x01\0\0,\0\0 \x80\x13\x01\0\0(\x80\x12\x01\0\0)\0\x80 \x03\0\0 \x80@\x01\0\0,\0\0 \x80\x13\x01") } };
                const _GYM0D_EN_001: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x19\0\0\x80@\x01\0\0 \x80 \x04\0\0 \x80\x13\x01\0\0(\x80\x12\x01\0\0)\0\x80@\x01\0\0 \x80 \x03\0\0 \x80\x13\x01") } };
                const _GYM0D_EN_AE: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x1C\0\0\x80 \x04\0\0 \x80@\x01\0\0,\0\0 \x80\x13\x01\0\0(\x80\x12\x01\0\0)\0\x80@\x01\0\0 \x80 \x03\0\0 \x80\x13\x01") } };
                const _GYM0D_EN_CA: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x19\0\0\x80@\x01\0\0 \x80 \x04\0\0 \x80\x13\x01\0\0(\x80\x12\x01\0\0)\0\x80 \x03\0\0 \x80@\x01\0\0,\0\0 \x80\x13\x01") } };
                const _GYM0D_ES: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x19\0\0\x80\x13\x01\0\0(\x80\x12\x01\0\0)\0\0 \x80 \x04\0\0 \x80@\x01\0\x80@\x01\0\0-\x80 \x01\0\0-\x80\x13\x01") } };
                const _GYM0D_FF_ADLM: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x19\0\0\x80\x13\x01\0\0(\x80\x12\x01\0\0)\0\0 \x80@\x01\0\0 \x80 \x04\0\x80@\x01\0\0 \x80 \x03\0\0 \x80\x13\x01") } };
                const _GYM0D_FR: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x19\0\0\x80\x13\x01\0\0(\x80\x12\x01\0\0)\0\0 \x80 \x04\0\0 \x80@\x01\0\x80@\x01\0\0 \x80 \x03\0\0 \x80\x12\x01") } };
                const _GYM0D_GD: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x19\0\0\x80\x13\x01\0\0(\x80\x12\x01\0\0)\0\0 \x80 \x04\0\0 \x80@\x01\0\x80@\x01\0\0m\0\0h\0\0 \x80 \x03\0\0 \x80\x13\x01") } };
                const _GYM0D_JA: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\x19\0)\0\0\x80\x13\x01\0\0(\x80\x12\x01\0\0)\0^t\x80 \x04\x80@\x01\0e\xE5\0\x80\x12\x01\0^t\x80 \x03\x80@\x01\0e\xE5\0\x80\x12\x01\0\0-\x80 \x01\0\0-\x80@\x01") } };
                const _GYM0D_KO: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\"\0\0\x80\x13\x01\0\xB1D\0\0(\x80\x12\x01\0\xB1D\0\0)\0\0 \x80 \x04\0\0 \x80@\x01\0\xC7|\0\x80\x13\x01\0\xB1D\0\0 \x80 \x03\0\0 \x80@\x01\0\xC7|") } };
                const _GYM0D_LT: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x19\0\0\x80\x13\x01\0\0(\x80\x12\x01\0\0)\0\0 \x80 \x04\0\0 \x80@\x01\0\x80\x12\x01\0\0 \x80 \x03\0\0 \x80@\x01") } };
                const _GYM0D_NL: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x19\0\0\x80@\x01\0\0 \x80 \x04\0\0 \x80\x13\x01\0\0(\x80\x12\x01\0\0)\0\x80@\x01\0\0 \x80 \x03\0\0 \x80\x12\x01") } };
                const _GYM0D_NO: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x19\0\0\x80\x13\x01\0\0(\x80\x12\x01\0\0)\0\0 \x80 \x04\0\0 \x80@\x01\0\x80@\x01\0\0.\0\0 \x80 \x03\0\0 \x80\x13\x01") } };
                const _GYM0D_PT: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\x19\0;\0\0\x80\x13\x01\0\0(\x80\x12\x01\0\0)\0\0 \x80 \x04\0\0 \x80@\x01\0\x80@\x01\0\0 \0\0d\0\0e\0\0 \x80 \x03\0\0 \0\0d\0\0e\0\0 \x80\x12\x01\0\x80@\x01\0\0/\x80 \x01\0\0/\x80\x13\x01") } };
                const _GYM0D_SC: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\x007\0\0\x80@\x01\0\0 \0\0d\0\0e\0\0 \x80 \x04\0\0 \0\0d\0\0e\0\0 \0\0s\0\0u\0\0 \x80\x13\x01\0\0 \0\0(\x80\x12\x01\0\0)\0\x80@\x01\0\0 \x80 \x03\0\0 \x80\x13\x01") } };
                const _GYM0D_SV: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x19\0\0\x80\x13\x01\0\0(\x80\x12\x01\0\0)\0\0 \x80 \x04\0\0 \x80@\x01\0\x80@\x01\0\0 \x80 \x03\0\0 \x80\x13\x01") } };
                const _GYM0D_VI: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0C\0\0\0\0n\0\0g\0\0\xE0\0\0y\0\0 \x80@\x01\0\0 \0\0t\0\0h\0\0\xE1\0\0n\0\0g\0\0 \x80 \x01\0\0 \0\0n\0\x01\x03\0\0m\0\0 \x80\x12\x01\0\0 \x80\x13\x01\0\0\0n\0\0g\0\0\xE0\0\0y\0\0 \x80@\x01\0\0 \0\0t\0\0h\0\0\xE1\0\0n\0\0g\0\0 \x80 \x01\0\0 \0\0n\0\x01\x03\0\0m\0\0 \x80\x13\x01") } };
                const _GYM0D_YUE: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x19\0\0\x80\x13\x01\0\0(\x80\x12\x01\0\0)\0\0 \x80 \x04\0\0 \x80@\x01\0\x80\x13\x01\0^t\x80 \x03\x80@\x01") } };
                const _GYM0D_ZH: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x10\0\0\x80\x13\x01\x80\x12\x01\0^t\x80 \x04\x80@\x01\0\x80\x13\x01\0^t\x80 \x03\x80@\x01") } };
                const _GYM0D_ZH_HANT: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x16\0\0\x80\x13\x01\0\0(\x80\x12\x01\0\0)\x80 \x04\x80@\x01\0e\xE5\0\x80\x13\x01\0^t\x80 \x03\x80@\x01") } };
                const _GYM0D_ZH_HK: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x19\0\0\x80\x13\x01\0\0(\x80\x12\x01\0\0)\0^t\x80 \x04\x80@\x01\0e\xE5\0\x80\x13\x01\0^t\x80 \x03\x80@\x01") } };
                const _GYM0_AF: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x13\0\0\x80\x13\x01\0\0(\x80\x12\x01\0\0)\0\0 \x80 \x04\0\x80\x13\x01\0\0 \x80 \x03") } };
                const _GYM0_BR: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x13\0\0\x80\x13\x01\0\0(\x80\x12\x01\0\0)\0\0 \x80 \x04\0\x80 \x03\0\0 \x80\x13\x01\0\0 \0\0(\x80\x12\x01\0\0)") } };
                const _GYM0_DE: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x13\0\0\x80\x13\x01\0\0(\x80\x12\x01\0\0)\0\0 \x80 \x04\0\x80 \x03\0\0 \x80\x12\x01") } };
                const _GYM0_EN: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x13\0\0\x80 \x04\0\0 \x80\x13\x01\0\0(\x80\x12\x01\0\0)\0\x80 \x03\0\0 \x80\x13\x01") } };
                const _GYM0_ES: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x13\0\0\x80\x13\x01\0\0(\x80\x12\x01\0\0)\0\0 \x80 \x04\0\x80 \x01\0\0-\x80\x13\x01") } };
                const _GYM0_GD: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x13\0\0\x80\x13\x01\0\0(\x80\x12\x01\0\0)\0\0 \x80 \x04\0\x80!\x03\0\0 \x80\x13\x01\0\0(\x80\x12\x01\0\0)") } };
                const _GYM0_HI_LATN: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x13\0\0\x80 \x04\0\0 \x80\x13\x01\0\0(\x80\x12\x01\0\0)\0\x80 \x03\0\0 \x80\x13\x01\0\0(\x80\x12\x01\0\0)") } };
                const _GYM0_JA: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x13\0\0\x80\x13\x01\0\0(\x80\x12\x01\0\0)\0^t\x80 \x04\0\x80\x12\x01\0^t\x80 \x03") } };
                const _GYM0_KO: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x19\0\0\x80\x13\x01\0\xB1D\0\0(\x80\x12\x01\0\xB1D\0\0)\0\0 \x80 \x04\0\x80\x13\x01\0\xB1D\0\0(\x80\x12\x01\0\xB1D\0\0)\0\0 \x80 \x03") } };
                const _GYM0_LT: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x13\0\0\x80\x13\x01\0\0(\x80\x12\x01\0\0)\0\0 \x80 \x04\0\x80\x12\x01\0\0 \x80 \x03") } };
                const _GYM0_NL: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x13\0\0\x80 \x04\0\0 \x80\x13\x01\0\0(\x80\x12\x01\0\0)\0\x80 \x03\0\0 \x80\x12\x01") } };
                const _GYM0_NO: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x13\0\0\x80\x13\x01\0\0(\x80\x12\x01\0\0)\0\0 \x80 \x04\0\x80 \x03\0\0 \x80\x13\x01\0\0(\x80\x12\x01\0\0)") } };
                const _GYM0_PT: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x13\0\0\x80\x13\x01\0\0(\x80\x12\x01\0\0)\0\0 \x80 \x04\0\x80 \x03\0\0 \0\0d\0\0e\0\0 \x80\x12\x01") } };
                const _GYM0_RU: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x13\0\0\x80\x13\x01\0\0(\x80\x12\x01\0\0)\0\0 \x80 \x04\0\x80!\x03\0\0 \x80\x12\x01") } };
                const _GYM0_SC: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0(\0\0\x80 \x04\0\0 \0\0d\0\0e\0\0 \0\0s\0\0u\0\0 \x80\x13\x01\0\0 \0\0(\x80\x12\x01\0\0)\0\x80 \x03\0\0 \x80\x13\x01\0\0 \0\0(\x80\x12\x01\0\0)") } };
                const _GYM0_VI: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\0\0\0t\0\0h\0\0\xE1\0\0n\0\0g\0\0 \x80 \x01\0\0 \0\0n\0\x01\x03\0\0m\0\0 \x80\x12\x01\0\0 \x80\x13\x01") } };
                const _GYM0_YUE: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x13\0\0\x80\x13\x01\0\0(\x80\x12\x01\0\0)\0\0 \x80 \x04\0\x80\x13\x01\x80\x12\x01\0^t\x80 \x03") } };
                const _GYM0_ZH: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\r\0\0\x80\x13\x01\x80\x12\x01\0^t\x80 \x04\0\x80\x13\x01\x80\x12\x01\0^t\x80 \x03") } };
                const _GYM0_ZH_HANT: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x10\0\0\x80\x13\x01\0\0(\x80\x12\x01\0\0)\x80 \x04\0\x80\x13\x01\x80\x12\x01\0^t\x80 \x03") } };
                const _GYM0_ZH_HK: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x13\0\0\x80\x13\x01\0\0(\x80\x12\x01\0\0)\0^t\x80 \x04\0\x80\x13\x01\x80\x12\x01\0^t\x80 \x03") } };
                const _GY_AF: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\0\x80\x13\x01\0\0 \x80\x12\x01") } };
                const _GY_BR: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\0\x80\x13\x01\0\0 \0\0(\x80\x12\x01\0\0)") } };
                const _GY_BS: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\0\x80\x13\x01\0\0(\x80\x12\x01\0\0)") } };
                const _GY_DE: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\0\x80\x12\x01") } };
                const _GY_ES: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\0\x80\x13\x01") } };
                const _GY_JA: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\0\x80\x12\x01\0^t") } };
                const _GY_KO: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\0\x80\x13\x01\0\xB1D\0\0(\x80\x12\x01\0\xB1D\0\0)") } };
                const _GY_VI: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\0\x80\x12\x01\0\0 \x80\x13\x01") } };
                const _GY_YUE: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\0\x80\x13\x01\x80\x12\x01\0^t") } };
                const _M0DE_AF: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\x13\0&\0\0\x80 \x04\0\0 \x80@\x01\0\0,\0\0 \x80P\x04\0\x80 \x03\0\0 \x80@\x01\0\0,\0\0 \x80P\x01\0\x80 \x02\0\0-\x80@\x02\0\0,\0\0 \x80P\x01") } };
                const _M0DE_DE: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\x16\0,\0\0\x80P\x04\0\0,\0\0 \x80@\x01\0\0.\0\0 \x80 \x04\0\x80P\x01\0\0,\0\0 \x80@\x01\0\0.\0\0 \x80 \x03\0\x80P\x01\0\0,\0\0 \x80@\x01\0\0.\x80 \x01\0\0.") } };
                const _M0DE_EN: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\x13\0&\0\0\x80P\x04\0\0,\0\0 \x80 \x04\0\0 \x80@\x01\0\x80P\x01\0\0,\0\0 \x80 \x03\0\0 \x80@\x01\0\x80P\x01\0\0,\0\0 \x80 \x01\0\0/\x80@\x01") } };
                const _M0DE_EN_001: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\x13\0&\0\0\x80P\x04\0\0,\0\0 \x80@\x01\0\0 \x80 \x04\0\x80P\x01\0\0,\0\0 \x80@\x01\0\0 \x80 \x03\0\x80P\x01\0\0,\0\0 \x80@\x02\0\0/\x80 \x02") } };
                const _M0DE_EN_CA: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\x13\0&\0\0\x80P\x04\0\0,\0\0 \x80 \x04\0\0 \x80@\x01\0\x80P\x01\0\0,\0\0 \x80 \x03\0\0 \x80@\x01\0\x80P\x01\0\0,\0\0 \x80 \x02\0\0-\x80@\x02") } };
                const _M0DE_EN_CH: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\x13\0&\0\0\x80P\x04\0\0,\0\0 \x80@\x01\0\0 \x80 \x04\0\x80P\x01\0\0,\0\0 \x80@\x01\0\0 \x80 \x03\0\x80P\x01\0\0,\0\0 \x80@\x02\0\0.\x80 \x02") } };
                const _M0DE_ES: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\x10\0 \0\0\x80P\x04\0\0 \x80@\x01\0\0-\x80 \x01\0\x80P\x01\0\0 \x80@\x01\0\0-\x80 \x01\0\x80P\x01\0\0,\0\0 \x80@\x01\0\0-\x80 \x01") } };
                const _M0DE_FF_ADLM: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\x13\0&\0\0\x80P\x04\0\0,\0\0 \x80@\x01\0\0 \x80 \x04\0\x80P\x01\0\0,\0\0 \x80@\x01\0\0 \x80 \x04\0\x80P\x01\0\0 \x80@\x01\0\0 \x80 \x03") } };
                const _M0DE_FI: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x13\0\0\x80P\x04\0\0 \x80@\x01\0\0.\x80 \x01\0\0.\0\x80P\x01\0\0 \x80@\x01\0\0.\x80 \x01\0\0.") } };
                const _M0DE_FR: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\x10\0 \0\0\x80P\x04\0\0 \x80@\x01\0\0 \x80 \x04\0\x80P\x01\0\0 \x80@\x01\0\0 \x80 \x03\0\x80P\x01\0\0 \x80@\x01\0\0/\x80 \x01") } };
                const _M0DE_FY: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\x10\0 \0\0\x80P\x04\0\0 \x80@\x01\0\0 \x80 \x04\0\x80P\x01\0\0 \x80@\x01\0\0 \x80 \x03\0\x80P\x01\0\0 \x80@\x01\0\0-\x80 \x01") } };
                const _M0DE_GD: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\x19\x002\0\0\x80P\x04\0\0,\0\0 \x80@\x01\0\0m\0\0h\0\0 \x80 \x04\0\x80P\x01\0\0,\0\0 \x80@\x01\0\0m\0\0h\0\0 \x80 \x03\0\x80P\x01\0\0,\0\0 \x80@\x01\0\0/\x80 \x01") } };
                const _M0DE_JA: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\r\0 \0\0\x80 \x04\x80@\x01\0e\xE5\x80P\x04\0\x80 \x03\x80@\x01\0e\xE5\0\0(\x80P\x01\0\0)\0\x80 \x01\0\0/\x80@\x01\0\0(\x80P\x01\0\0)") } };
                const _M0DE_KO: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\x13\0,\0\0\x80 \x04\0\0 \x80@\x01\0\xC7|\0\0 \x80P\x04\0\x80 \x03\0\0 \x80@\x01\0\xC7|\0\0 \0\0(\x80P\x01\0\0)\0\x80 \x01\0\0.\0\0 \x80@\x01\0\0.\0\0 \0\0(\x80P\x01\0\0)") } };
                const _M0DE_NO: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\x13\0&\0\0\x80P\x04\0\0 \x80@\x01\0\0.\0\0 \x80 \x04\0\x80P\x01\0\0 \x80@\x01\0\0.\0\0 \x80 \x03\0\x80P\x01\0\0 \x80@\x02\0\0.\x80 \x02\0\0.") } };
                const _M0DE_PT: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\x1C\08\0\0\x80P\x04\0\0,\0\0 \x80@\x01\0\0 \0\0d\0\0e\0\0 \x80 \x04\0\x80P\x01\0\0,\0\0 \x80@\x01\0\0 \0\0d\0\0e\0\0 \x80 \x03\0\x80P\x01\0\0,\0\0 \x80@\x02\0\0/\x80 \x02") } };
                const _M0DE_RU: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\x13\0&\0\0\x80R\x04\0\0,\0\0 \x80@\x01\0\0 \x80 \x04\0\x80R\x03\0\0,\0\0 \x80@\x01\0\0 \x80 \x03\0\x80P\x01\0\0,\0\0 \x80@\x02\0\0.\x80 \x02") } };
                const _M0DE_VI: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\x004\0h\0\0\x80P\x04\0\0,\0\0 \0\0n\0\0g\0\0\xE0\0\0y\0\0 \x80@\x01\0\0 \0\0t\0\0h\0\0\xE1\0\0n\0\0g\0\0 \x80 \x01\0\x80P\x01\0\0,\0\0 \0\0n\0\0g\0\0\xE0\0\0y\0\0 \x80@\x01\0\0 \0\0t\0\0h\0\0\xE1\0\0n\0\0g\0\0 \x80 \x01\0\x80P\x01\0\0,\0\0 \x80@\x01\0\0/\x80 \x01") } };
                const _M0DE_YUE: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\r\0\x1A\0\0\x80 \x04\x80@\x01\0e\xE5\x80P\x04\0\x80 \x03\x80@\x01\0e\xE5\x80P\x01\0\x80 \x01\0\0/\x80@\x01\x80P\x01") } };
                const _M0DE_YUE_HANS: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\r\0\x1A\0\0\x80 \x04\x80@\x01\0e\xE5\x80P\x04\0\x80 \x03\x80@\x01\0e\xE5\x80P\x01\0\x80 \x01\0\0-\x80@\x01\x80P\x01") } };
                const _M0D_AF: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\n\0\x14\0\0\x80 \x04\0\0 \x80@\x01\0\x80 \x03\0\0 \x80@\x01\0\x80 \x02\0\0-\x80@\x02") } };
                const _M0D_DE: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\r\0\x1A\0\0\x80@\x01\0\0.\0\0 \x80 \x04\0\x80@\x01\0\0.\0\0 \x80 \x03\0\x80@\x01\0\0.\x80 \x01\0\0.") } };
                const _M0D_EN: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\n\0\x14\0\0\x80 \x04\0\0 \x80@\x01\0\x80 \x03\0\0 \x80@\x01\0\x80 \x01\0\0/\x80@\x01") } };
                const _M0D_EN_001: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\n\0\x14\0\0\x80@\x01\0\0 \x80 \x04\0\x80@\x01\0\0 \x80 \x03\0\x80@\x02\0\0/\x80 \x02") } };
                const _M0D_ES: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\n\0\0\x80 \x04\0\0 \x80@\x01\0\x80@\x01\0\0-\x80 \x01") } };
                const _M0D_FF_ADLM: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\n\0\0\x80@\x01\0\0 \x80 \x04\0\x80@\x01\0\0 \x80 \x03") } };
                const _M0D_FI: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\n\0\0\x80 \x04\0\0 \x80@\x01\0\x80@\x01\0\0.\x80 \x01\0\0.") } };
                const _M0D_FR: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\n\0\x14\0\0\x80@\x01\0\0 \x80 \x04\0\x80@\x01\0\0 \x80 \x03\0\x80@\x01\0\0/\x80 \x01") } };
                const _M0D_FY: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\n\0\x14\0\0\x80@\x01\0\0 \x80 \x04\0\x80@\x01\0\0 \x80 \x03\0\x80@\x01\0\0-\x80 \x01") } };
                const _M0D_GD: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\x10\0 \0\0\x80@\x01\0\0m\0\0h\0\0 \x80 \x04\0\x80@\x01\0\0m\0\0h\0\0 \x80 \x03\0\x80@\x01\0\0/\x80 \x01") } };
                const _M0D_JA: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\n\0\x14\0\0\x80 \x04\x80@\x01\0e\xE5\0\x80 \x03\x80@\x01\0e\xE5\0\x80 \x01\0\0/\x80@\x01") } };
                const _M0D_KO: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\r\0\x1A\0\0\x80 \x04\0\0 \x80@\x01\0\xC7|\0\x80 \x03\0\0 \x80@\x01\0\xC7|\0\x80 \x01\0\0.\0\0 \x80@\x01\0\0.") } };
                const _M0D_NO: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\r\0\x1A\0\0\x80@\x01\0\0.\0\0 \x80 \x04\0\x80@\x01\0\0.\0\0 \x80 \x03\0\x80@\x02\0\0.\x80 \x02") } };
                const _M0D_PT: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\x13\0&\0\0\x80@\x01\0\0 \0\0d\0\0e\0\0 \x80 \x04\0\x80@\x01\0\0 \0\0d\0\0e\0\0 \x80 \x03\0\x80@\x01\0\0/\x80 \x01") } };
                const _M0D_RU: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\n\0\x14\0\0\x80 \x04\0\0 \x80@\x01\0\x80@\x01\0\0 \x80 \x03\0\x80@\x02\0\0.\x80 \x02") } };
                const _M0D_VI: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0+\0\0\0\0n\0\0g\0\0\xE0\0\0y\0\0 \x80@\x01\0\0 \0\0t\0\0h\0\0\xE1\0\0n\0\0g\0\0 \x80 \x01\0\x80@\x01\0\0/\x80 \x01") } };
                const _M0D_YUE_HANS: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\n\0\x14\0\0\x80 \x04\x80@\x01\0e\xE5\0\x80 \x03\x80@\x01\0e\xE5\0\x80 \x01\0\0-\x80@\x01") } };
                const _M0_AF: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\x04\0\x08\0\0\x80!\x04\0\x80!\x03\0\x80!\x01") } };
                const _M0_EN_001: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\x04\0\x08\0\0\x80!\x04\0\x80!\x03\0\x80!\x02") } };
                const _M0_ES: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\0\x80!\x01") } };
                const _M0_JA: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\x04\0\x08\0\0\x80!\x04\0\x80!\x03\0\x80 \x03") } };
                const _M0_NO: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\x04\0\x08\0\0\x80!\x04\0\x80!\x03\0\x80!\x01\0\0.") } };
                const _Y0W_AF: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\0\x80\x11\x01\0\0 \x800\x01") } };
                const _YM0DE_EN_AE: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0%\0G\0\0\x80P\x04\0\0,\0\0 \x80 \x04\0\0 \x80@\x01\0\0,\0\0 \x80\x13\x01\0\0(\x80\x12\x01\0\0)\0\x80P\x01\0\0,\0\0 \x80@\x01\0\0 \x80 \x03\0\0 \x80\x13\x01\0\0(\x80\x12\x01\0\0)\0\x80P\x01\0\0,\0\0 \x80@\x01\0\0/\x80 \x01\0\0/\x80\x13\x01") } };
                const _YM0DE_EN_CA: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\"\0G\0\0\x80P\x04\0\0,\0\0 \x80@\x01\0\0 \x80 \x04\0\0 \x80\x13\x01\0\0(\x80\x12\x01\0\0)\0\x80P\x01\0\0,\0\0 \x80 \x03\0\0 \x80@\x01\0\0,\0\0 \x80\x13\x01\0\0(\x80\x12\x01\0\0)\0\x80P\x01\0\0,\0\0 \x80\x13\x01\0\0-\x80 \x01\0\0-\x80@\x01") } };
                const _YM0DE_FF_ADLM: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0%\0>\0\0\x80P\x04\0\0,\0\0 \x80@\x01\0\0 \x80 \x04\0\0,\0\0 \x80\x13\x01\0\0(\x80\x12\x01\0\0)\0\x80P\x01\0\0,\0\0 \x80@\x01\0\0 \x80 \x03\0\0 \x80\x13\x01\0\x80P\x01\0\0,\0\0 \x80@\x01\0\0-\x80 \x01\0\0-\x80\x13\x01") } };
                const _YM0DE_FI: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\"\0\0\x80\x13\x01\0\0(\x80\x12\x01\0\0)\0\0 \x80 \x04\0\0 \x80@\x01\0\0,\0\0 \x80P\x04\0\x80P\x01\0\0 \x80@\x01\0\0.\x80 \x01\0\0.\x80\x10\x01") } };
                const _YM0DE_FR: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\"\08\0\0\x80\x13\x01\0\0(\x80\x12\x01\0\0)\0\0 \x80 \x04\0\0 \x80@\x01\0\0,\0\0 \x80P\x04\0\x80P\x01\0\0 \x80@\x01\0\0 \x80 \x03\0\0 \x80\x12\x01\0\x80P\x01\0\0 \x80@\x01\0\0/\x80 \x01\0\0/\x80\x10\x01") } };
                const _YM0DE_FY: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\"\08\0\0\x80\x13\x01\0\0(\x80\x12\x01\0\0)\0\0 \x80 \x04\0\0 \x80@\x01\0\0,\0\0 \x80P\x04\0\x80P\x01\0\0 \x80@\x01\0\0 \x80 \x03\0\0 \x80\x12\x01\0\x80P\x01\0\0 \x80@\x01\0\0-\x80 \x01\0\0-\x80\x10\x01") } };
                const _YM0DE_GD: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\"\0J\0\0\x80\x13\x01\0\0(\x80\x12\x01\0\0)\0\0 \x80 \x04\0\0 \x80@\x01\0\0,\0\0 \x80P\x04\0\x80P\x01\0\0,\0\0 \x80@\x01\0\0m\0\0h\0\0 \x80 \x03\0\0 \x80\x13\x01\0\0(\x80\x12\x01\0\0)\0\x80P\x01\0\0,\0\0 \x80@\x01\0\0/\x80 \x01\0\0/\x80\x13\x01") } };
                const _YM0DE_JA: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\x13\0,\0\0\x80\x12\x01\0^t\x80 \x04\x80@\x01\0e\xE5\x80P\x04\0\x80\x12\x01\0^t\x80 \x03\x80@\x01\0e\xE5\0\0(\x80P\x01\0\0)\0\x80\x12\x01\0^t\x80 \x01\0g\x08\x80@\x01\0e\xE5\0\0(\x80P\x01\0\0)") } };
                const _YM0DE_KO: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0(\0V\0\0\x80\x13\x01\0\xB1D\0\0(\x80\x12\x01\0\xB1D\0\0)\0\0 \x80 \x04\0\0 \x80@\x01\0\xC7|\0\0 \x80P\x04\0\x80\x13\x01\0\xB1D\0\0(\x80\x12\x01\0\xB1D\0\0)\0\0 \x80 \x03\0\0 \x80@\x01\0\xC7|\0\0 \0\0(\x80P\x01\0\0)\0\x80\x13\x01\0\0.\0\0 \x80 \x01\0\0.\0\0 \x80@\x01\0\0.\0\0 \0\0(\x80P\x01\0\0)") } };
                const _YM0DE_LT: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\"\0;\0\0\x80\x13\x01\0\0(\x80\x12\x01\0\0)\0\0 \x80 \x04\0\0 \x80@\x01\0\0,\0\0 \x80P\x04\0\x80\x12\x01\0\0 \x80 \x03\0\0 \x80@\x01\0\0,\0\0 \x80P\x01\0\x80\x10\x01\0\0-\x80 \x01\0\0-\x80@\x01\0\0,\0\0 \x80P\x01") } };
                const _YM0DE_NL: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\x1F\x005\0\0\x80P\x04\0\0 \x80@\x01\0\0 \x80 \x04\0\0 \x80\x13\x01\0\0(\x80\x12\x01\0\0)\0\x80P\x01\0\0 \x80@\x01\0\0 \x80 \x03\0\0 \x80\x12\x01\0\x80P\x01\0\0 \x80@\x01\0\0-\x80 \x01\0\0-\x80\x10\x01") } };
                const _YM0DE_NO: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\"\0D\0\0\x80\x13\x01\0\0(\x80\x12\x01\0\0)\0\0 \x80 \x04\0\0 \x80@\x01\0\0,\0\0 \x80P\x04\0\x80P\x01\0\0 \x80@\x01\0\0.\0\0 \x80 \x03\0\0 \x80\x13\x01\0\0(\x80\x12\x01\0\0)\0\x80P\x01\0\0 \x80@\x01\0\0.\x80 \x01\0\0.\x80\x13\x01") } };
                const _YM0DE_RU: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\"\0;\0\0\x80\x13\x01\0\0(\x80\x12\x01\0\0)\0\0 \x80 \x04\0\0 \x80@\x01\0\0,\0\0 \x80P\x04\0\x80P\x01\0\0,\0\0 \x80@\x01\0\0 \x80 \x03\0\0 \x80\x12\x01\0\x80P\x01\0\0,\0\0 \x80@\x01\0\0.\x80 \x01\0\0.\x80\x10\x01") } };
                const _YM0DE_SC: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0=\0_\0\0\x80P\x04\0\0 \x80@\x01\0\0 \0\0d\0\0e\0\0 \x80 \x04\0\0 \0\0d\0\0e\0\0 \0\0s\0\0u\0\0 \x80\x13\x01\0\0 \0\0(\x80\x12\x01\0\0)\0\x80P\x01\0\0 \x80@\x01\0\0 \x80 \x03\0\0 \x80\x13\x01\0\0 \0\0(\x80\x12\x01\0\0)\0\x80P\x01\0\0 \x80@\x01\0\0/\x80 \x01\0\0/\x80\x13\x01") } };
                const _YM0DE_SV: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\"\0A\0\0\x80\x13\x01\0\0(\x80\x12\x01\0\0)\0\0 \x80 \x04\0\0 \x80@\x01\0\0,\0\0 \x80P\x04\0\x80P\x01\0\0 \x80@\x01\0\0 \x80 \x03\0\0 \x80\x13\x01\0\0(\x80\x12\x01\0\0)\0\x80P\x01\0\0 \x80\x13\x01\0\0-\x80 \x01\0\0-\x80@\x01") } };
                const _YM0DE_VI: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0L\0\x92\0\0\x80P\x04\0\0,\0\0 \0\0n\0\0g\0\0\xE0\0\0y\0\0 \x80@\x01\0\0 \0\0t\0\0h\0\0\xE1\0\0n\0\0g\0\0 \x80 \x01\0\0 \0\0n\0\x01\x03\0\0m\0\0 \x80\x12\x01\0\0 \x80\x13\x01\0\x80P\x01\0\0,\0\0 \0\0n\0\0g\0\0\xE0\0\0y\0\0 \x80@\x01\0\0 \0\0t\0\0h\0\0\xE1\0\0n\0\0g\0\0 \x80 \x01\0\0 \0\0n\0\x01\x03\0\0m\0\0 \x80\x13\x01\0\x80P\x01\0\0,\0\0 \x80@\x01\0\0/\x80 \x01\0\0/\x80\x13\x01") } };
                const _YM0DE_YUE: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\"\x005\0\0\x80\x13\x01\0\0(\x80\x12\x01\0\0)\0\0 \x80 \x04\0\0 \x80@\x01\0\0,\0\0 \x80P\x04\0\x80\x13\x01\x80\x12\x01\0^t\x80 \x03\x80@\x01\x80P\x01\0\x80\x13\x01\x80\x12\x01\0^t\x80 \x03\x80@\x01\0\xFF\x0C\x80P\x01") } };
                const _YM0DE_ZH: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\x13\0&\0\0\x80\x13\x01\x80\x12\x01\0^t\x80 \x04\x80@\x01\x80P\x04\0\x80\x13\x01\x80\x12\x01\0^t\x80 \x03\x80@\x01\x80P\x01\0\x80\x13\x01\x80\x12\x01\0^t\x80 \x03\x80@\x01\0\xFF\x0C\x80P\x01") } };
                const _YM0DE_ZH_HANT: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\x1C\0/\0\0\x80\x13\x01\0\0(\x80\x12\x01\0\0)\x80 \x04\x80@\x01\0e\xE5\0\0 \x80P\x04\0\x80\x13\x01\x80\x12\x01\0^t\x80 \x03\x80@\x01\x80P\x01\0\x80\x13\x01\x80\x12\x01\0^t\x80 \x03\x80@\x01\0\xFF\x0C\x80P\x01") } };
                const _YM0DE_ZH_HK: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\x1F\x002\0\0\x80\x13\x01\0\0(\x80\x12\x01\0\0)\0^t\x80 \x04\x80@\x01\0e\xE5\0\0 \x80P\x04\0\x80\x13\x01\x80\x12\x01\0^t\x80 \x03\x80@\x01\x80P\x01\0\x80\x13\x01\x80\x12\x01\0^t\x80 \x03\x80@\x01\0\xFF\x0C\x80P\x01") } };
                const _YM0D_DE: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\x13\0&\0\0\x80@\x01\0\0.\0\0 \x80 \x04\0\0 \x80\x12\x01\0\x80@\x01\0\0.\0\0 \x80 \x03\0\0 \x80\x12\x01\0\x80\x13\x01\0\0-\x80 \x02\0\0-\x80@\x02") } };
                const _YM0D_EN: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\x1C\0/\0\0\x80 \x04\0\0 \x80@\x01\0\0,\0\0 \x80\x13\x01\0\0(\x80\x12\x01\0\0)\0\x80 \x03\0\0 \x80@\x01\0\0,\0\0 \x80\x13\x01\0\x80\x13\x01\0\0-\x80 \x02\0\0-\x80@\x02") } };
                const _YM0D_EN_AE: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\x1C\0,\0\0\x80 \x04\0\0 \x80@\x01\0\0,\0\0 \x80\x13\x01\0\0(\x80\x12\x01\0\0)\0\x80@\x01\0\0 \x80 \x03\0\0 \x80\x13\x01\0\x80@\x02\0\0/\x80 \x02\0\0/\x80\x13\x01") } };
                const _YM0D_EN_CA: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\x19\0,\0\0\x80@\x01\0\0 \x80 \x04\0\0 \x80\x13\x01\0\0(\x80\x12\x01\0\0)\0\x80 \x03\0\0 \x80@\x01\0\0,\0\0 \x80\x13\x01\0\x80\x13\x01\0\0-\x80 \x02\0\0-\x80@\x02") } };
                const _YM0D_ES: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\x19\0)\0\0\x80\x13\x01\0\0(\x80\x12\x01\0\0)\0\0 \x80 \x04\0\0 \x80@\x01\0\x80@\x01\0\0-\x80 \x01\0\0-\x80\x13\x01\0\x80\x13\x01\0\0-\x80 \x02\0\0-\x80@\x02") } };
                const _YM0D_FF_ADLM: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\x1C\0,\0\0\x80@\x01\0\0 \x80 \x04\0\0,\0\0 \x80\x13\x01\0\0(\x80\x12\x01\0\0)\0\x80@\x01\0\0 \x80 \x03\0\0 \x80\x13\x01\0\x80@\x02\0\0-\x80 \x02\0\0-\x80\x13\x01") } };
                const _YM0D_FI: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\x19\0)\0\0\x80\x13\x01\0\0(\x80\x12\x01\0\0)\0\0 \x80 \x04\0\0 \x80@\x01\0\x80@\x01\0\0.\x80 \x01\0\0.\x80\x10\x01\0\x80\x13\x01\0\0-\x80 \x02\0\0-\x80@\x02") } };
                const _YM0D_FR: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\x19\0)\0\0\x80\x13\x01\0\0(\x80\x12\x01\0\0)\0\0 \x80 \x04\0\0 \x80@\x01\0\x80@\x01\0\0 \x80 \x03\0\0 \x80\x12\x01\0\x80@\x01\0\0/\x80 \x01\0\0/\x80\x10\x01") } };
                const _YM0D_FY: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\x19\0)\0\0\x80\x13\x01\0\0(\x80\x12\x01\0\0)\0\0 \x80 \x04\0\0 \x80@\x01\0\x80@\x01\0\0 \x80 \x03\0\0 \x80\x12\x01\0\x80\x13\x01\0\0-\x80 \x02\0\0-\x80@\x02") } };
                const _YM0D_GD: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\x19\0/\0\0\x80\x13\x01\0\0(\x80\x12\x01\0\0)\0\0 \x80 \x04\0\0 \x80@\x01\0\x80@\x01\0\0m\0\0h\0\0 \x80 \x03\0\0 \x80\x13\x01\0\x80@\x01\0\0/\x80 \x01\0\0/\x80\x13\x01") } };
                const _YM0D_KO: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\"\08\0\0\x80\x13\x01\0\xB1D\0\0(\x80\x12\x01\0\xB1D\0\0)\0\0 \x80 \x04\0\0 \x80@\x01\0\xC7|\0\x80\x13\x01\0\xB1D\0\0 \x80 \x03\0\0 \x80@\x01\0\xC7|\0\x80\x13\x01\0\0.\0\0 \x80 \x01\0\0.\0\0 \x80@\x01\0\0.") } };
                const _YM0D_LT: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\x19\0)\0\0\x80\x13\x01\0\0(\x80\x12\x01\0\0)\0\0 \x80 \x04\0\0 \x80@\x01\0\x80\x12\x01\0\0 \x80 \x03\0\0 \x80@\x01\0\x80\x10\x01\0\0-\x80 \x02\0\0-\x80@\x02") } };
                const _YM0D_NL: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\x19\0)\0\0\x80@\x01\0\0 \x80 \x04\0\0 \x80\x13\x01\0\0(\x80\x12\x01\0\0)\0\x80@\x01\0\0 \x80 \x03\0\0 \x80\x12\x01\0\x80\x10\x01\0\0-\x80 \x02\0\0-\x80@\x02") } };
                const _YM0D_NO: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\x19\0,\0\0\x80\x13\x01\0\0(\x80\x12\x01\0\0)\0\0 \x80 \x04\0\0 \x80@\x01\0\x80@\x01\0\0.\0\0 \x80 \x03\0\0 \x80\x13\x01\0\x80@\x02\0\0.\x80 \x02\0\0.\x80\x13\x01") } };
                const _YM0D_PT: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\"\0D\0\0\x80@\x01\0\0 \0\0d\0\0e\0\0 \x80 \x04\0\0 \0\0d\0\0e\0\0 \x80\x12\x01\0\x80@\x01\0\0 \0\0d\0\0e\0\0 \x80 \x03\0\0 \0\0d\0\0e\0\0 \x80\x12\x01\0\x80\x13\x01\0\0-\x80 \x02\0\0-\x80@\x02") } };
                const _YM0D_SC: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\x007\0G\0\0\x80@\x01\0\0 \0\0d\0\0e\0\0 \x80 \x04\0\0 \0\0d\0\0e\0\0 \0\0s\0\0u\0\0 \x80\x13\x01\0\0 \0\0(\x80\x12\x01\0\0)\0\x80@\x01\0\0 \x80 \x03\0\0 \x80\x13\x01\0\x80@\x02\0\0/\x80 \x02\0\0/\x80\x13\x01") } };
                const _YM0D_SV: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\x19\0)\0\0\x80\x13\x01\0\0(\x80\x12\x01\0\0)\0\0 \x80 \x04\0\0 \x80@\x01\0\x80@\x01\0\0 \x80 \x03\0\0 \x80\x13\x01\0\x80\x13\x01\0\0-\x80 \x02\0\0-\x80@\x02") } };
                const _YM0D_VI: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0C\0\x80\0\0\0\0n\0\0g\0\0\xE0\0\0y\0\0 \x80@\x01\0\0 \0\0t\0\0h\0\0\xE1\0\0n\0\0g\0\0 \x80 \x01\0\0 \0\0n\0\x01\x03\0\0m\0\0 \x80\x12\x01\0\0 \x80\x13\x01\0\0\0n\0\0g\0\0\xE0\0\0y\0\0 \x80@\x01\0\0 \0\0t\0\0h\0\0\xE1\0\0n\0\0g\0\0 \x80 \x01\0\0 \0\0n\0\x01\x03\0\0m\0\0 \x80\x13\x01\0\x80@\x02\0\0-\x80 \x02\0\0-\x80\x13\x01") } };
                const _YM0_AF: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\x13\0\x1D\0\0\x80\x13\x01\0\0(\x80\x12\x01\0\0)\0\0 \x80 \x04\0\x80\x13\x01\0\0 \x80 \x03\0\x80\x13\x01\0\0-\x80 \x01") } };
                const _YM0_DE: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\n\0\x14\0\0\x80 \x04\0\0 \x80\x12\x01\0\x80 \x03\0\0 \x80\x12\x01\0\x80 \x01\0\0.\x80\x10\x01") } };
                const _YM0_EN: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\x13\0\x1D\0\0\x80 \x04\0\0 \x80\x13\x01\0\0(\x80\x12\x01\0\0)\0\x80 \x03\0\0 \x80\x13\x01\0\x80 \x01\0\0/\x80\x13\x01") } };
                const _YM0_EN_CA: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\x13\0\x1D\0\0\x80 \x04\0\0 \x80\x13\x01\0\0(\x80\x12\x01\0\0)\0\x80 \x03\0\0 \x80\x13\x01\0\x80\x13\x01\0\0-\x80 \x01") } };
                const _YM0_EN_CH: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\x13\0\x1D\0\0\x80 \x04\0\0 \x80\x13\x01\0\0(\x80\x12\x01\0\0)\0\x80 \x03\0\0 \x80\x13\x01\0\x80 \x01\0\0.\x80\x13\x01") } };
                const _YM0_ES: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\0\x80 \x01\0\0-\x80\x13\x01") } };
                const _YM0_FF_ADLM: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\n\0\x14\0\0\x80 \x04\0\0 \x80\x13\x01\0\x80 \x03\0\0 \x80\x13\x01\0\x80 \x01\0\0-\x80\x13\x01") } };
                const _YM0_FR: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\n\0\x14\0\0\x80 \x04\0\0 \x80\x12\x01\0\x80 \x03\0\0 \x80\x12\x01\0\x80 \x01\0\0/\x80\x10\x01") } };
                const _YM0_FY: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\n\0\x14\0\0\x80 \x04\0\0 \x80\x12\x01\0\x80 \x03\0\0 \x80\x12\x01\0\x80 \x01\0\0-\x80\x10\x01") } };
                const _YM0_GD: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\x13\0&\0\0\x80!\x04\0\0 \x80\x13\x01\0\0(\x80\x12\x01\0\0)\0\x80!\x03\0\0 \x80\x13\x01\0\0(\x80\x12\x01\0\0)\0\x80!\x01\0\0/\x80\x13\x01") } };
                const _YM0_HI_LATN: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\x13\0&\0\0\x80 \x04\0\0 \x80\x13\x01\0\0(\x80\x12\x01\0\0)\0\x80 \x03\0\0 \x80\x13\x01\0\0(\x80\x12\x01\0\0)\0\x80 \x01\0\0/\x80\x13\x01") } };
                const _YM0_JA: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\n\0\x14\0\0\x80\x12\x01\0^t\x80 \x04\0\x80\x12\x01\0^t\x80 \x03\0\x80\x12\x01\0^t\x80 \x01\0g\x08") } };
                const _YM0_KO: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\x19\x002\0\0\x80\x13\x01\0\xB1D\0\0(\x80\x12\x01\0\xB1D\0\0)\0\0 \x80 \x04\0\x80\x13\x01\0\xB1D\0\0(\x80\x12\x01\0\xB1D\0\0)\0\0 \x80 \x03\0\x80\x13\x01\0\0.\0\0 \x80 \x01\0\0.") } };
                const _YM0_LT: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\x13\0\x1D\0\0\x80\x13\x01\0\0(\x80\x12\x01\0\0)\0\0 \x80 \x04\0\x80\x12\x01\0\0 \x80 \x03\0\x80\x10\x01\0\0-\x80 \x01") } };
                const _YM0_NO: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\x13\0&\0\0\x80 \x04\0\0 \x80\x13\x01\0\0(\x80\x12\x01\0\0)\0\x80 \x03\0\0 \x80\x13\x01\0\0(\x80\x12\x01\0\0)\0\x80 \x01\0\0.\x80\x13\x01") } };
                const _YM0_PT: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\x13\0&\0\0\x80 \x04\0\0 \0\0d\0\0e\0\0 \x80\x12\x01\0\x80 \x03\0\0 \0\0d\0\0e\0\0 \x80\x12\x01\0\x80 \x01\0\0/\x80\x13\x01") } };
                const _YM0_RU: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\n\0\x14\0\0\x80!\x04\0\0 \x80\x12\x01\0\x80!\x03\0\0 \x80\x12\x01\0\x80 \x01\0\0.\x80\x10\x01") } };
                const _YM0_SC: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0(\0>\0\0\x80 \x04\0\0 \0\0d\0\0e\0\0 \0\0s\0\0u\0\0 \x80\x13\x01\0\0 \0\0(\x80\x12\x01\0\0)\0\x80 \x03\0\0 \x80\x13\x01\0\0 \0\0(\x80\x12\x01\0\0)\0\x80 \x01\0\0/\x80\x13\x01") } };
                const _YM0_SV: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\x13\0&\0\0\x80 \x04\0\0 \x80\x13\x01\0\0(\x80\x12\x01\0\0)\0\x80 \x03\0\0 \x80\x13\x01\0\0(\x80\x12\x01\0\0)\0\x80\x13\x01\0\0-\x80 \x01") } };
                const _YM0_VI: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: true, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0.\0V\0\0\0\0t\0\0h\0\0\xE1\0\0n\0\0g\0\0 \x80 \x01\0\0 \0\0n\0\x01\x03\0\0m\0\0 \x80\x12\x01\0\0 \x80\x13\x01\0\0\0t\0\0h\0\0\xE1\0\0n\0\0g\0\0 \x80 \x01\0\0 \0\0n\0\x01\x03\0\0m\0\0 \x80\x13\x01\0\x80 \x01\0\0/\x80\x13\x01") } };
                const _Y_FI: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\0\x80\x10\x01") } };
                icu_provider_baked::binary_search::Data(&[(("a1", "af"), _A1_AF), (("a1", "am"), _A1_AF), (("a1", "ar"), _A1_AF), (("a1", "as"), _A1_AF), (("a1", "ast"), _A1_AF), (("a1", "az"), _A1_AF), (("a1", "be"), _A1_AF), (("a1", "bg"), _A1_AF), (("a1", "bgc"), _A1_AF), (("a1", "bho"), _A1_AF), (("a1", "blo"), _A1_AF), (("a1", "bn"), _A1_AF), (("a1", "br"), _A1_BR), (("a1", "brx"), _A1_AF), (("a1", "bs"), _A1_BS), (("a1", "bs-Cyrl"), _A1_AF), (("a1", "ca"), _A1_CA), (("a1", "ceb"), _A1_AF), (("a1", "chr"), _A1_AF), (("a1", "cs"), _A1_CS), (("a1", "csw"), _A1_AF), (("a1", "cv"), _A1_AF), (("a1", "cy"), _A1_AF), (("a1", "da"), _A1_AF), (("a1", "de"), _A1_DE), (("a1", "doi"), _A1_AF), (("a1", "dsb"), _A1_AF), (("a1", "el"), _A1_AF), (("a1", "en"), _A1_EN), (("a1", "en-001"), _A1_EN_001), (("a1", "en-AE"), _A1_EN_001), (("a1", "en-CA"), _A1_EN_CA), (("a1", "en-CH"), _A1_EN_CH), (("a1", "eo"), _A1_AF), (("a1", "es"), _A1_ES), (("a1", "et"), _A1_AF), (("a1", "eu"), _A1_AF), (("a1", "fa"), _A1_AF), (("a1", "ff-Adlm"), _A1_FF_ADLM), (("a1", "fi"), _A1_FI), (("a1", "fil"), _A1_AF), (("a1", "fo"), _A1_AF), (("a1", "fr"), _A1_CA), (("a1", "fy"), _A1_FY), (("a1", "ga"), _A1_AF), (("a1", "gd"), _A1_GD), (("a1", "gl"), _A1_AF), (("a1", "gu"), _A1_AF), (("a1", "ha"), _A1_AF), (("a1", "he"), _A1_AF), (("a1", "hi"), _A1_AF), (("a1", "hr"), _A1_HR), (("a1", "hsb"), _A1_AF), (("a1", "hu"), _A1_AF), (("a1", "hy"), _A1_AF), (("a1", "ia"), _A1_AF), (("a1", "id"), _A1_ID), (("a1", "ie"), _A1_AF), (("a1", "ig"), _A1_AF), (("a1", "is"), _A1_AF), (("a1", "it"), _A1_IT), (("a1", "ja"), _A1_JA), (("a1", "jv"), _A1_AF), (("a1", "ka"), _A1_AF), (("a1", "kea"), _A1_AF), (("a1", "kgp"), _A1_KGP), (("a1", "kk"), _A1_AF), (("a1", "km"), _A1_AF), (("a1", "kn"), _A1_AF), (("a1", "ko"), _A1_KO), (("a1", "kok"), _A1_AF), (("a1", "ks"), _A1_AF), (("a1", "ks-Deva"), _A1_AF), (("a1", "ku"), _A1_AF), (("a1", "kxv"), _A1_AF), (("a1", "kxv-Deva"), _A1_AF), (("a1", "kxv-Orya"), _A1_AF), (("a1", "kxv-Telu"), _A1_AF), (("a1", "ky"), _A1_AF), (("a1", "lb"), _A1_DE), (("a1", "lij"), _A1_AF), (("a1", "lmo"), _A1_AF), (("a1", "lo"), _A1_ID), (("a1", "lt"), _A1_LT), (("a1", "lv"), _A1_AF), (("a1", "mai"), _A1_AF), (("a1", "mi"), _A1_AF), (("a1", "mk"), _A1_AF), (("a1", "ml"), _A1_AF), (("a1", "mn"), _A1_MN), (("a1", "mni"), _A1_AF), (("a1", "mr"), _A1_AF), (("a1", "ms"), _A1_MS), (("a1", "mt"), _A1_AF), (("a1", "my"), _A1_AF), (("a1", "nds"), _A1_AF), (("a1", "ne"), _A1_AF), (("a1", "nl"), _A1_FY), (("a1", "no"), _A1_NO), (("a1", "nqo"), _A1_AF), (("a1", "oc"), _A1_AF), (("a1", "or"), _A1_AF), (("a1", "pa"), _A1_AF), (("a1", "pcm"), _A1_AF), (("a1", "pl"), _A1_PL), (("a1", "prg"), _A1_AF), (("a1", "ps"), _A1_AF), (("a1", "pt"), _A1_PT), (("a1", "pt-PT"), _A1_PT_PT), (("a1", "qu"), _A1_AF), (("a1", "raj"), _A1_AF), (("a1", "rm"), _A1_AF), (("a1", "ro"), _A1_AF), (("a1", "ru"), _A1_RU), (("a1", "sa"), _A1_AF), (("a1", "sah"), _A1_AF), (("a1", "sat"), _A1_AF), (("a1", "sc"), _A1_SC), (("a1", "sd"), _A1_AF), (("a1", "sd-Deva"), _A1_AF), (("a1", "si"), _A1_AF), (("a1", "sk"), _A1_AF), (("a1", "sl"), _A1_AF), (("a1", "so"), _A1_AF), (("a1", "sq"), _A1_AF), (("a1", "sr"), _A1_AF), (("a1", "sr-Latn"), _A1_AF), (("a1", "su"), _A1_AF), (("a1", "sv"), _A1_SV), (("a1", "sw"), _A1_AF), (("a1", "syr"), _A1_AF), (("a1", "szl"), _A1_AF), (("a1", "ta"), _A1_TA), (("a1", "te"), _A1_AF), (("a1", "tg"), _A1_AF), (("a1", "th"), _A1_ID), (("a1", "ti"), _A1_AF), (("a1", "tk"), _A1_AF), (("a1", "to"), _A1_AF), (("a1", "tr"), _A1_AF), (("a1", "tt"), _A1_AF), (("a1", "ug"), _A1_UG), (("a1", "uk"), _A1_AF), (("a1", "und"), _A1_AF), (("a1", "ur"), _A1_AF), (("a1", "uz"), _A1_AF), (("a1", "uz-Cyrl"), _A1_AF), (("a1", "vec"), _A1_AF), (("a1", "vi"), _A1_VI), (("a1", "vmw"), _A1_AF), (("a1", "wo"), _A1_AF), (("a1", "xh"), _A1_AF), (("a1", "xnr"), _A1_AF), (("a1", "yo"), _A1_AF), (("a1", "yrl"), _A1_YRL), (("a1", "yue"), _A1_YUE), (("a1", "yue-Hans"), _A1_YUE_HANS), (("a1", "za"), _A1_AF), (("a1", "zh"), _A1_YUE_HANS), (("a1", "zh-HK"), _A1_ZH_HK), (("a1", "zh-Hant"), _A1_YUE_HANS), (("a1", "zh-MO"), _A1_ZH_HK), (("a1", "zh-SG"), _A1_ZH_SG), (("a1", "zu"), _A1_AF), (("a1e", "af"), _A1E_AF), (("a1e", "am"), _A1E_AF), (("a1e", "ar"), _A1E_AF), (("a1e", "as"), _A1E_AF), (("a1e", "ast"), _A1E_AF), (("a1e", "az"), _A1E_AF), (("a1e", "be"), _A1E_AF), (("a1e", "bg"), _A1E_AF), (("a1e", "bgc"), _A1E_AF), (("a1e", "bho"), _A1E_AF), (("a1e", "blo"), _A1E_AF), (("a1e", "bn"), _A1E_AF), (("a1e", "br"), _A1E_BR), (("a1e", "brx"), _A1E_AF), (("a1e", "bs"), _A1E_BS), (("a1e", "bs-Cyrl"), _A1E_AF), (("a1e", "ca"), _A1E_CA), (("a1e", "ceb"), _A1E_AF), (("a1e", "chr"), _A1E_AF), (("a1e", "cs"), _A1E_CS), (("a1e", "csw"), _A1E_AF), (("a1e", "cv"), _A1E_AF), (("a1e", "cy"), _A1E_AF), (("a1e", "da"), _A1E_AF), (("a1e", "de"), _A1E_DE), (("a1e", "doi"), _A1E_AF), (("a1e", "dsb"), _A1E_AF), (("a1e", "el"), _A1E_AF), (("a1e", "en"), _A1E_EN), (("a1e", "en-001"), _A1E_EN_001), (("a1e", "en-AE"), _A1E_EN_AE), (("a1e", "en-CA"), _A1E_EN_CA), (("a1e", "en-CH"), _A1E_EN_CH), (("a1e", "eo"), _A1E_AF), (("a1e", "es"), _A1E_ES), (("a1e", "et"), _A1E_AF), (("a1e", "eu"), _A1E_AF), (("a1e", "fa"), _A1E_AF), (("a1e", "ff-Adlm"), _A1E_FF_ADLM), (("a1e", "fi"), _A1E_FI), (("a1e", "fil"), _A1E_AF), (("a1e", "fo"), _A1E_AF), (("a1e", "fr"), _A1E_FR), (("a1e", "fy"), _A1E_FY), (("a1e", "ga"), _A1E_AF), (("a1e", "gd"), _A1E_GD), (("a1e", "gl"), _A1E_AF), (("a1e", "gu"), _A1E_AF), (("a1e", "ha"), _A1E_AF), (("a1e", "he"), _A1E_AF), (("a1e", "hi"), _A1E_AF), (("a1e", "hi-Latn"), _A1E_EN_AE), (("a1e", "hr"), _A1E_HR), (("a1e", "hsb"), _A1E_AF), (("a1e", "hu"), _A1E_AF), (("a1e", "hy"), _A1E_AF), (("a1e", "ia"), _A1E_AF), (("a1e", "id"), _A1E_ID), (("a1e", "ie"), _A1E_AF), (("a1e", "ig"), _A1E_AF), (("a1e", "is"), _A1E_AF), (("a1e", "it"), _A1E_IT), (("a1e", "ja"), _A1E_JA), (("a1e", "jv"), _A1E_AF), (("a1e", "ka"), _A1E_AF), (("a1e", "kea"), _A1E_AF), (("a1e", "kgp"), _A1E_KGP), (("a1e", "kk"), _A1E_AF), (("a1e", "km"), _A1E_AF), (("a1e", "kn"), _A1E_AF), (("a1e", "ko"), _A1E_KO), (("a1e", "kok"), _A1E_AF), (("a1e", "ks"), _A1E_AF), (("a1e", "ks-Deva"), _A1E_AF), (("a1e", "ku"), _A1E_AF), (("a1e", "kxv"), _A1E_AF), (("a1e", "kxv-Deva"), _A1E_AF), (("a1e", "kxv-Orya"), _A1E_AF), (("a1e", "kxv-Telu"), _A1E_AF), (("a1e", "ky"), _A1E_AF), (("a1e", "lb"), _A1E_LB), (("a1e", "lij"), _A1E_AF), (("a1e", "lmo"), _A1E_AF), (("a1e", "lo"), _A1E_ID), (("a1e", "lt"), _A1E_LT), (("a1e", "lv"), _A1E_AF), (("a1e", "mai"), _A1E_AF), (("a1e", "mi"), _A1E_AF), (("a1e", "mk"), _A1E_AF), (("a1e", "ml"), _A1E_AF), (("a1e", "mn"), _A1E_MN), (("a1e", "mni"), _A1E_AF), (("a1e", "mr"), _A1E_AF), (("a1e", "ms"), _A1E_MS), (("a1e", "mt"), _A1E_AF), (("a1e", "my"), _A1E_AF), (("a1e", "nds"), _A1E_AF), (("a1e", "ne"), _A1E_AF), (("a1e", "nl"), _A1E_FY), (("a1e", "no"), _A1E_NO), (("a1e", "nqo"), _A1E_AF), (("a1e", "oc"), _A1E_AF), (("a1e", "or"), _A1E_AF), (("a1e", "pa"), _A1E_AF), (("a1e", "pcm"), _A1E_AF), (("a1e", "pl"), _A1E_PL), (("a1e", "prg"), _A1E_AF), (("a1e", "ps"), _A1E_AF), (("a1e", "pt"), _A1E_PT), (("a1e", "qu"), _A1E_AF), (("a1e", "raj"), _A1E_AF), (("a1e", "rm"), _A1E_AF), (("a1e", "ro"), _A1E_AF), (("a1e", "ru"), _A1E_RU), (("a1e", "sa"), _A1E_AF), (("a1e", "sah"), _A1E_AF), (("a1e", "sat"), _A1E_AF), (("a1e", "sc"), _A1E_SC), (("a1e", "sd"), _A1E_AF), (("a1e", "sd-Deva"), _A1E_AF), (("a1e", "si"), _A1E_AF), (("a1e", "sk"), _A1E_AF), (("a1e", "sl"), _A1E_AF), (("a1e", "so"), _A1E_AF), (("a1e", "sq"), _A1E_AF), (("a1e", "sr"), _A1E_AF), (("a1e", "sr-Latn"), _A1E_AF), (("a1e", "su"), _A1E_AF), (("a1e", "sv"), _A1E_SV), (("a1e", "sw"), _A1E_AF), (("a1e", "syr"), _A1E_AF), (("a1e", "szl"), _A1E_AF), (("a1e", "ta"), _A1E_TA), (("a1e", "te"), _A1E_AF), (("a1e", "tg"), _A1E_AF), (("a1e", "th"), _A1E_TH), (("a1e", "ti"), _A1E_AF), (("a1e", "tk"), _A1E_AF), (("a1e", "to"), _A1E_AF), (("a1e", "tr"), _A1E_AF), (("a1e", "tt"), _A1E_AF), (("a1e", "ug"), _A1E_UG), (("a1e", "uk"), _A1E_AF), (("a1e", "und"), _A1E_AF), (("a1e", "ur"), _A1E_AF), (("a1e", "uz"), _A1E_AF), (("a1e", "uz-Cyrl"), _A1E_AF), (("a1e", "vec"), _A1E_AF), (("a1e", "vi"), _A1E_VI), (("a1e", "vmw"), _A1E_AF), (("a1e", "wo"), _A1E_AF), (("a1e", "xh"), _A1E_AF), (("a1e", "xnr"), _A1E_AF), (("a1e", "yo"), _A1E_AF), (("a1e", "yrl"), _A1E_PL), (("a1e", "yue"), _A1E_YUE), (("a1e", "yue-Hans"), _A1E_YUE_HANS), (("a1e", "za"), _A1E_AF), (("a1e", "zh"), _A1E_YUE_HANS), (("a1e", "zh-HK"), _A1E_ZH_HK), (("a1e", "zh-Hant"), _A1E_ZH_HANT), (("a1e", "zh-MO"), _A1E_ZH_HK), (("a1e", "zh-SG"), _A1E_ZH_SG), (("a1e", "zu"), _A1E_AF), (("d", "af"), _D_AF), (("d", "am"), _D_AF), (("d", "ar"), _D_AF), (("d", "as"), _D_AF), (("d", "ast"), _D_AF), (("d", "az"), _D_AF), (("d", "be"), _D_AF), (("d", "bg"), _D_AF), (("d", "bgc"), _D_AF), (("d", "bho"), _D_AF), (("d", "blo"), _D_AF), (("d", "bn"), _D_AF), (("d", "br"), _D_AF), (("d", "brx"), _D_AF), (("d", "bs"), _D_AF), (("d", "bs-Cyrl"), _D_AF), (("d", "ca"), _D_AF), (("d", "ceb"), _D_AF), (("d", "chr"), _D_AF), (("d", "cs"), _D_AF), (("d", "csw"), _D_AF), (("d", "cv"), _D_AF), (("d", "cy"), _D_AF), (("d", "da"), _D_AF), (("d", "de"), _D_AF), (("d", "doi"), _D_AF), (("d", "dsb"), _D_AF), (("d", "el"), _D_AF), (("d", "en"), _D_AF), (("d", "eo"), _D_AF), (("d", "es"), _D_AF), (("d", "et"), _D_AF), (("d", "eu"), _D_AF), (("d", "fa"), _D_AF), (("d", "ff-Adlm"), _D_AF), (("d", "fi"), _D_AF), (("d", "fil"), _D_AF), (("d", "fo"), _D_AF), (("d", "fr"), _D_AF), (("d", "fy"), _D_AF), (("d", "ga"), _D_AF), (("d", "gd"), _D_AF), (("d", "gl"), _D_AF), (("d", "gu"), _D_AF), (("d", "ha"), _D_AF), (("d", "he"), _D_AF), (("d", "hi"), _D_AF), (("d", "hr"), _D_AF), (("d", "hsb"), _D_AF), (("d", "hu"), _D_AF), (("d", "hy"), _D_AF), (("d", "ia"), _D_AF), (("d", "id"), _D_AF), (("d", "ie"), _D_AF), (("d", "ig"), _D_AF), (("d", "is"), _D_AF), (("d", "it"), _D_AF), (("d", "ja"), _D_JA), (("d", "jv"), _D_AF), (("d", "ka"), _D_AF), (("d", "kea"), _D_AF), (("d", "kgp"), _D_AF), (("d", "kk"), _D_AF), (("d", "km"), _D_AF), (("d", "kn"), _D_AF), (("d", "ko"), _D_KO), (("d", "kok"), _D_AF), (("d", "ks"), _D_AF), (("d", "ks-Deva"), _D_AF), (("d", "ku"), _D_AF), (("d", "kxv"), _D_AF), (("d", "kxv-Deva"), _D_AF), (("d", "kxv-Orya"), _D_AF), (("d", "kxv-Telu"), _D_AF), (("d", "ky"), _D_AF), (("d", "lb"), _D_AF), (("d", "lij"), _D_AF), (("d", "lmo"), _D_AF), (("d", "lo"), _D_AF), (("d", "lt"), _D_AF), (("d", "lv"), _D_AF), (("d", "mai"), _D_AF), (("d", "mi"), _D_AF), (("d", "mk"), _D_AF), (("d", "ml"), _D_AF), (("d", "mn"), _D_AF), (("d", "mni"), _D_AF), (("d", "mr"), _D_AF), (("d", "ms"), _D_AF), (("d", "mt"), _D_AF), (("d", "my"), _D_AF), (("d", "nds"), _D_AF), (("d", "ne"), _D_AF), (("d", "nl"), _D_AF), (("d", "no"), _D_NO), (("d", "nqo"), _D_AF), (("d", "oc"), _D_AF), (("d", "or"), _D_AF), (("d", "pa"), _D_AF), (("d", "pcm"), _D_AF), (("d", "pl"), _D_AF), (("d", "prg"), _D_AF), (("d", "ps"), _D_AF), (("d", "pt"), _D_AF), (("d", "qu"), _D_AF), (("d", "raj"), _D_AF), (("d", "rm"), _D_AF), (("d", "ro"), _D_AF), (("d", "ru"), _D_AF), (("d", "sa"), _D_AF), (("d", "sah"), _D_AF), (("d", "sat"), _D_AF), (("d", "sc"), _D_AF), (("d", "sd"), _D_AF), (("d", "sd-Deva"), _D_AF), (("d", "si"), _D_AF), (("d", "sk"), _D_AF), (("d", "sl"), _D_AF), (("d", "so"), _D_AF), (("d", "sq"), _D_AF), (("d", "sr"), _D_AF), (("d", "sr-Latn"), _D_AF), (("d", "su"), _D_AF), (("d", "sv"), _D_AF), (("d", "sw"), _D_AF), (("d", "syr"), _D_AF), (("d", "szl"), _D_AF), (("d", "ta"), _D_AF), (("d", "te"), _D_AF), (("d", "tg"), _D_AF), (("d", "th"), _D_AF), (("d", "ti"), _D_AF), (("d", "tk"), _D_AF), (("d", "to"), _D_AF), (("d", "tr"), _D_AF), (("d", "tt"), _D_AF), (("d", "ug"), _D_AF), (("d", "uk"), _D_AF), (("d", "und"), _D_AF), (("d", "ur"), _D_AF), (("d", "uz"), _D_AF), (("d", "uz-Cyrl"), _D_AF), (("d", "vec"), _D_AF), (("d", "vi"), _D_AF), (("d", "vmw"), _D_AF), (("d", "wo"), _D_AF), (("d", "xh"), _D_AF), (("d", "xnr"), _D_AF), (("d", "yo"), _D_AF), (("d", "yrl"), _D_AF), (("d", "yue"), _D_JA), (("d", "yue-Hans"), _D_JA), (("d", "za"), _D_AF), (("d", "zh"), _D_JA), (("d", "zh-Hant"), _D_JA), (("d", "zu"), _D_AF), (("de", "af"), _DE_AF), (("de", "am"), _DE_AF), (("de", "ar"), _DE_AF), (("de", "as"), _DE_AF), (("de", "ast"), _DE_AF), (("de", "az"), _DE_AF), (("de", "be"), _DE_AF), (("de", "bg"), _DE_AF), (("de", "bgc"), _DE_AF), (("de", "bho"), _DE_AF), (("de", "blo"), _DE_AF), (("de", "bn"), _DE_AF), (("de", "br"), _DE_BR), (("de", "brx"), _DE_AF), (("de", "bs"), _DE_BS), (("de", "bs-Cyrl"), _DE_AF), (("de", "ca"), _DE_AF), (("de", "ceb"), _DE_AF), (("de", "chr"), _DE_AF), (("de", "cs"), _DE_AF), (("de", "csw"), _DE_AF), (("de", "cv"), _DE_AF), (("de", "cy"), _DE_AF), (("de", "da"), _DE_AF), (("de", "de"), _DE_DE), (("de", "doi"), _DE_AF), (("de", "dsb"), _DE_AF), (("de", "el"), _DE_AF), (("de", "en"), _DE_BS), (("de", "en-001"), _DE_BR), (("de", "en-AE"), _DE_BR), (("de", "eo"), _DE_AF), (("de", "es"), _DE_BR), (("de", "et"), _DE_AF), (("de", "eu"), _DE_AF), (("de", "fa"), _DE_AF), (("de", "ff-Adlm"), _DE_BR), (("de", "fi"), _DE_AF), (("de", "fil"), _DE_AF), (("de", "fo"), _DE_AF), (("de", "fr"), _DE_AF), (("de", "fy"), _DE_BR), (("de", "ga"), _DE_AF), (("de", "gd"), _DE_BR), (("de", "gl"), _DE_AF), (("de", "gu"), _DE_AF), (("de", "ha"), _DE_AF), (("de", "he"), _DE_AF), (("de", "hi"), _DE_AF), (("de", "hr"), _DE_AF), (("de", "hsb"), _DE_AF), (("de", "hu"), _DE_AF), (("de", "hy"), _DE_AF), (("de", "ia"), _DE_AF), (("de", "id"), _DE_AF), (("de", "ie"), _DE_AF), (("de", "ig"), _DE_AF), (("de", "is"), _DE_AF), (("de", "it"), _DE_AF), (("de", "ja"), _DE_JA), (("de", "jv"), _DE_AF), (("de", "ka"), _DE_AF), (("de", "kea"), _DE_AF), (("de", "kgp"), _DE_AF), (("de", "kk"), _DE_AF), (("de", "km"), _DE_AF), (("de", "kn"), _DE_AF), (("de", "ko"), _DE_KO), (("de", "kok"), _DE_AF), (("de", "ks"), _DE_AF), (("de", "ks-Deva"), _DE_AF), (("de", "ku"), _DE_AF), (("de", "kxv"), _DE_AF), (("de", "kxv-Deva"), _DE_AF), (("de", "kxv-Orya"), _DE_AF), (("de", "kxv-Telu"), _DE_AF), (("de", "ky"), _DE_AF), (("de", "lb"), _DE_AF), (("de", "lij"), _DE_AF), (("de", "lmo"), _DE_AF), (("de", "lo"), _DE_AF), (("de", "lt"), _DE_AF), (("de", "lv"), _DE_AF), (("de", "mai"), _DE_AF), (("de", "mi"), _DE_AF), (("de", "mk"), _DE_AF), (("de", "ml"), _DE_AF), (("de", "mn"), _DE_AF), (("de", "mni"), _DE_AF), (("de", "mr"), _DE_AF), (("de", "ms"), _DE_AF), (("de", "mt"), _DE_AF), (("de", "my"), _DE_AF), (("de", "nds"), _DE_AF), (("de", "ne"), _DE_AF), (("de", "nl"), _DE_BR), (("de", "no"), _DE_NO), (("de", "nqo"), _DE_AF), (("de", "oc"), _DE_AF), (("de", "or"), _DE_AF), (("de", "pa"), _DE_AF), (("de", "pcm"), _DE_AF), (("de", "pl"), _DE_AF), (("de", "prg"), _DE_AF), (("de", "ps"), _DE_AF), (("de", "pt"), _DE_PT), (("de", "qu"), _DE_AF), (("de", "raj"), _DE_AF), (("de", "rm"), _DE_AF), (("de", "ro"), _DE_AF), (("de", "ru"), _DE_PT), (("de", "sa"), _DE_AF), (("de", "sah"), _DE_AF), (("de", "sat"), _DE_AF), (("de", "sc"), _DE_BR), (("de", "sd"), _DE_AF), (("de", "sd-Deva"), _DE_AF), (("de", "si"), _DE_AF), (("de", "sk"), _DE_AF), (("de", "sl"), _DE_AF), (("de", "so"), _DE_AF), (("de", "sq"), _DE_AF), (("de", "sr"), _DE_AF), (("de", "sr-Latn"), _DE_AF), (("de", "su"), _DE_AF), (("de", "sv"), _DE_BR), (("de", "sw"), _DE_AF), (("de", "syr"), _DE_AF), (("de", "szl"), _DE_AF), (("de", "ta"), _DE_AF), (("de", "te"), _DE_AF), (("de", "tg"), _DE_AF), (("de", "th"), _DE_AF), (("de", "ti"), _DE_AF), (("de", "tk"), _DE_AF), (("de", "to"), _DE_AF), (("de", "tr"), _DE_AF), (("de", "tt"), _DE_AF), (("de", "ug"), _DE_AF), (("de", "uk"), _DE_AF), (("de", "und"), _DE_AF), (("de", "ur"), _DE_AF), (("de", "uz"), _DE_AF), (("de", "uz-Cyrl"), _DE_AF), (("de", "vec"), _DE_AF), (("de", "vi"), _DE_VI), (("de", "vmw"), _DE_AF), (("de", "wo"), _DE_AF), (("de", "xh"), _DE_AF), (("de", "xnr"), _DE_AF), (("de", "yo"), _DE_AF), (("de", "yrl"), _DE_AF), (("de", "yue"), _DE_YUE), (("de", "yue-Hans"), _DE_YUE), (("de", "za"), _DE_AF), (("de", "zh"), _DE_YUE), (("de", "zh-HK"), _DE_YUE), (("de", "zh-Hant"), _DE_BS), (("de", "zh-MO"), _DE_YUE), (("de", "zu"), _DE_AF), (("e", "af"), _E_AF), (("e", "am"), _E_AF), (("e", "ar"), _E_AF), (("e", "as"), _E_AF), (("e", "ast"), _E_AF), (("e", "az"), _E_AF), (("e", "be"), _E_AF), (("e", "bg"), _E_AF), (("e", "bgc"), _E_AF), (("e", "bho"), _E_AF), (("e", "blo"), _E_AF), (("e", "bn"), _E_AF), (("e", "br"), _E_AF), (("e", "brx"), _E_AF), (("e", "bs"), _E_AF), (("e", "bs-Cyrl"), _E_AF), (("e", "ca"), _E_AF), (("e", "ceb"), _E_AF), (("e", "chr"), _E_AF), (("e", "cs"), _E_AF), (("e", "csw"), _E_AF), (("e", "cv"), _E_AF), (("e", "cy"), _E_AF), (("e", "da"), _E_AF), (("e", "de"), _E_AF), (("e", "doi"), _E_AF), (("e", "dsb"), _E_AF), (("e", "el"), _E_AF), (("e", "en"), _E_AF), (("e", "eo"), _E_AF), (("e", "es"), _E_AF), (("e", "et"), _E_AF), (("e", "eu"), _E_AF), (("e", "fa"), _E_AF), (("e", "ff-Adlm"), _E_AF), (("e", "fi"), _E_AF), (("e", "fil"), _E_AF), (("e", "fo"), _E_AF), (("e", "fr"), _E_AF), (("e", "fy"), _E_AF), (("e", "ga"), _E_AF), (("e", "gd"), _E_AF), (("e", "gl"), _E_AF), (("e", "gu"), _E_AF), (("e", "ha"), _E_AF), (("e", "he"), _E_AF), (("e", "hi"), _E_AF), (("e", "hr"), _E_AF), (("e", "hsb"), _E_AF), (("e", "hu"), _E_AF), (("e", "hy"), _E_AF), (("e", "ia"), _E_AF), (("e", "id"), _E_AF), (("e", "ie"), _E_AF), (("e", "ig"), _E_AF), (("e", "is"), _E_AF), (("e", "it"), _E_AF), (("e", "ja"), _E_AF), (("e", "jv"), _E_AF), (("e", "ka"), _E_AF), (("e", "kea"), _E_AF), (("e", "kgp"), _E_AF), (("e", "kk"), _E_AF), (("e", "km"), _E_AF), (("e", "kn"), _E_AF), (("e", "ko"), _E_AF), (("e", "kok"), _E_AF), (("e", "ks"), _E_AF), (("e", "ks-Deva"), _E_AF), (("e", "ku"), _E_AF), (("e", "kxv"), _E_AF), (("e", "kxv-Deva"), _E_AF), (("e", "kxv-Orya"), _E_AF), (("e", "kxv-Telu"), _E_AF), (("e", "ky"), _E_AF), (("e", "lb"), _E_AF), (("e", "lij"), _E_AF), (("e", "lmo"), _E_AF), (("e", "lo"), _E_AF), (("e", "lt"), _E_AF), (("e", "lv"), _E_AF), (("e", "mai"), _E_AF), (("e", "mi"), _E_AF), (("e", "mk"), _E_AF), (("e", "ml"), _E_AF), (("e", "mn"), _E_AF), (("e", "mni"), _E_AF), (("e", "mr"), _E_AF), (("e", "ms"), _E_AF), (("e", "mt"), _E_AF), (("e", "my"), _E_AF), (("e", "nds"), _E_AF), (("e", "ne"), _E_AF), (("e", "nl"), _E_AF), (("e", "no"), _E_AF), (("e", "nqo"), _E_AF), (("e", "oc"), _E_AF), (("e", "or"), _E_AF), (("e", "pa"), _E_AF), (("e", "pcm"), _E_AF), (("e", "pl"), _E_AF), (("e", "prg"), _E_AF), (("e", "ps"), _E_AF), (("e", "pt"), _E_AF), (("e", "qu"), _E_AF), (("e", "raj"), _E_AF), (("e", "rm"), _E_AF), (("e", "ro"), _E_AF), (("e", "ru"), _E_AF), (("e", "sa"), _E_AF), (("e", "sah"), _E_AF), (("e", "sat"), _E_AF), (("e", "sc"), _E_AF), (("e", "sd"), _E_AF), (("e", "sd-Deva"), _E_AF), (("e", "si"), _E_AF), (("e", "sk"), _E_AF), (("e", "sl"), _E_AF), (("e", "so"), _E_AF), (("e", "sq"), _E_AF), (("e", "sr"), _E_AF), (("e", "sr-Latn"), _E_AF), (("e", "su"), _E_AF), (("e", "sv"), _E_AF), (("e", "sw"), _E_AF), (("e", "syr"), _E_AF), (("e", "szl"), _E_AF), (("e", "ta"), _E_AF), (("e", "te"), _E_AF), (("e", "tg"), _E_AF), (("e", "th"), _E_AF), (("e", "ti"), _E_AF), (("e", "tk"), _E_AF), (("e", "to"), _E_AF), (("e", "tr"), _E_AF), (("e", "tt"), _E_AF), (("e", "ug"), _E_AF), (("e", "uk"), _E_AF), (("e", "und"), _E_AF), (("e", "ur"), _E_AF), (("e", "uz"), _E_AF), (("e", "uz-Cyrl"), _E_AF), (("e", "vec"), _E_AF), (("e", "vi"), _E_AF), (("e", "vmw"), _E_AF), (("e", "wo"), _E_AF), (("e", "xh"), _E_AF), (("e", "xnr"), _E_AF), (("e", "yo"), _E_AF), (("e", "yrl"), _E_AF), (("e", "yue"), _E_AF), (("e", "yue-Hans"), _E_AF), (("e", "za"), _E_AF), (("e", "zh"), _E_AF), (("e", "zh-Hant"), _E_AF), (("e", "zu"), _E_AF), (("gy", "af"), _GY_AF), (("gy", "am"), _GY_AF), (("gy", "ar"), _GY_AF), (("gy", "as"), _GY_AF), (("gy", "ast"), _GY_AF), (("gy", "az"), _GY_AF), (("gy", "be"), _GY_AF), (("gy", "bg"), _GY_AF), (("gy", "bgc"), _GY_AF), (("gy", "bho"), _GY_AF), (("gy", "blo"), _GY_AF), (("gy", "bn"), _GY_AF), (("gy", "br"), _GY_BR), (("gy", "brx"), _GY_AF), (("gy", "bs"), _GY_BS), (("gy", "bs-Cyrl"), _GY_AF), (("gy", "ca"), _GY_AF), (("gy", "ceb"), _GY_AF), (("gy", "chr"), _GY_AF), (("gy", "cs"), _GY_AF), (("gy", "csw"), _GY_AF), (("gy", "cv"), _GY_AF), (("gy", "cy"), _GY_AF), (("gy", "da"), _GY_AF), (("gy", "de"), _GY_DE), (("gy", "doi"), _GY_AF), (("gy", "dsb"), _GY_AF), (("gy", "el"), _GY_AF), (("gy", "en"), _GY_BS), (("gy", "eo"), _GY_AF), (("gy", "es"), _GY_ES), (("gy", "et"), _GY_AF), (("gy", "eu"), _GY_AF), (("gy", "fa"), _GY_AF), (("gy", "ff-Adlm"), _GY_AF), (("gy", "fi"), _GY_AF), (("gy", "fil"), _GY_AF), (("gy", "fo"), _GY_AF), (("gy", "fr"), _GY_DE), (("gy", "fy"), _GY_DE), (("gy", "ga"), _GY_AF), (("gy", "gd"), _GY_BS), (("gy", "gl"), _GY_AF), (("gy", "gu"), _GY_AF), (("gy", "ha"), _GY_AF), (("gy", "he"), _GY_AF), (("gy", "hi"), _GY_AF), (("gy", "hr"), _GY_AF), (("gy", "hsb"), _GY_AF), (("gy", "hu"), _GY_AF), (("gy", "hy"), _GY_AF), (("gy", "ia"), _GY_AF), (("gy", "id"), _GY_AF), (("gy", "ie"), _GY_AF), (("gy", "ig"), _GY_AF), (("gy", "is"), _GY_AF), (("gy", "it"), _GY_AF), (("gy", "ja"), _GY_JA), (("gy", "jv"), _GY_AF), (("gy", "ka"), _GY_AF), (("gy", "kea"), _GY_AF), (("gy", "kgp"), _GY_AF), (("gy", "kk"), _GY_AF), (("gy", "km"), _GY_AF), (("gy", "kn"), _GY_AF), (("gy", "ko"), _GY_KO), (("gy", "kok"), _GY_AF), (("gy", "ks"), _GY_AF), (("gy", "ks-Deva"), _GY_AF), (("gy", "ku"), _GY_AF), (("gy", "kxv"), _GY_AF), (("gy", "kxv-Deva"), _GY_AF), (("gy", "kxv-Orya"), _GY_AF), (("gy", "kxv-Telu"), _GY_AF), (("gy", "ky"), _GY_AF), (("gy", "lb"), _GY_AF), (("gy", "lij"), _GY_AF), (("gy", "lmo"), _GY_AF), (("gy", "lo"), _GY_AF), (("gy", "lt"), _GY_DE), (("gy", "lv"), _GY_AF), (("gy", "mai"), _GY_AF), (("gy", "mi"), _GY_AF), (("gy", "mk"), _GY_AF), (("gy", "ml"), _GY_AF), (("gy", "mn"), _GY_AF), (("gy", "mni"), _GY_AF), (("gy", "mr"), _GY_AF), (("gy", "ms"), _GY_AF), (("gy", "mt"), _GY_AF), (("gy", "my"), _GY_AF), (("gy", "nds"), _GY_AF), (("gy", "ne"), _GY_AF), (("gy", "nl"), _GY_DE), (("gy", "no"), _GY_BS), (("gy", "nqo"), _GY_AF), (("gy", "oc"), _GY_AF), (("gy", "or"), _GY_AF), (("gy", "pa"), _GY_AF), (("gy", "pcm"), _GY_AF), (("gy", "pl"), _GY_AF), (("gy", "prg"), _GY_AF), (("gy", "ps"), _GY_AF), (("gy", "pt"), _GY_BS), (("gy", "qu"), _GY_AF), (("gy", "raj"), _GY_AF), (("gy", "rm"), _GY_AF), (("gy", "ro"), _GY_AF), (("gy", "ru"), _GY_DE), (("gy", "sa"), _GY_AF), (("gy", "sah"), _GY_AF), (("gy", "sat"), _GY_AF), (("gy", "sc"), _GY_BR), (("gy", "sd"), _GY_AF), (("gy", "sd-Deva"), _GY_AF), (("gy", "si"), _GY_AF), (("gy", "sk"), _GY_AF), (("gy", "sl"), _GY_AF), (("gy", "so"), _GY_AF), (("gy", "sq"), _GY_AF), (("gy", "sr"), _GY_AF), (("gy", "sr-Latn"), _GY_AF), (("gy", "su"), _GY_AF), (("gy", "sv"), _GY_BS), (("gy", "sw"), _GY_AF), (("gy", "syr"), _GY_AF), (("gy", "szl"), _GY_AF), (("gy", "ta"), _GY_AF), (("gy", "te"), _GY_AF), (("gy", "tg"), _GY_AF), (("gy", "th"), _GY_AF), (("gy", "ti"), _GY_AF), (("gy", "tk"), _GY_AF), (("gy", "to"), _GY_AF), (("gy", "tr"), _GY_AF), (("gy", "tt"), _GY_AF), (("gy", "ug"), _GY_AF), (("gy", "uk"), _GY_AF), (("gy", "und"), _GY_AF), (("gy", "ur"), _GY_AF), (("gy", "uz"), _GY_AF), (("gy", "uz-Cyrl"), _GY_AF), (("gy", "vec"), _GY_AF), (("gy", "vi"), _GY_VI), (("gy", "vmw"), _GY_AF), (("gy", "wo"), _GY_AF), (("gy", "xh"), _GY_AF), (("gy", "xnr"), _GY_AF), (("gy", "yo"), _GY_AF), (("gy", "yrl"), _GY_AF), (("gy", "yue"), _GY_YUE), (("gy", "yue-Hans"), _GY_YUE), (("gy", "za"), _GY_AF), (("gy", "zh"), _GY_YUE), (("gy", "zh-Hant"), _GY_YUE), (("gy", "zu"), _GY_AF), (("gym0", "af"), _GYM0_AF), (("gym0", "am"), _GYM0_AF), (("gym0", "ar"), _GYM0_AF), (("gym0", "as"), _GYM0_AF), (("gym0", "ast"), _GYM0_AF), (("gym0", "az"), _GYM0_AF), (("gym0", "be"), _GYM0_AF), (("gym0", "bg"), _GYM0_AF), (("gym0", "bgc"), _GYM0_AF), (("gym0", "bho"), _GYM0_AF), (("gym0", "blo"), _GYM0_AF), (("gym0", "bn"), _GYM0_AF), (("gym0", "br"), _GYM0_BR), (("gym0", "brx"), _GYM0_AF), (("gym0", "bs"), _GYM0_AF), (("gym0", "bs-Cyrl"), _GYM0_AF), (("gym0", "ca"), _GYM0_AF), (("gym0", "ceb"), _GYM0_AF), (("gym0", "chr"), _GYM0_AF), (("gym0", "cs"), _GYM0_AF), (("gym0", "csw"), _GYM0_AF), (("gym0", "cv"), _GYM0_AF), (("gym0", "cy"), _GYM0_AF), (("gym0", "da"), _GYM0_AF), (("gym0", "de"), _GYM0_DE), (("gym0", "doi"), _GYM0_AF), (("gym0", "dsb"), _GYM0_AF), (("gym0", "el"), _GYM0_AF), (("gym0", "en"), _GYM0_EN), (("gym0", "eo"), _GYM0_AF), (("gym0", "es"), _GYM0_ES), (("gym0", "et"), _GYM0_AF), (("gym0", "eu"), _GYM0_AF), (("gym0", "fa"), _GYM0_AF), (("gym0", "ff-Adlm"), _GYM0_AF), (("gym0", "fi"), _GYM0_AF), (("gym0", "fil"), _GYM0_AF), (("gym0", "fo"), _GYM0_AF), (("gym0", "fr"), _GYM0_DE), (("gym0", "fy"), _GYM0_DE), (("gym0", "ga"), _GYM0_AF), (("gym0", "gd"), _GYM0_GD), (("gym0", "gl"), _GYM0_AF), (("gym0", "gu"), _GYM0_AF), (("gym0", "ha"), _GYM0_AF), (("gym0", "he"), _GYM0_AF), (("gym0", "hi"), _GYM0_AF), (("gym0", "hi-Latn"), _GYM0_HI_LATN), (("gym0", "hr"), _GYM0_AF), (("gym0", "hsb"), _GYM0_AF), (("gym0", "hu"), _GYM0_AF), (("gym0", "hy"), _GYM0_AF), (("gym0", "ia"), _GYM0_AF), (("gym0", "id"), _GYM0_AF), (("gym0", "ie"), _GYM0_AF), (("gym0", "ig"), _GYM0_AF), (("gym0", "is"), _GYM0_AF), (("gym0", "it"), _GYM0_AF), (("gym0", "ja"), _GYM0_JA), (("gym0", "jv"), _GYM0_AF), (("gym0", "ka"), _GYM0_AF), (("gym0", "kea"), _GYM0_AF), (("gym0", "kgp"), _GYM0_AF), (("gym0", "kk"), _GYM0_AF), (("gym0", "km"), _GYM0_AF), (("gym0", "kn"), _GYM0_AF), (("gym0", "ko"), _GYM0_KO), (("gym0", "kok"), _GYM0_AF), (("gym0", "ks"), _GYM0_AF), (("gym0", "ks-Deva"), _GYM0_AF), (("gym0", "ku"), _GYM0_AF), (("gym0", "kxv"), _GYM0_AF), (("gym0", "kxv-Deva"), _GYM0_AF), (("gym0", "kxv-Orya"), _GYM0_AF), (("gym0", "kxv-Telu"), _GYM0_AF), (("gym0", "ky"), _GYM0_AF), (("gym0", "lb"), _GYM0_AF), (("gym0", "lij"), _GYM0_AF), (("gym0", "lmo"), _GYM0_AF), (("gym0", "lo"), _GYM0_AF), (("gym0", "lt"), _GYM0_LT), (("gym0", "lv"), _GYM0_AF), (("gym0", "mai"), _GYM0_AF), (("gym0", "mi"), _GYM0_AF), (("gym0", "mk"), _GYM0_AF), (("gym0", "ml"), _GYM0_AF), (("gym0", "mn"), _GYM0_AF), (("gym0", "mni"), _GYM0_AF), (("gym0", "mr"), _GYM0_AF), (("gym0", "ms"), _GYM0_AF), (("gym0", "mt"), _GYM0_AF), (("gym0", "my"), _GYM0_AF), (("gym0", "nds"), _GYM0_AF), (("gym0", "ne"), _GYM0_AF), (("gym0", "nl"), _GYM0_NL), (("gym0", "no"), _GYM0_NO), (("gym0", "nqo"), _GYM0_AF), (("gym0", "oc"), _GYM0_AF), (("gym0", "or"), _GYM0_AF), (("gym0", "pa"), _GYM0_AF), (("gym0", "pcm"), _GYM0_AF), (("gym0", "pl"), _GYM0_AF), (("gym0", "prg"), _GYM0_AF), (("gym0", "ps"), _GYM0_AF), (("gym0", "pt"), _GYM0_PT), (("gym0", "qu"), _GYM0_AF), (("gym0", "raj"), _GYM0_AF), (("gym0", "rm"), _GYM0_AF), (("gym0", "ro"), _GYM0_AF), (("gym0", "ru"), _GYM0_RU), (("gym0", "sa"), _GYM0_AF), (("gym0", "sah"), _GYM0_AF), (("gym0", "sat"), _GYM0_AF), (("gym0", "sc"), _GYM0_SC), (("gym0", "sd"), _GYM0_AF), (("gym0", "sd-Deva"), _GYM0_AF), (("gym0", "si"), _GYM0_AF), (("gym0", "sk"), _GYM0_AF), (("gym0", "sl"), _GYM0_AF), (("gym0", "so"), _GYM0_AF), (("gym0", "sq"), _GYM0_AF), (("gym0", "sr"), _GYM0_AF), (("gym0", "sr-Latn"), _GYM0_AF), (("gym0", "su"), _GYM0_AF), (("gym0", "sv"), _GYM0_NO), (("gym0", "sw"), _GYM0_AF), (("gym0", "syr"), _GYM0_AF), (("gym0", "szl"), _GYM0_AF), (("gym0", "ta"), _GYM0_AF), (("gym0", "te"), _GYM0_AF), (("gym0", "tg"), _GYM0_AF), (("gym0", "th"), _GYM0_AF), (("gym0", "ti"), _GYM0_AF), (("gym0", "tk"), _GYM0_AF), (("gym0", "to"), _GYM0_AF), (("gym0", "tr"), _GYM0_AF), (("gym0", "tt"), _GYM0_AF), (("gym0", "ug"), _GYM0_AF), (("gym0", "uk"), _GYM0_AF), (("gym0", "und"), _GYM0_AF), (("gym0", "ur"), _GYM0_AF), (("gym0", "uz"), _GYM0_AF), (("gym0", "uz-Cyrl"), _GYM0_AF), (("gym0", "vec"), _GYM0_AF), (("gym0", "vi"), _GYM0_VI), (("gym0", "vmw"), _GYM0_AF), (("gym0", "wo"), _GYM0_AF), (("gym0", "xh"), _GYM0_AF), (("gym0", "xnr"), _GYM0_AF), (("gym0", "yo"), _GYM0_AF), (("gym0", "yrl"), _GYM0_AF), (("gym0", "yue"), _GYM0_YUE), (("gym0", "yue-Hans"), _GYM0_YUE), (("gym0", "za"), _GYM0_AF), (("gym0", "zh"), _GYM0_ZH), (("gym0", "zh-HK"), _GYM0_ZH_HK), (("gym0", "zh-Hant"), _GYM0_ZH_HANT), (("gym0", "zh-MO"), _GYM0_ZH_HK), (("gym0", "zu"), _GYM0_AF), (("gym0d", "af"), _GYM0D_AF), (("gym0d", "am"), _GYM0D_AF), (("gym0d", "ar"), _GYM0D_AF), (("gym0d", "as"), _GYM0D_AF), (("gym0d", "ast"), _GYM0D_AF), (("gym0d", "az"), _GYM0D_AF), (("gym0d", "be"), _GYM0D_AF), (("gym0d", "bg"), _GYM0D_AF), (("gym0d", "bgc"), _GYM0D_AF), (("gym0d", "bho"), _GYM0D_AF), (("gym0d", "blo"), _GYM0D_AF), (("gym0d", "bn"), _GYM0D_AF), (("gym0d", "br"), _GYM0D_AF), (("gym0d", "brx"), _GYM0D_AF), (("gym0d", "bs"), _GYM0D_AF), (("gym0d", "bs-Cyrl"), _GYM0D_AF), (("gym0d", "ca"), _GYM0D_AF), (("gym0d", "ceb"), _GYM0D_AF), (("gym0d", "chr"), _GYM0D_AF), (("gym0d", "cs"), _GYM0D_AF), (("gym0d", "csw"), _GYM0D_AF), (("gym0d", "cv"), _GYM0D_AF), (("gym0d", "cy"), _GYM0D_AF), (("gym0d", "da"), _GYM0D_AF), (("gym0d", "de"), _GYM0D_DE), (("gym0d", "doi"), _GYM0D_AF), (("gym0d", "dsb"), _GYM0D_AF), (("gym0d", "el"), _GYM0D_AF), (("gym0d", "en"), _GYM0D_EN), (("gym0d", "en-001"), _GYM0D_EN_001), (("gym0d", "en-AE"), _GYM0D_EN_AE), (("gym0d", "en-CA"), _GYM0D_EN_CA), (("gym0d", "eo"), _GYM0D_AF), (("gym0d", "es"), _GYM0D_ES), (("gym0d", "et"), _GYM0D_AF), (("gym0d", "eu"), _GYM0D_AF), (("gym0d", "fa"), _GYM0D_AF), (("gym0d", "ff-Adlm"), _GYM0D_FF_ADLM), (("gym0d", "fi"), _GYM0D_AF), (("gym0d", "fil"), _GYM0D_AF), (("gym0d", "fo"), _GYM0D_AF), (("gym0d", "fr"), _GYM0D_FR), (("gym0d", "fy"), _GYM0D_FR), (("gym0d", "ga"), _GYM0D_AF), (("gym0d", "gd"), _GYM0D_GD), (("gym0d", "gl"), _GYM0D_AF), (("gym0d", "gu"), _GYM0D_AF), (("gym0d", "ha"), _GYM0D_AF), (("gym0d", "he"), _GYM0D_AF), (("gym0d", "hi"), _GYM0D_AF), (("gym0d", "hr"), _GYM0D_AF), (("gym0d", "hsb"), _GYM0D_AF), (("gym0d", "hu"), _GYM0D_AF), (("gym0d", "hy"), _GYM0D_AF), (("gym0d", "ia"), _GYM0D_AF), (("gym0d", "id"), _GYM0D_AF), (("gym0d", "ie"), _GYM0D_AF), (("gym0d", "ig"), _GYM0D_AF), (("gym0d", "is"), _GYM0D_AF), (("gym0d", "it"), _GYM0D_AF), (("gym0d", "ja"), _GYM0D_JA), (("gym0d", "jv"), _GYM0D_AF), (("gym0d", "ka"), _GYM0D_AF), (("gym0d", "kea"), _GYM0D_AF), (("gym0d", "kgp"), _GYM0D_AF), (("gym0d", "kk"), _GYM0D_AF), (("gym0d", "km"), _GYM0D_AF), (("gym0d", "kn"), _GYM0D_AF), (("gym0d", "ko"), _GYM0D_KO), (("gym0d", "kok"), _GYM0D_AF), (("gym0d", "ks"), _GYM0D_AF), (("gym0d", "ks-Deva"), _GYM0D_AF), (("gym0d", "ku"), _GYM0D_AF), (("gym0d", "kxv"), _GYM0D_AF), (("gym0d", "kxv-Deva"), _GYM0D_AF), (("gym0d", "kxv-Orya"), _GYM0D_AF), (("gym0d", "kxv-Telu"), _GYM0D_AF), (("gym0d", "ky"), _GYM0D_AF), (("gym0d", "lb"), _GYM0D_AF), (("gym0d", "lij"), _GYM0D_AF), (("gym0d", "lmo"), _GYM0D_AF), (("gym0d", "lo"), _GYM0D_AF), (("gym0d", "lt"), _GYM0D_LT), (("gym0d", "lv"), _GYM0D_AF), (("gym0d", "mai"), _GYM0D_AF), (("gym0d", "mi"), _GYM0D_AF), (("gym0d", "mk"), _GYM0D_AF), (("gym0d", "ml"), _GYM0D_AF), (("gym0d", "mn"), _GYM0D_AF), (("gym0d", "mni"), _GYM0D_AF), (("gym0d", "mr"), _GYM0D_AF), (("gym0d", "ms"), _GYM0D_AF), (("gym0d", "mt"), _GYM0D_AF), (("gym0d", "my"), _GYM0D_AF), (("gym0d", "nds"), _GYM0D_AF), (("gym0d", "ne"), _GYM0D_AF), (("gym0d", "nl"), _GYM0D_NL), (("gym0d", "no"), _GYM0D_NO), (("gym0d", "nqo"), _GYM0D_AF), (("gym0d", "oc"), _GYM0D_AF), (("gym0d", "or"), _GYM0D_AF), (("gym0d", "pa"), _GYM0D_AF), (("gym0d", "pcm"), _GYM0D_AF), (("gym0d", "pl"), _GYM0D_AF), (("gym0d", "prg"), _GYM0D_AF), (("gym0d", "ps"), _GYM0D_AF), (("gym0d", "pt"), _GYM0D_PT), (("gym0d", "qu"), _GYM0D_AF), (("gym0d", "raj"), _GYM0D_AF), (("gym0d", "rm"), _GYM0D_AF), (("gym0d", "ro"), _GYM0D_AF), (("gym0d", "ru"), _GYM0D_FR), (("gym0d", "sa"), _GYM0D_AF), (("gym0d", "sah"), _GYM0D_AF), (("gym0d", "sat"), _GYM0D_AF), (("gym0d", "sc"), _GYM0D_SC), (("gym0d", "sd"), _GYM0D_AF), (("gym0d", "sd-Deva"), _GYM0D_AF), (("gym0d", "si"), _GYM0D_AF), (("gym0d", "sk"), _GYM0D_AF), (("gym0d", "sl"), _GYM0D_AF), (("gym0d", "so"), _GYM0D_AF), (("gym0d", "sq"), _GYM0D_AF), (("gym0d", "sr"), _GYM0D_AF), (("gym0d", "sr-Latn"), _GYM0D_AF), (("gym0d", "su"), _GYM0D_AF), (("gym0d", "sv"), _GYM0D_SV), (("gym0d", "sw"), _GYM0D_AF), (("gym0d", "syr"), _GYM0D_AF), (("gym0d", "szl"), _GYM0D_AF), (("gym0d", "ta"), _GYM0D_AF), (("gym0d", "te"), _GYM0D_AF), (("gym0d", "tg"), _GYM0D_AF), (("gym0d", "th"), _GYM0D_AF), (("gym0d", "ti"), _GYM0D_AF), (("gym0d", "tk"), _GYM0D_AF), (("gym0d", "to"), _GYM0D_AF), (("gym0d", "tr"), _GYM0D_AF), (("gym0d", "tt"), _GYM0D_AF), (("gym0d", "ug"), _GYM0D_AF), (("gym0d", "uk"), _GYM0D_AF), (("gym0d", "und"), _GYM0D_AF), (("gym0d", "ur"), _GYM0D_AF), (("gym0d", "uz"), _GYM0D_AF), (("gym0d", "uz-Cyrl"), _GYM0D_AF), (("gym0d", "vec"), _GYM0D_AF), (("gym0d", "vi"), _GYM0D_VI), (("gym0d", "vmw"), _GYM0D_AF), (("gym0d", "wo"), _GYM0D_AF), (("gym0d", "xh"), _GYM0D_AF), (("gym0d", "xnr"), _GYM0D_AF), (("gym0d", "yo"), _GYM0D_AF), (("gym0d", "yrl"), _GYM0D_AF), (("gym0d", "yue"), _GYM0D_YUE), (("gym0d", "yue-Hans"), _GYM0D_YUE), (("gym0d", "za"), _GYM0D_AF), (("gym0d", "zh"), _GYM0D_ZH), (("gym0d", "zh-HK"), _GYM0D_ZH_HK), (("gym0d", "zh-Hant"), _GYM0D_ZH_HANT), (("gym0d", "zh-MO"), _GYM0D_ZH_HK), (("gym0d", "zu"), _GYM0D_AF), (("gym0de", "af"), _GYM0DE_AF), (("gym0de", "am"), _GYM0DE_AF), (("gym0de", "ar"), _GYM0DE_AF), (("gym0de", "as"), _GYM0DE_AF), (("gym0de", "ast"), _GYM0DE_AF), (("gym0de", "az"), _GYM0DE_AF), (("gym0de", "be"), _GYM0DE_AF), (("gym0de", "bg"), _GYM0DE_AF), (("gym0de", "bgc"), _GYM0DE_AF), (("gym0de", "bho"), _GYM0DE_AF), (("gym0de", "blo"), _GYM0DE_AF), (("gym0de", "bn"), _GYM0DE_AF), (("gym0de", "br"), _GYM0DE_AF), (("gym0de", "brx"), _GYM0DE_AF), (("gym0de", "bs"), _GYM0DE_AF), (("gym0de", "bs-Cyrl"), _GYM0DE_AF), (("gym0de", "ca"), _GYM0DE_AF), (("gym0de", "ceb"), _GYM0DE_AF), (("gym0de", "chr"), _GYM0DE_AF), (("gym0de", "cs"), _GYM0DE_AF), (("gym0de", "csw"), _GYM0DE_AF), (("gym0de", "cv"), _GYM0DE_AF), (("gym0de", "cy"), _GYM0DE_AF), (("gym0de", "da"), _GYM0DE_AF), (("gym0de", "de"), _GYM0DE_DE), (("gym0de", "doi"), _GYM0DE_AF), (("gym0de", "dsb"), _GYM0DE_AF), (("gym0de", "el"), _GYM0DE_AF), (("gym0de", "en"), _GYM0DE_EN), (("gym0de", "en-001"), _GYM0DE_EN_001), (("gym0de", "en-AE"), _GYM0DE_EN_AE), (("gym0de", "en-CA"), _GYM0DE_EN_CA), (("gym0de", "eo"), _GYM0DE_AF), (("gym0de", "es"), _GYM0DE_ES), (("gym0de", "et"), _GYM0DE_AF), (("gym0de", "eu"), _GYM0DE_AF), (("gym0de", "fa"), _GYM0DE_AF), (("gym0de", "ff-Adlm"), _GYM0DE_FF_ADLM), (("gym0de", "fi"), _GYM0DE_AF), (("gym0de", "fil"), _GYM0DE_AF), (("gym0de", "fo"), _GYM0DE_AF), (("gym0de", "fr"), _GYM0DE_FR), (("gym0de", "fy"), _GYM0DE_FR), (("gym0de", "ga"), _GYM0DE_AF), (("gym0de", "gd"), _GYM0DE_GD), (("gym0de", "gl"), _GYM0DE_AF), (("gym0de", "gu"), _GYM0DE_AF), (("gym0de", "ha"), _GYM0DE_AF), (("gym0de", "he"), _GYM0DE_AF), (("gym0de", "hi"), _GYM0DE_AF), (("gym0de", "hi-Latn"), _GYM0DE_HI_LATN), (("gym0de", "hr"), _GYM0DE_AF), (("gym0de", "hsb"), _GYM0DE_AF), (("gym0de", "hu"), _GYM0DE_AF), (("gym0de", "hy"), _GYM0DE_AF), (("gym0de", "ia"), _GYM0DE_AF), (("gym0de", "id"), _GYM0DE_AF), (("gym0de", "ie"), _GYM0DE_AF), (("gym0de", "ig"), _GYM0DE_AF), (("gym0de", "is"), _GYM0DE_AF), (("gym0de", "it"), _GYM0DE_AF), (("gym0de", "ja"), _GYM0DE_JA), (("gym0de", "jv"), _GYM0DE_AF), (("gym0de", "ka"), _GYM0DE_AF), (("gym0de", "kea"), _GYM0DE_AF), (("gym0de", "kgp"), _GYM0DE_AF), (("gym0de", "kk"), _GYM0DE_AF), (("gym0de", "km"), _GYM0DE_AF), (("gym0de", "kn"), _GYM0DE_AF), (("gym0de", "ko"), _GYM0DE_KO), (("gym0de", "kok"), _GYM0DE_AF), (("gym0de", "ks"), _GYM0DE_AF), (("gym0de", "ks-Deva"), _GYM0DE_AF), (("gym0de", "ku"), _GYM0DE_AF), (("gym0de", "kxv"), _GYM0DE_AF), (("gym0de", "kxv-Deva"), _GYM0DE_AF), (("gym0de", "kxv-Orya"), _GYM0DE_AF), (("gym0de", "kxv-Telu"), _GYM0DE_AF), (("gym0de", "ky"), _GYM0DE_AF), (("gym0de", "lb"), _GYM0DE_AF), (("gym0de", "lij"), _GYM0DE_AF), (("gym0de", "lmo"), _GYM0DE_AF), (("gym0de", "lo"), _GYM0DE_AF), (("gym0de", "lt"), _GYM0DE_LT), (("gym0de", "lv"), _GYM0DE_AF), (("gym0de", "mai"), _GYM0DE_AF), (("gym0de", "mi"), _GYM0DE_AF), (("gym0de", "mk"), _GYM0DE_AF), (("gym0de", "ml"), _GYM0DE_AF), (("gym0de", "mn"), _GYM0DE_AF), (("gym0de", "mni"), _GYM0DE_AF), (("gym0de", "mr"), _GYM0DE_AF), (("gym0de", "ms"), _GYM0DE_AF), (("gym0de", "mt"), _GYM0DE_AF), (("gym0de", "my"), _GYM0DE_AF), (("gym0de", "nds"), _GYM0DE_AF), (("gym0de", "ne"), _GYM0DE_AF), (("gym0de", "nl"), _GYM0DE_NL), (("gym0de", "no"), _GYM0DE_NO), (("gym0de", "nqo"), _GYM0DE_AF), (("gym0de", "oc"), _GYM0DE_AF), (("gym0de", "or"), _GYM0DE_AF), (("gym0de", "pa"), _GYM0DE_AF), (("gym0de", "pcm"), _GYM0DE_AF), (("gym0de", "pl"), _GYM0DE_AF), (("gym0de", "prg"), _GYM0DE_AF), (("gym0de", "ps"), _GYM0DE_AF), (("gym0de", "pt"), _GYM0DE_PT), (("gym0de", "qu"), _GYM0DE_AF), (("gym0de", "raj"), _GYM0DE_AF), (("gym0de", "rm"), _GYM0DE_AF), (("gym0de", "ro"), _GYM0DE_AF), (("gym0de", "ru"), _GYM0DE_RU), (("gym0de", "sa"), _GYM0DE_AF), (("gym0de", "sah"), _GYM0DE_AF), (("gym0de", "sat"), _GYM0DE_AF), (("gym0de", "sc"), _GYM0DE_SC), (("gym0de", "sd"), _GYM0DE_AF), (("gym0de", "sd-Deva"), _GYM0DE_AF), (("gym0de", "si"), _GYM0DE_AF), (("gym0de", "sk"), _GYM0DE_AF), (("gym0de", "sl"), _GYM0DE_AF), (("gym0de", "so"), _GYM0DE_AF), (("gym0de", "sq"), _GYM0DE_AF), (("gym0de", "sr"), _GYM0DE_AF), (("gym0de", "sr-Latn"), _GYM0DE_AF), (("gym0de", "su"), _GYM0DE_AF), (("gym0de", "sv"), _GYM0DE_SV), (("gym0de", "sw"), _GYM0DE_AF), (("gym0de", "syr"), _GYM0DE_AF), (("gym0de", "szl"), _GYM0DE_AF), (("gym0de", "ta"), _GYM0DE_AF), (("gym0de", "te"), _GYM0DE_AF), (("gym0de", "tg"), _GYM0DE_AF), (("gym0de", "th"), _GYM0DE_AF), (("gym0de", "ti"), _GYM0DE_AF), (("gym0de", "tk"), _GYM0DE_AF), (("gym0de", "to"), _GYM0DE_AF), (("gym0de", "tr"), _GYM0DE_AF), (("gym0de", "tt"), _GYM0DE_AF), (("gym0de", "ug"), _GYM0DE_AF), (("gym0de", "uk"), _GYM0DE_AF), (("gym0de", "und"), _GYM0DE_AF), (("gym0de", "ur"), _GYM0DE_AF), (("gym0de", "uz"), _GYM0DE_AF), (("gym0de", "uz-Cyrl"), _GYM0DE_AF), (("gym0de", "vec"), _GYM0DE_AF), (("gym0de", "vi"), _GYM0DE_VI), (("gym0de", "vmw"), _GYM0DE_AF), (("gym0de", "wo"), _GYM0DE_AF), (("gym0de", "xh"), _GYM0DE_AF), (("gym0de", "xnr"), _GYM0DE_AF), (("gym0de", "yo"), _GYM0DE_AF), (("gym0de", "yrl"), _GYM0DE_AF), (("gym0de", "yue"), _GYM0DE_YUE), (("gym0de", "yue-Hans"), _GYM0DE_YUE), (("gym0de", "za"), _GYM0DE_AF), (("gym0de", "zh"), _GYM0DE_ZH), (("gym0de", "zh-HK"), _GYM0DE_ZH_HK), (("gym0de", "zh-Hant"), _GYM0DE_ZH_HANT), (("gym0de", "zh-MO"), _GYM0DE_ZH_HK), (("gym0de", "zu"), _GYM0DE_AF), (("m0", "af"), _M0_AF), (("m0", "am"), _M0_AF), (("m0", "ar"), _M0_AF), (("m0", "as"), _M0_AF), (("m0", "ast"), _M0_AF), (("m0", "az"), _M0_AF), (("m0", "be"), _M0_AF), (("m0", "bg"), _M0_AF), (("m0", "bgc"), _M0_AF), (("m0", "bho"), _M0_AF), (("m0", "blo"), _M0_AF), (("m0", "bn"), _M0_AF), (("m0", "br"), _M0_AF), (("m0", "brx"), _M0_AF), (("m0", "bs"), _M0_AF), (("m0", "bs-Cyrl"), _M0_AF), (("m0", "ca"), _M0_AF), (("m0", "ceb"), _M0_AF), (("m0", "chr"), _M0_AF), (("m0", "cs"), _M0_AF), (("m0", "csw"), _M0_AF), (("m0", "cv"), _M0_AF), (("m0", "cy"), _M0_AF), (("m0", "da"), _M0_AF), (("m0", "de"), _M0_AF), (("m0", "doi"), _M0_AF), (("m0", "dsb"), _M0_AF), (("m0", "el"), _M0_AF), (("m0", "en"), _M0_AF), (("m0", "en-001"), _M0_EN_001), (("m0", "en-AE"), _M0_EN_001), (("m0", "en-CA"), _M0_EN_001), (("m0", "eo"), _M0_AF), (("m0", "es"), _M0_ES), (("m0", "et"), _M0_AF), (("m0", "eu"), _M0_AF), (("m0", "fa"), _M0_AF), (("m0", "ff-Adlm"), _M0_AF), (("m0", "fi"), _M0_AF), (("m0", "fil"), _M0_AF), (("m0", "fo"), _M0_AF), (("m0", "fr"), _M0_AF), (("m0", "fy"), _M0_AF), (("m0", "ga"), _M0_AF), (("m0", "gd"), _M0_AF), (("m0", "gl"), _M0_AF), (("m0", "gu"), _M0_AF), (("m0", "ha"), _M0_AF), (("m0", "he"), _M0_AF), (("m0", "hi"), _M0_AF), (("m0", "hr"), _M0_AF), (("m0", "hsb"), _M0_AF), (("m0", "hu"), _M0_AF), (("m0", "hy"), _M0_AF), (("m0", "ia"), _M0_AF), (("m0", "id"), _M0_AF), (("m0", "ie"), _M0_AF), (("m0", "ig"), _M0_AF), (("m0", "is"), _M0_AF), (("m0", "it"), _M0_AF), (("m0", "ja"), _M0_JA), (("m0", "jv"), _M0_AF), (("m0", "ka"), _M0_AF), (("m0", "kea"), _M0_AF), (("m0", "kgp"), _M0_AF), (("m0", "kk"), _M0_AF), (("m0", "km"), _M0_AF), (("m0", "kn"), _M0_AF), (("m0", "ko"), _M0_JA), (("m0", "kok"), _M0_AF), (("m0", "ks"), _M0_AF), (("m0", "ks-Deva"), _M0_AF), (("m0", "ku"), _M0_AF), (("m0", "kxv"), _M0_AF), (("m0", "kxv-Deva"), _M0_AF), (("m0", "kxv-Orya"), _M0_AF), (("m0", "kxv-Telu"), _M0_AF), (("m0", "ky"), _M0_AF), (("m0", "lb"), _M0_AF), (("m0", "lij"), _M0_AF), (("m0", "lmo"), _M0_AF), (("m0", "lo"), _M0_AF), (("m0", "lt"), _M0_AF), (("m0", "lv"), _M0_AF), (("m0", "mai"), _M0_AF), (("m0", "mi"), _M0_AF), (("m0", "mk"), _M0_AF), (("m0", "ml"), _M0_AF), (("m0", "mn"), _M0_AF), (("m0", "mni"), _M0_AF), (("m0", "mr"), _M0_AF), (("m0", "ms"), _M0_AF), (("m0", "mt"), _M0_AF), (("m0", "my"), _M0_AF), (("m0", "nds"), _M0_AF), (("m0", "ne"), _M0_AF), (("m0", "nl"), _M0_AF), (("m0", "no"), _M0_NO), (("m0", "nqo"), _M0_AF), (("m0", "oc"), _M0_AF), (("m0", "or"), _M0_AF), (("m0", "pa"), _M0_AF), (("m0", "pcm"), _M0_AF), (("m0", "pl"), _M0_AF), (("m0", "prg"), _M0_AF), (("m0", "ps"), _M0_AF), (("m0", "pt"), _M0_AF), (("m0", "qu"), _M0_AF), (("m0", "raj"), _M0_AF), (("m0", "rm"), _M0_AF), (("m0", "ro"), _M0_AF), (("m0", "ru"), _M0_AF), (("m0", "sa"), _M0_AF), (("m0", "sah"), _M0_AF), (("m0", "sat"), _M0_AF), (("m0", "sc"), _M0_AF), (("m0", "sd"), _M0_AF), (("m0", "sd-Deva"), _M0_AF), (("m0", "si"), _M0_AF), (("m0", "sk"), _M0_AF), (("m0", "sl"), _M0_AF), (("m0", "so"), _M0_AF), (("m0", "sq"), _M0_AF), (("m0", "sr"), _M0_AF), (("m0", "sr-Latn"), _M0_AF), (("m0", "su"), _M0_AF), (("m0", "sv"), _M0_AF), (("m0", "sw"), _M0_AF), (("m0", "syr"), _M0_AF), (("m0", "szl"), _M0_AF), (("m0", "ta"), _M0_AF), (("m0", "te"), _M0_AF), (("m0", "tg"), _M0_AF), (("m0", "th"), _M0_AF), (("m0", "ti"), _M0_AF), (("m0", "tk"), _M0_AF), (("m0", "to"), _M0_AF), (("m0", "tr"), _M0_AF), (("m0", "tt"), _M0_AF), (("m0", "ug"), _M0_AF), (("m0", "uk"), _M0_AF), (("m0", "und"), _M0_AF), (("m0", "ur"), _M0_AF), (("m0", "uz"), _M0_AF), (("m0", "uz-Cyrl"), _M0_AF), (("m0", "vec"), _M0_AF), (("m0", "vi"), _M0_AF), (("m0", "vmw"), _M0_AF), (("m0", "wo"), _M0_AF), (("m0", "xh"), _M0_AF), (("m0", "xnr"), _M0_AF), (("m0", "yo"), _M0_AF), (("m0", "yrl"), _M0_AF), (("m0", "yue"), _M0_JA), (("m0", "yue-Hans"), _M0_JA), (("m0", "za"), _M0_AF), (("m0", "zh"), _M0_JA), (("m0", "zh-Hant"), _M0_JA), (("m0", "zu"), _M0_AF), (("m0d", "af"), _M0D_AF), (("m0d", "am"), _M0D_AF), (("m0d", "ar"), _M0D_AF), (("m0d", "as"), _M0D_AF), (("m0d", "ast"), _M0D_AF), (("m0d", "az"), _M0D_AF), (("m0d", "be"), _M0D_AF), (("m0d", "bg"), _M0D_AF), (("m0d", "bgc"), _M0D_AF), (("m0d", "bho"), _M0D_AF), (("m0d", "blo"), _M0D_AF), (("m0d", "bn"), _M0D_AF), (("m0d", "br"), _M0D_AF), (("m0d", "brx"), _M0D_AF), (("m0d", "bs"), _M0D_AF), (("m0d", "bs-Cyrl"), _M0D_AF), (("m0d", "ca"), _M0D_AF), (("m0d", "ceb"), _M0D_AF), (("m0d", "chr"), _M0D_AF), (("m0d", "cs"), _M0D_AF), (("m0d", "csw"), _M0D_AF), (("m0d", "cv"), _M0D_AF), (("m0d", "cy"), _M0D_AF), (("m0d", "da"), _M0D_AF), (("m0d", "de"), _M0D_DE), (("m0d", "doi"), _M0D_AF), (("m0d", "dsb"), _M0D_AF), (("m0d", "el"), _M0D_AF), (("m0d", "en"), _M0D_EN), (("m0d", "en-001"), _M0D_EN_001), (("m0d", "en-AE"), _M0D_EN_001), (("m0d", "en-CA"), _M0D_AF), (("m0d", "eo"), _M0D_AF), (("m0d", "es"), _M0D_ES), (("m0d", "et"), _M0D_AF), (("m0d", "eu"), _M0D_AF), (("m0d", "fa"), _M0D_AF), (("m0d", "ff-Adlm"), _M0D_FF_ADLM), (("m0d", "fi"), _M0D_FI), (("m0d", "fil"), _M0D_AF), (("m0d", "fo"), _M0D_AF), (("m0d", "fr"), _M0D_FR), (("m0d", "fy"), _M0D_FY), (("m0d", "ga"), _M0D_AF), (("m0d", "gd"), _M0D_GD), (("m0d", "gl"), _M0D_AF), (("m0d", "gu"), _M0D_AF), (("m0d", "ha"), _M0D_AF), (("m0d", "he"), _M0D_AF), (("m0d", "hi"), _M0D_AF), (("m0d", "hr"), _M0D_AF), (("m0d", "hsb"), _M0D_AF), (("m0d", "hu"), _M0D_AF), (("m0d", "hy"), _M0D_AF), (("m0d", "ia"), _M0D_AF), (("m0d", "id"), _M0D_AF), (("m0d", "ie"), _M0D_AF), (("m0d", "ig"), _M0D_AF), (("m0d", "is"), _M0D_AF), (("m0d", "it"), _M0D_AF), (("m0d", "ja"), _M0D_JA), (("m0d", "jv"), _M0D_AF), (("m0d", "ka"), _M0D_AF), (("m0d", "kea"), _M0D_AF), (("m0d", "kgp"), _M0D_AF), (("m0d", "kk"), _M0D_AF), (("m0d", "km"), _M0D_AF), (("m0d", "kn"), _M0D_AF), (("m0d", "ko"), _M0D_KO), (("m0d", "kok"), _M0D_AF), (("m0d", "ks"), _M0D_AF), (("m0d", "ks-Deva"), _M0D_AF), (("m0d", "ku"), _M0D_AF), (("m0d", "kxv"), _M0D_AF), (("m0d", "kxv-Deva"), _M0D_AF), (("m0d", "kxv-Orya"), _M0D_AF), (("m0d", "kxv-Telu"), _M0D_AF), (("m0d", "ky"), _M0D_AF), (("m0d", "lb"), _M0D_AF), (("m0d", "lij"), _M0D_AF), (("m0d", "lmo"), _M0D_AF), (("m0d", "lo"), _M0D_AF), (("m0d", "lt"), _M0D_AF), (("m0d", "lv"), _M0D_AF), (("m0d", "mai"), _M0D_AF), (("m0d", "mi"), _M0D_AF), (("m0d", "mk"), _M0D_AF), (("m0d", "ml"), _M0D_AF), (("m0d", "mn"), _M0D_AF), (("m0d", "mni"), _M0D_AF), (("m0d", "mr"), _M0D_AF), (("m0d", "ms"), _M0D_AF), (("m0d", "mt"), _M0D_AF), (("m0d", "my"), _M0D_AF), (("m0d", "nds"), _M0D_AF), (("m0d", "ne"), _M0D_AF), (("m0d", "nl"), _M0D_FY), (("m0d", "no"), _M0D_NO), (("m0d", "nqo"), _M0D_AF), (("m0d", "oc"), _M0D_AF), (("m0d", "or"), _M0D_AF), (("m0d", "pa"), _M0D_AF), (("m0d", "pcm"), _M0D_AF), (("m0d", "pl"), _M0D_AF), (("m0d", "prg"), _M0D_AF), (("m0d", "ps"), _M0D_AF), (("m0d", "pt"), _M0D_PT), (("m0d", "qu"), _M0D_AF), (("m0d", "raj"), _M0D_AF), (("m0d", "rm"), _M0D_AF), (("m0d", "ro"), _M0D_AF), (("m0d", "ru"), _M0D_RU), (("m0d", "sa"), _M0D_AF), (("m0d", "sah"), _M0D_AF), (("m0d", "sat"), _M0D_AF), (("m0d", "sc"), _M0D_FR), (("m0d", "sd"), _M0D_AF), (("m0d", "sd-Deva"), _M0D_AF), (("m0d", "si"), _M0D_AF), (("m0d", "sk"), _M0D_AF), (("m0d", "sl"), _M0D_AF), (("m0d", "so"), _M0D_AF), (("m0d", "sq"), _M0D_AF), (("m0d", "sr"), _M0D_AF), (("m0d", "sr-Latn"), _M0D_AF), (("m0d", "su"), _M0D_AF), (("m0d", "sv"), _M0D_FR), (("m0d", "sw"), _M0D_AF), (("m0d", "syr"), _M0D_AF), (("m0d", "szl"), _M0D_AF), (("m0d", "ta"), _M0D_AF), (("m0d", "te"), _M0D_AF), (("m0d", "tg"), _M0D_AF), (("m0d", "th"), _M0D_AF), (("m0d", "ti"), _M0D_AF), (("m0d", "tk"), _M0D_AF), (("m0d", "to"), _M0D_AF), (("m0d", "tr"), _M0D_AF), (("m0d", "tt"), _M0D_AF), (("m0d", "ug"), _M0D_AF), (("m0d", "uk"), _M0D_AF), (("m0d", "und"), _M0D_AF), (("m0d", "ur"), _M0D_AF), (("m0d", "uz"), _M0D_AF), (("m0d", "uz-Cyrl"), _M0D_AF), (("m0d", "vec"), _M0D_AF), (("m0d", "vi"), _M0D_VI), (("m0d", "vmw"), _M0D_AF), (("m0d", "wo"), _M0D_AF), (("m0d", "xh"), _M0D_AF), (("m0d", "xnr"), _M0D_AF), (("m0d", "yo"), _M0D_AF), (("m0d", "yrl"), _M0D_AF), (("m0d", "yue"), _M0D_JA), (("m0d", "yue-Hans"), _M0D_YUE_HANS), (("m0d", "za"), _M0D_AF), (("m0d", "zh"), _M0D_YUE_HANS), (("m0d", "zh-Hant"), _M0D_JA), (("m0d", "zu"), _M0D_AF), (("m0de", "af"), _M0DE_AF), (("m0de", "am"), _M0DE_AF), (("m0de", "ar"), _M0DE_AF), (("m0de", "as"), _M0DE_AF), (("m0de", "ast"), _M0DE_AF), (("m0de", "az"), _M0DE_AF), (("m0de", "be"), _M0DE_AF), (("m0de", "bg"), _M0DE_AF), (("m0de", "bgc"), _M0DE_AF), (("m0de", "bho"), _M0DE_AF), (("m0de", "blo"), _M0DE_AF), (("m0de", "bn"), _M0DE_AF), (("m0de", "br"), _M0DE_AF), (("m0de", "brx"), _M0DE_AF), (("m0de", "bs"), _M0DE_AF), (("m0de", "bs-Cyrl"), _M0DE_AF), (("m0de", "ca"), _M0DE_AF), (("m0de", "ceb"), _M0DE_AF), (("m0de", "chr"), _M0DE_AF), (("m0de", "cs"), _M0DE_AF), (("m0de", "csw"), _M0DE_AF), (("m0de", "cv"), _M0DE_AF), (("m0de", "cy"), _M0DE_AF), (("m0de", "da"), _M0DE_AF), (("m0de", "de"), _M0DE_DE), (("m0de", "doi"), _M0DE_AF), (("m0de", "dsb"), _M0DE_AF), (("m0de", "el"), _M0DE_AF), (("m0de", "en"), _M0DE_EN), (("m0de", "en-001"), _M0DE_EN_001), (("m0de", "en-AE"), _M0DE_EN_001), (("m0de", "en-CA"), _M0DE_EN_CA), (("m0de", "en-CH"), _M0DE_EN_CH), (("m0de", "eo"), _M0DE_AF), (("m0de", "es"), _M0DE_ES), (("m0de", "et"), _M0DE_AF), (("m0de", "eu"), _M0DE_AF), (("m0de", "fa"), _M0DE_AF), (("m0de", "ff-Adlm"), _M0DE_FF_ADLM), (("m0de", "fi"), _M0DE_FI), (("m0de", "fil"), _M0DE_AF), (("m0de", "fo"), _M0DE_AF), (("m0de", "fr"), _M0DE_FR), (("m0de", "fy"), _M0DE_FY), (("m0de", "ga"), _M0DE_AF), (("m0de", "gd"), _M0DE_GD), (("m0de", "gl"), _M0DE_AF), (("m0de", "gu"), _M0DE_AF), (("m0de", "ha"), _M0DE_AF), (("m0de", "he"), _M0DE_AF), (("m0de", "hi"), _M0DE_AF), (("m0de", "hr"), _M0DE_AF), (("m0de", "hsb"), _M0DE_AF), (("m0de", "hu"), _M0DE_AF), (("m0de", "hy"), _M0DE_AF), (("m0de", "ia"), _M0DE_AF), (("m0de", "id"), _M0DE_AF), (("m0de", "ie"), _M0DE_AF), (("m0de", "ig"), _M0DE_AF), (("m0de", "is"), _M0DE_AF), (("m0de", "it"), _M0DE_AF), (("m0de", "ja"), _M0DE_JA), (("m0de", "jv"), _M0DE_AF), (("m0de", "ka"), _M0DE_AF), (("m0de", "kea"), _M0DE_AF), (("m0de", "kgp"), _M0DE_AF), (("m0de", "kk"), _M0DE_AF), (("m0de", "km"), _M0DE_AF), (("m0de", "kn"), _M0DE_AF), (("m0de", "ko"), _M0DE_KO), (("m0de", "kok"), _M0DE_AF), (("m0de", "ks"), _M0DE_AF), (("m0de", "ks-Deva"), _M0DE_AF), (("m0de", "ku"), _M0DE_AF), (("m0de", "kxv"), _M0DE_AF), (("m0de", "kxv-Deva"), _M0DE_AF), (("m0de", "kxv-Orya"), _M0DE_AF), (("m0de", "kxv-Telu"), _M0DE_AF), (("m0de", "ky"), _M0DE_AF), (("m0de", "lb"), _M0DE_AF), (("m0de", "lij"), _M0DE_AF), (("m0de", "lmo"), _M0DE_AF), (("m0de", "lo"), _M0DE_AF), (("m0de", "lt"), _M0DE_AF), (("m0de", "lv"), _M0DE_AF), (("m0de", "mai"), _M0DE_AF), (("m0de", "mi"), _M0DE_AF), (("m0de", "mk"), _M0DE_AF), (("m0de", "ml"), _M0DE_AF), (("m0de", "mn"), _M0DE_AF), (("m0de", "mni"), _M0DE_AF), (("m0de", "mr"), _M0DE_AF), (("m0de", "ms"), _M0DE_AF), (("m0de", "mt"), _M0DE_AF), (("m0de", "my"), _M0DE_AF), (("m0de", "nds"), _M0DE_AF), (("m0de", "ne"), _M0DE_AF), (("m0de", "nl"), _M0DE_FY), (("m0de", "no"), _M0DE_NO), (("m0de", "nqo"), _M0DE_AF), (("m0de", "oc"), _M0DE_AF), (("m0de", "or"), _M0DE_AF), (("m0de", "pa"), _M0DE_AF), (("m0de", "pcm"), _M0DE_AF), (("m0de", "pl"), _M0DE_AF), (("m0de", "prg"), _M0DE_AF), (("m0de", "ps"), _M0DE_AF), (("m0de", "pt"), _M0DE_PT), (("m0de", "qu"), _M0DE_AF), (("m0de", "raj"), _M0DE_AF), (("m0de", "rm"), _M0DE_AF), (("m0de", "ro"), _M0DE_AF), (("m0de", "ru"), _M0DE_RU), (("m0de", "sa"), _M0DE_AF), (("m0de", "sah"), _M0DE_AF), (("m0de", "sat"), _M0DE_AF), (("m0de", "sc"), _M0DE_FR), (("m0de", "sd"), _M0DE_AF), (("m0de", "sd-Deva"), _M0DE_AF), (("m0de", "si"), _M0DE_AF), (("m0de", "sk"), _M0DE_AF), (("m0de", "sl"), _M0DE_AF), (("m0de", "so"), _M0DE_AF), (("m0de", "sq"), _M0DE_AF), (("m0de", "sr"), _M0DE_AF), (("m0de", "sr-Latn"), _M0DE_AF), (("m0de", "su"), _M0DE_AF), (("m0de", "sv"), _M0DE_FR), (("m0de", "sw"), _M0DE_AF), (("m0de", "syr"), _M0DE_AF), (("m0de", "szl"), _M0DE_AF), (("m0de", "ta"), _M0DE_AF), (("m0de", "te"), _M0DE_AF), (("m0de", "tg"), _M0DE_AF), (("m0de", "th"), _M0DE_AF), (("m0de", "ti"), _M0DE_AF), (("m0de", "tk"), _M0DE_AF), (("m0de", "to"), _M0DE_AF), (("m0de", "tr"), _M0DE_AF), (("m0de", "tt"), _M0DE_AF), (("m0de", "ug"), _M0DE_AF), (("m0de", "uk"), _M0DE_AF), (("m0de", "und"), _M0DE_AF), (("m0de", "ur"), _M0DE_AF), (("m0de", "uz"), _M0DE_AF), (("m0de", "uz-Cyrl"), _M0DE_AF), (("m0de", "vec"), _M0DE_AF), (("m0de", "vi"), _M0DE_VI), (("m0de", "vmw"), _M0DE_AF), (("m0de", "wo"), _M0DE_AF), (("m0de", "xh"), _M0DE_AF), (("m0de", "xnr"), _M0DE_AF), (("m0de", "yo"), _M0DE_AF), (("m0de", "yrl"), _M0DE_AF), (("m0de", "yue"), _M0DE_YUE), (("m0de", "yue-Hans"), _M0DE_YUE_HANS), (("m0de", "za"), _M0DE_AF), (("m0de", "zh"), _M0DE_YUE_HANS), (("m0de", "zh-Hant"), _M0DE_YUE), (("m0de", "zu"), _M0DE_AF), (("y", "af"), _GY_BS), (("y", "am"), _GY_BS), (("y", "ar"), _GY_BS), (("y", "as"), _GY_BS), (("y", "ast"), _GY_BS), (("y", "az"), _GY_BS), (("y", "be"), _GY_BS), (("y", "bg"), _GY_BS), (("y", "bgc"), _GY_BS), (("y", "bho"), _GY_BS), (("y", "blo"), _GY_BS), (("y", "bn"), _GY_BS), (("y", "br"), _GY_BS), (("y", "brx"), _GY_BS), (("y", "bs"), _GY_BS), (("y", "bs-Cyrl"), _GY_BS), (("y", "ca"), _GY_BS), (("y", "ceb"), _GY_BS), (("y", "chr"), _GY_BS), (("y", "cs"), _GY_BS), (("y", "csw"), _GY_BS), (("y", "cv"), _GY_BS), (("y", "cy"), _GY_BS), (("y", "da"), _GY_BS), (("y", "de"), _GY_DE), (("y", "doi"), _GY_BS), (("y", "dsb"), _GY_BS), (("y", "el"), _GY_BS), (("y", "en"), _GY_BS), (("y", "eo"), _GY_BS), (("y", "es"), _GY_ES), (("y", "et"), _GY_BS), (("y", "eu"), _GY_BS), (("y", "fa"), _GY_BS), (("y", "ff-Adlm"), _GY_BS), (("y", "fi"), _Y_FI), (("y", "fil"), _GY_BS), (("y", "fo"), _GY_BS), (("y", "fr"), _GY_DE), (("y", "fy"), _GY_DE), (("y", "ga"), _GY_BS), (("y", "gd"), _GY_BS), (("y", "gl"), _GY_BS), (("y", "gu"), _GY_BS), (("y", "ha"), _GY_BS), (("y", "he"), _GY_BS), (("y", "hi"), _GY_BS), (("y", "hr"), _GY_BS), (("y", "hsb"), _GY_BS), (("y", "hu"), _GY_BS), (("y", "hy"), _GY_BS), (("y", "ia"), _GY_BS), (("y", "id"), _GY_BS), (("y", "ie"), _GY_BS), (("y", "ig"), _GY_BS), (("y", "is"), _GY_BS), (("y", "it"), _GY_BS), (("y", "ja"), _GY_JA), (("y", "jv"), _GY_BS), (("y", "ka"), _GY_BS), (("y", "kea"), _GY_BS), (("y", "kgp"), _GY_BS), (("y", "kk"), _GY_BS), (("y", "km"), _GY_BS), (("y", "kn"), _GY_BS), (("y", "ko"), _GY_KO), (("y", "kok"), _GY_BS), (("y", "ks"), _GY_BS), (("y", "ks-Deva"), _GY_BS), (("y", "ku"), _GY_BS), (("y", "kxv"), _GY_BS), (("y", "kxv-Deva"), _GY_BS), (("y", "kxv-Orya"), _GY_BS), (("y", "kxv-Telu"), _GY_BS), (("y", "ky"), _GY_BS), (("y", "lb"), _GY_BS), (("y", "lij"), _GY_BS), (("y", "lmo"), _GY_BS), (("y", "lo"), _GY_BS), (("y", "lt"), _GY_DE), (("y", "lv"), _GY_BS), (("y", "mai"), _GY_BS), (("y", "mi"), _GY_BS), (("y", "mk"), _GY_BS), (("y", "ml"), _GY_BS), (("y", "mn"), _GY_BS), (("y", "mni"), _GY_BS), (("y", "mr"), _GY_BS), (("y", "ms"), _GY_BS), (("y", "mt"), _GY_BS), (("y", "my"), _GY_BS), (("y", "nds"), _GY_BS), (("y", "ne"), _GY_BS), (("y", "nl"), _GY_DE), (("y", "no"), _GY_BS), (("y", "nqo"), _GY_BS), (("y", "oc"), _GY_BS), (("y", "or"), _GY_BS), (("y", "pa"), _GY_BS), (("y", "pcm"), _GY_BS), (("y", "pl"), _GY_BS), (("y", "prg"), _GY_BS), (("y", "ps"), _GY_BS), (("y", "pt"), _GY_BS), (("y", "qu"), _GY_BS), (("y", "raj"), _GY_BS), (("y", "rm"), _GY_BS), (("y", "ro"), _GY_BS), (("y", "ru"), _GY_DE), (("y", "sa"), _GY_BS), (("y", "sah"), _GY_BS), (("y", "sat"), _GY_BS), (("y", "sc"), _GY_BR), (("y", "sd"), _GY_BS), (("y", "sd-Deva"), _GY_BS), (("y", "si"), _GY_BS), (("y", "sk"), _GY_BS), (("y", "sl"), _GY_BS), (("y", "so"), _GY_BS), (("y", "sq"), _GY_BS), (("y", "sr"), _GY_BS), (("y", "sr-Latn"), _GY_BS), (("y", "su"), _GY_BS), (("y", "sv"), _GY_BS), (("y", "sw"), _GY_BS), (("y", "syr"), _GY_BS), (("y", "szl"), _GY_BS), (("y", "ta"), _GY_BS), (("y", "te"), _GY_BS), (("y", "tg"), _GY_BS), (("y", "th"), _GY_BS), (("y", "ti"), _GY_BS), (("y", "tk"), _GY_BS), (("y", "to"), _GY_BS), (("y", "tr"), _GY_BS), (("y", "tt"), _GY_BS), (("y", "ug"), _GY_BS), (("y", "uk"), _GY_BS), (("y", "und"), _GY_BS), (("y", "ur"), _GY_BS), (("y", "uz"), _GY_BS), (("y", "uz-Cyrl"), _GY_BS), (("y", "vec"), _GY_BS), (("y", "vi"), _GY_VI), (("y", "vmw"), _GY_BS), (("y", "wo"), _GY_BS), (("y", "xh"), _GY_BS), (("y", "xnr"), _GY_BS), (("y", "yo"), _GY_BS), (("y", "yrl"), _GY_BS), (("y", "yue"), _GY_YUE), (("y", "yue-Hans"), _GY_YUE), (("y", "za"), _GY_BS), (("y", "zh"), _GY_YUE), (("y", "zh-Hant"), _GY_YUE), (("y", "zu"), _GY_BS), (("y0w", "af"), _Y0W_AF), (("y0w", "am"), _Y0W_AF), (("y0w", "ar"), _Y0W_AF), (("y0w", "as"), _Y0W_AF), (("y0w", "ast"), _Y0W_AF), (("y0w", "az"), _Y0W_AF), (("y0w", "be"), _Y0W_AF), (("y0w", "bg"), _Y0W_AF), (("y0w", "bgc"), _Y0W_AF), (("y0w", "bho"), _Y0W_AF), (("y0w", "blo"), _Y0W_AF), (("y0w", "bn"), _Y0W_AF), (("y0w", "br"), _Y0W_AF), (("y0w", "brx"), _Y0W_AF), (("y0w", "bs"), _Y0W_AF), (("y0w", "bs-Cyrl"), _Y0W_AF), (("y0w", "ca"), _Y0W_AF), (("y0w", "ceb"), _Y0W_AF), (("y0w", "chr"), _Y0W_AF), (("y0w", "cs"), _Y0W_AF), (("y0w", "csw"), _Y0W_AF), (("y0w", "cv"), _Y0W_AF), (("y0w", "cy"), _Y0W_AF), (("y0w", "da"), _Y0W_AF), (("y0w", "de"), _Y0W_AF), (("y0w", "doi"), _Y0W_AF), (("y0w", "dsb"), _Y0W_AF), (("y0w", "el"), _Y0W_AF), (("y0w", "en"), _Y0W_AF), (("y0w", "eo"), _Y0W_AF), (("y0w", "es"), _Y0W_AF), (("y0w", "et"), _Y0W_AF), (("y0w", "eu"), _Y0W_AF), (("y0w", "fa"), _Y0W_AF), (("y0w", "ff-Adlm"), _Y0W_AF), (("y0w", "fi"), _Y0W_AF), (("y0w", "fil"), _Y0W_AF), (("y0w", "fo"), _Y0W_AF), (("y0w", "fr"), _Y0W_AF), (("y0w", "fy"), _Y0W_AF), (("y0w", "ga"), _Y0W_AF), (("y0w", "gd"), _Y0W_AF), (("y0w", "gl"), _Y0W_AF), (("y0w", "gu"), _Y0W_AF), (("y0w", "ha"), _Y0W_AF), (("y0w", "he"), _Y0W_AF), (("y0w", "hi"), _Y0W_AF), (("y0w", "hr"), _Y0W_AF), (("y0w", "hsb"), _Y0W_AF), (("y0w", "hu"), _Y0W_AF), (("y0w", "hy"), _Y0W_AF), (("y0w", "ia"), _Y0W_AF), (("y0w", "id"), _Y0W_AF), (("y0w", "ie"), _Y0W_AF), (("y0w", "ig"), _Y0W_AF), (("y0w", "is"), _Y0W_AF), (("y0w", "it"), _Y0W_AF), (("y0w", "ja"), _Y0W_AF), (("y0w", "jv"), _Y0W_AF), (("y0w", "ka"), _Y0W_AF), (("y0w", "kea"), _Y0W_AF), (("y0w", "kgp"), _Y0W_AF), (("y0w", "kk"), _Y0W_AF), (("y0w", "km"), _Y0W_AF), (("y0w", "kn"), _Y0W_AF), (("y0w", "ko"), _Y0W_AF), (("y0w", "kok"), _Y0W_AF), (("y0w", "ks"), _Y0W_AF), (("y0w", "ks-Deva"), _Y0W_AF), (("y0w", "ku"), _Y0W_AF), (("y0w", "kxv"), _Y0W_AF), (("y0w", "kxv-Deva"), _Y0W_AF), (("y0w", "kxv-Orya"), _Y0W_AF), (("y0w", "kxv-Telu"), _Y0W_AF), (("y0w", "ky"), _Y0W_AF), (("y0w", "lb"), _Y0W_AF), (("y0w", "lij"), _Y0W_AF), (("y0w", "lmo"), _Y0W_AF), (("y0w", "lo"), _Y0W_AF), (("y0w", "lt"), _Y0W_AF), (("y0w", "lv"), _Y0W_AF), (("y0w", "mai"), _Y0W_AF), (("y0w", "mi"), _Y0W_AF), (("y0w", "mk"), _Y0W_AF), (("y0w", "ml"), _Y0W_AF), (("y0w", "mn"), _Y0W_AF), (("y0w", "mni"), _Y0W_AF), (("y0w", "mr"), _Y0W_AF), (("y0w", "ms"), _Y0W_AF), (("y0w", "mt"), _Y0W_AF), (("y0w", "my"), _Y0W_AF), (("y0w", "nds"), _Y0W_AF), (("y0w", "ne"), _Y0W_AF), (("y0w", "nl"), _Y0W_AF), (("y0w", "no"), _Y0W_AF), (("y0w", "nqo"), _Y0W_AF), (("y0w", "oc"), _Y0W_AF), (("y0w", "or"), _Y0W_AF), (("y0w", "pa"), _Y0W_AF), (("y0w", "pcm"), _Y0W_AF), (("y0w", "pl"), _Y0W_AF), (("y0w", "prg"), _Y0W_AF), (("y0w", "ps"), _Y0W_AF), (("y0w", "pt"), _Y0W_AF), (("y0w", "qu"), _Y0W_AF), (("y0w", "raj"), _Y0W_AF), (("y0w", "rm"), _Y0W_AF), (("y0w", "ro"), _Y0W_AF), (("y0w", "ru"), _Y0W_AF), (("y0w", "sa"), _Y0W_AF), (("y0w", "sah"), _Y0W_AF), (("y0w", "sat"), _Y0W_AF), (("y0w", "sc"), _Y0W_AF), (("y0w", "sd"), _Y0W_AF), (("y0w", "sd-Deva"), _Y0W_AF), (("y0w", "si"), _Y0W_AF), (("y0w", "sk"), _Y0W_AF), (("y0w", "sl"), _Y0W_AF), (("y0w", "so"), _Y0W_AF), (("y0w", "sq"), _Y0W_AF), (("y0w", "sr"), _Y0W_AF), (("y0w", "sr-Latn"), _Y0W_AF), (("y0w", "su"), _Y0W_AF), (("y0w", "sv"), _Y0W_AF), (("y0w", "sw"), _Y0W_AF), (("y0w", "syr"), _Y0W_AF), (("y0w", "szl"), _Y0W_AF), (("y0w", "ta"), _Y0W_AF), (("y0w", "te"), _Y0W_AF), (("y0w", "tg"), _Y0W_AF), (("y0w", "th"), _Y0W_AF), (("y0w", "ti"), _Y0W_AF), (("y0w", "tk"), _Y0W_AF), (("y0w", "to"), _Y0W_AF), (("y0w", "tr"), _Y0W_AF), (("y0w", "tt"), _Y0W_AF), (("y0w", "ug"), _Y0W_AF), (("y0w", "uk"), _Y0W_AF), (("y0w", "und"), _Y0W_AF), (("y0w", "ur"), _Y0W_AF), (("y0w", "uz"), _Y0W_AF), (("y0w", "uz-Cyrl"), _Y0W_AF), (("y0w", "vec"), _Y0W_AF), (("y0w", "vi"), _Y0W_AF), (("y0w", "vmw"), _Y0W_AF), (("y0w", "wo"), _Y0W_AF), (("y0w", "xh"), _Y0W_AF), (("y0w", "xnr"), _Y0W_AF), (("y0w", "yo"), _Y0W_AF), (("y0w", "yrl"), _Y0W_AF), (("y0w", "yue"), _Y0W_AF), (("y0w", "yue-Hans"), _Y0W_AF), (("y0w", "za"), _Y0W_AF), (("y0w", "zh"), _Y0W_AF), (("y0w", "zh-Hant"), _Y0W_AF), (("y0w", "zu"), _Y0W_AF), (("ym0", "af"), _YM0_AF), (("ym0", "am"), _YM0_AF), (("ym0", "ar"), _YM0_AF), (("ym0", "as"), _YM0_AF), (("ym0", "ast"), _YM0_AF), (("ym0", "az"), _YM0_AF), (("ym0", "be"), _YM0_AF), (("ym0", "bg"), _YM0_AF), (("ym0", "bgc"), _YM0_AF), (("ym0", "bho"), _YM0_AF), (("ym0", "blo"), _YM0_AF), (("ym0", "bn"), _YM0_AF), (("ym0", "br"), _YM0_AF), (("ym0", "brx"), _YM0_AF), (("ym0", "bs"), _YM0_AF), (("ym0", "bs-Cyrl"), _YM0_AF), (("ym0", "ca"), _YM0_AF), (("ym0", "ceb"), _YM0_AF), (("ym0", "chr"), _YM0_AF), (("ym0", "cs"), _YM0_AF), (("ym0", "csw"), _YM0_AF), (("ym0", "cv"), _YM0_AF), (("ym0", "cy"), _YM0_AF), (("ym0", "da"), _YM0_AF), (("ym0", "de"), _YM0_DE), (("ym0", "doi"), _YM0_AF), (("ym0", "dsb"), _YM0_AF), (("ym0", "el"), _YM0_AF), (("ym0", "en"), _YM0_EN), (("ym0", "en-CA"), _YM0_EN_CA), (("ym0", "en-CH"), _YM0_EN_CH), (("ym0", "eo"), _YM0_AF), (("ym0", "es"), _YM0_ES), (("ym0", "et"), _YM0_AF), (("ym0", "eu"), _YM0_AF), (("ym0", "fa"), _YM0_AF), (("ym0", "ff-Adlm"), _YM0_FF_ADLM), (("ym0", "fi"), _YM0_AF), (("ym0", "fil"), _YM0_AF), (("ym0", "fo"), _YM0_AF), (("ym0", "fr"), _YM0_FR), (("ym0", "fy"), _YM0_FY), (("ym0", "ga"), _YM0_AF), (("ym0", "gd"), _YM0_GD), (("ym0", "gl"), _YM0_AF), (("ym0", "gu"), _YM0_AF), (("ym0", "ha"), _YM0_AF), (("ym0", "he"), _YM0_AF), (("ym0", "hi"), _YM0_AF), (("ym0", "hi-Latn"), _YM0_HI_LATN), (("ym0", "hr"), _YM0_AF), (("ym0", "hsb"), _YM0_AF), (("ym0", "hu"), _YM0_AF), (("ym0", "hy"), _YM0_AF), (("ym0", "ia"), _YM0_AF), (("ym0", "id"), _YM0_AF), (("ym0", "ie"), _YM0_AF), (("ym0", "ig"), _YM0_AF), (("ym0", "is"), _YM0_AF), (("ym0", "it"), _YM0_AF), (("ym0", "ja"), _YM0_JA), (("ym0", "jv"), _YM0_AF), (("ym0", "ka"), _YM0_AF), (("ym0", "kea"), _YM0_AF), (("ym0", "kgp"), _YM0_AF), (("ym0", "kk"), _YM0_AF), (("ym0", "km"), _YM0_AF), (("ym0", "kn"), _YM0_AF), (("ym0", "ko"), _YM0_KO), (("ym0", "kok"), _YM0_AF), (("ym0", "ks"), _YM0_AF), (("ym0", "ks-Deva"), _YM0_AF), (("ym0", "ku"), _YM0_AF), (("ym0", "kxv"), _YM0_AF), (("ym0", "kxv-Deva"), _YM0_AF), (("ym0", "kxv-Orya"), _YM0_AF), (("ym0", "kxv-Telu"), _YM0_AF), (("ym0", "ky"), _YM0_AF), (("ym0", "lb"), _YM0_AF), (("ym0", "lij"), _YM0_AF), (("ym0", "lmo"), _YM0_AF), (("ym0", "lo"), _YM0_AF), (("ym0", "lt"), _YM0_LT), (("ym0", "lv"), _YM0_AF), (("ym0", "mai"), _YM0_AF), (("ym0", "mi"), _YM0_AF), (("ym0", "mk"), _YM0_AF), (("ym0", "ml"), _YM0_AF), (("ym0", "mn"), _YM0_AF), (("ym0", "mni"), _YM0_AF), (("ym0", "mr"), _YM0_AF), (("ym0", "ms"), _YM0_AF), (("ym0", "mt"), _YM0_AF), (("ym0", "my"), _YM0_AF), (("ym0", "nds"), _YM0_AF), (("ym0", "ne"), _YM0_AF), (("ym0", "nl"), _YM0_FY), (("ym0", "no"), _YM0_NO), (("ym0", "nqo"), _YM0_AF), (("ym0", "oc"), _YM0_AF), (("ym0", "or"), _YM0_AF), (("ym0", "pa"), _YM0_AF), (("ym0", "pcm"), _YM0_AF), (("ym0", "pl"), _YM0_AF), (("ym0", "prg"), _YM0_AF), (("ym0", "ps"), _YM0_AF), (("ym0", "pt"), _YM0_PT), (("ym0", "qu"), _YM0_AF), (("ym0", "raj"), _YM0_AF), (("ym0", "rm"), _YM0_AF), (("ym0", "ro"), _YM0_AF), (("ym0", "ru"), _YM0_RU), (("ym0", "sa"), _YM0_AF), (("ym0", "sah"), _YM0_AF), (("ym0", "sat"), _YM0_AF), (("ym0", "sc"), _YM0_SC), (("ym0", "sd"), _YM0_AF), (("ym0", "sd-Deva"), _YM0_AF), (("ym0", "si"), _YM0_AF), (("ym0", "sk"), _YM0_AF), (("ym0", "sl"), _YM0_AF), (("ym0", "so"), _YM0_AF), (("ym0", "sq"), _YM0_AF), (("ym0", "sr"), _YM0_AF), (("ym0", "sr-Latn"), _YM0_AF), (("ym0", "su"), _YM0_AF), (("ym0", "sv"), _YM0_SV), (("ym0", "sw"), _YM0_AF), (("ym0", "syr"), _YM0_AF), (("ym0", "szl"), _YM0_AF), (("ym0", "ta"), _YM0_AF), (("ym0", "te"), _YM0_AF), (("ym0", "tg"), _YM0_AF), (("ym0", "th"), _YM0_AF), (("ym0", "ti"), _YM0_AF), (("ym0", "tk"), _YM0_AF), (("ym0", "to"), _YM0_AF), (("ym0", "tr"), _YM0_AF), (("ym0", "tt"), _YM0_AF), (("ym0", "ug"), _YM0_AF), (("ym0", "uk"), _YM0_AF), (("ym0", "und"), _YM0_AF), (("ym0", "ur"), _YM0_AF), (("ym0", "uz"), _YM0_AF), (("ym0", "uz-Cyrl"), _YM0_AF), (("ym0", "vec"), _YM0_AF), (("ym0", "vi"), _YM0_VI), (("ym0", "vmw"), _YM0_AF), (("ym0", "wo"), _YM0_AF), (("ym0", "xh"), _YM0_AF), (("ym0", "xnr"), _YM0_AF), (("ym0", "yo"), _YM0_AF), (("ym0", "yrl"), _YM0_AF), (("ym0", "yue"), _GYM0_ZH), (("ym0", "yue-Hans"), _GYM0_ZH), (("ym0", "za"), _YM0_AF), (("ym0", "zh"), _GYM0_ZH), (("ym0", "zh-Hant"), _GYM0_ZH), (("ym0", "zu"), _YM0_AF), (("ym0d", "af"), _A1_AF), (("ym0d", "am"), _A1_AF), (("ym0d", "ar"), _A1_AF), (("ym0d", "as"), _A1_AF), (("ym0d", "ast"), _A1_AF), (("ym0d", "az"), _A1_AF), (("ym0d", "be"), _A1_AF), (("ym0d", "bg"), _A1_AF), (("ym0d", "bgc"), _A1_AF), (("ym0d", "bho"), _A1_AF), (("ym0d", "blo"), _A1_AF), (("ym0d", "bn"), _A1_AF), (("ym0d", "br"), _A1_AF), (("ym0d", "brx"), _A1_AF), (("ym0d", "bs"), _A1_AF), (("ym0d", "bs-Cyrl"), _A1_AF), (("ym0d", "ca"), _A1_AF), (("ym0d", "ceb"), _A1_AF), (("ym0d", "chr"), _A1_AF), (("ym0d", "cs"), _A1_AF), (("ym0d", "csw"), _A1_AF), (("ym0d", "cv"), _A1_AF), (("ym0d", "cy"), _A1_AF), (("ym0d", "da"), _A1_AF), (("ym0d", "de"), _YM0D_DE), (("ym0d", "doi"), _A1_AF), (("ym0d", "dsb"), _A1_AF), (("ym0d", "el"), _A1_AF), (("ym0d", "en"), _YM0D_EN), (("ym0d", "en-001"), _A1_SV), (("ym0d", "en-AE"), _YM0D_EN_AE), (("ym0d", "en-CA"), _YM0D_EN_CA), (("ym0d", "eo"), _A1_AF), (("ym0d", "es"), _YM0D_ES), (("ym0d", "et"), _A1_AF), (("ym0d", "eu"), _A1_AF), (("ym0d", "fa"), _A1_AF), (("ym0d", "ff-Adlm"), _YM0D_FF_ADLM), (("ym0d", "fi"), _YM0D_FI), (("ym0d", "fil"), _A1_AF), (("ym0d", "fo"), _A1_AF), (("ym0d", "fr"), _YM0D_FR), (("ym0d", "fy"), _YM0D_FY), (("ym0d", "ga"), _A1_AF), (("ym0d", "gd"), _YM0D_GD), (("ym0d", "gl"), _A1_AF), (("ym0d", "gu"), _A1_AF), (("ym0d", "ha"), _A1_AF), (("ym0d", "he"), _A1_AF), (("ym0d", "hi"), _A1_AF), (("ym0d", "hi-Latn"), _A1_EN_001), (("ym0d", "hr"), _A1_AF), (("ym0d", "hsb"), _A1_AF), (("ym0d", "hu"), _A1_AF), (("ym0d", "hy"), _A1_AF), (("ym0d", "ia"), _A1_AF), (("ym0d", "id"), _A1_AF), (("ym0d", "ie"), _A1_AF), (("ym0d", "ig"), _A1_AF), (("ym0d", "is"), _A1_AF), (("ym0d", "it"), _A1_AF), (("ym0d", "ja"), _GYM0D_JA), (("ym0d", "jv"), _A1_AF), (("ym0d", "ka"), _A1_AF), (("ym0d", "kea"), _A1_AF), (("ym0d", "kgp"), _A1_AF), (("ym0d", "kk"), _A1_AF), (("ym0d", "km"), _A1_AF), (("ym0d", "kn"), _A1_AF), (("ym0d", "ko"), _YM0D_KO), (("ym0d", "kok"), _A1_AF), (("ym0d", "ks"), _A1_AF), (("ym0d", "ks-Deva"), _A1_AF), (("ym0d", "ku"), _A1_AF), (("ym0d", "kxv"), _A1_AF), (("ym0d", "kxv-Deva"), _A1_AF), (("ym0d", "kxv-Orya"), _A1_AF), (("ym0d", "kxv-Telu"), _A1_AF), (("ym0d", "ky"), _A1_AF), (("ym0d", "lb"), _A1_AF), (("ym0d", "lij"), _A1_AF), (("ym0d", "lmo"), _A1_AF), (("ym0d", "lo"), _A1_AF), (("ym0d", "lt"), _YM0D_LT), (("ym0d", "lv"), _A1_AF), (("ym0d", "mai"), _A1_AF), (("ym0d", "mi"), _A1_AF), (("ym0d", "mk"), _A1_AF), (("ym0d", "ml"), _A1_AF), (("ym0d", "mn"), _A1_AF), (("ym0d", "mni"), _A1_AF), (("ym0d", "mr"), _A1_AF), (("ym0d", "ms"), _A1_AF), (("ym0d", "mt"), _A1_AF), (("ym0d", "my"), _A1_AF), (("ym0d", "nds"), _A1_AF), (("ym0d", "ne"), _A1_AF), (("ym0d", "nl"), _YM0D_NL), (("ym0d", "no"), _YM0D_NO), (("ym0d", "nqo"), _A1_AF), (("ym0d", "oc"), _A1_AF), (("ym0d", "or"), _A1_AF), (("ym0d", "pa"), _A1_AF), (("ym0d", "pcm"), _A1_AF), (("ym0d", "pl"), _A1_AF), (("ym0d", "prg"), _A1_AF), (("ym0d", "ps"), _A1_AF), (("ym0d", "pt"), _YM0D_PT), (("ym0d", "qu"), _A1_AF), (("ym0d", "raj"), _A1_AF), (("ym0d", "rm"), _A1_AF), (("ym0d", "ro"), _A1_AF), (("ym0d", "ru"), _YM0D_FY), (("ym0d", "sa"), _A1_AF), (("ym0d", "sah"), _A1_AF), (("ym0d", "sat"), _A1_AF), (("ym0d", "sc"), _YM0D_SC), (("ym0d", "sd"), _A1_AF), (("ym0d", "sd-Deva"), _A1_AF), (("ym0d", "si"), _A1_AF), (("ym0d", "sk"), _A1_AF), (("ym0d", "sl"), _A1_AF), (("ym0d", "so"), _A1_AF), (("ym0d", "sq"), _A1_AF), (("ym0d", "sr"), _A1_AF), (("ym0d", "sr-Latn"), _A1_AF), (("ym0d", "su"), _A1_AF), (("ym0d", "sv"), _YM0D_SV), (("ym0d", "sw"), _A1_AF), (("ym0d", "syr"), _A1_AF), (("ym0d", "szl"), _A1_AF), (("ym0d", "ta"), _A1_AF), (("ym0d", "te"), _A1_AF), (("ym0d", "tg"), _A1_AF), (("ym0d", "th"), _A1_AF), (("ym0d", "ti"), _A1_AF), (("ym0d", "tk"), _A1_AF), (("ym0d", "to"), _A1_AF), (("ym0d", "tr"), _A1_AF), (("ym0d", "tt"), _A1_AF), (("ym0d", "ug"), _A1_AF), (("ym0d", "uk"), _A1_AF), (("ym0d", "und"), _A1_AF), (("ym0d", "ur"), _A1_AF), (("ym0d", "uz"), _A1_AF), (("ym0d", "uz-Cyrl"), _A1_AF), (("ym0d", "vec"), _A1_AF), (("ym0d", "vi"), _YM0D_VI), (("ym0d", "vmw"), _A1_AF), (("ym0d", "wo"), _A1_AF), (("ym0d", "xh"), _A1_AF), (("ym0d", "xnr"), _A1_AF), (("ym0d", "yo"), _A1_AF), (("ym0d", "yrl"), _A1_AF), (("ym0d", "yue"), _GYM0D_YUE), (("ym0d", "yue-Hans"), _GYM0D_YUE), (("ym0d", "za"), _A1_AF), (("ym0d", "zh"), _GYM0D_ZH), (("ym0d", "zh-HK"), _GYM0D_ZH_HK), (("ym0d", "zh-Hant"), _GYM0D_ZH_HANT), (("ym0d", "zh-MO"), _GYM0D_ZH_HK), (("ym0d", "zu"), _A1_AF), (("ym0de", "af"), _A1E_AF), (("ym0de", "am"), _A1E_AF), (("ym0de", "ar"), _A1E_AF), (("ym0de", "as"), _A1E_AF), (("ym0de", "ast"), _A1E_AF), (("ym0de", "az"), _A1E_AF), (("ym0de", "be"), _A1E_AF), (("ym0de", "bg"), _A1E_AF), (("ym0de", "bgc"), _A1E_AF), (("ym0de", "bho"), _A1E_AF), (("ym0de", "blo"), _A1E_AF), (("ym0de", "bn"), _A1E_AF), (("ym0de", "br"), _A1E_AF), (("ym0de", "brx"), _A1E_AF), (("ym0de", "bs"), _A1E_AF), (("ym0de", "bs-Cyrl"), _A1E_AF), (("ym0de", "ca"), _A1E_AF), (("ym0de", "ceb"), _A1E_AF), (("ym0de", "chr"), _A1E_AF), (("ym0de", "cs"), _A1E_AF), (("ym0de", "csw"), _A1E_AF), (("ym0de", "cv"), _A1E_AF), (("ym0de", "cy"), _A1E_AF), (("ym0de", "da"), _A1E_AF), (("ym0de", "de"), _A1E_DE), (("ym0de", "doi"), _A1E_AF), (("ym0de", "dsb"), _A1E_AF), (("ym0de", "el"), _A1E_AF), (("ym0de", "en"), _A1E_EN), (("ym0de", "en-001"), _A1E_EN_001), (("ym0de", "en-AE"), _YM0DE_EN_AE), (("ym0de", "en-CA"), _YM0DE_EN_CA), (("ym0de", "en-CH"), _A1E_EN_CH), (("ym0de", "eo"), _A1E_AF), (("ym0de", "es"), _GYM0DE_ES), (("ym0de", "et"), _A1E_AF), (("ym0de", "eu"), _A1E_AF), (("ym0de", "fa"), _A1E_AF), (("ym0de", "ff-Adlm"), _YM0DE_FF_ADLM), (("ym0de", "fi"), _YM0DE_FI), (("ym0de", "fil"), _A1E_AF), (("ym0de", "fo"), _A1E_AF), (("ym0de", "fr"), _YM0DE_FR), (("ym0de", "fy"), _YM0DE_FY), (("ym0de", "ga"), _A1E_AF), (("ym0de", "gd"), _YM0DE_GD), (("ym0de", "gl"), _A1E_AF), (("ym0de", "gu"), _A1E_AF), (("ym0de", "ha"), _A1E_AF), (("ym0de", "he"), _A1E_AF), (("ym0de", "hi"), _A1E_AF), (("ym0de", "hi-Latn"), _A1E_EN_AE), (("ym0de", "hr"), _A1E_AF), (("ym0de", "hsb"), _A1E_AF), (("ym0de", "hu"), _A1E_AF), (("ym0de", "hy"), _A1E_AF), (("ym0de", "ia"), _A1E_AF), (("ym0de", "id"), _A1E_AF), (("ym0de", "ie"), _A1E_AF), (("ym0de", "ig"), _A1E_AF), (("ym0de", "is"), _A1E_AF), (("ym0de", "it"), _A1E_AF), (("ym0de", "ja"), _YM0DE_JA), (("ym0de", "jv"), _A1E_AF), (("ym0de", "ka"), _A1E_AF), (("ym0de", "kea"), _A1E_AF), (("ym0de", "kgp"), _A1E_AF), (("ym0de", "kk"), _A1E_AF), (("ym0de", "km"), _A1E_AF), (("ym0de", "kn"), _A1E_AF), (("ym0de", "ko"), _YM0DE_KO), (("ym0de", "kok"), _A1E_AF), (("ym0de", "ks"), _A1E_AF), (("ym0de", "ks-Deva"), _A1E_AF), (("ym0de", "ku"), _A1E_AF), (("ym0de", "kxv"), _A1E_AF), (("ym0de", "kxv-Deva"), _A1E_AF), (("ym0de", "kxv-Orya"), _A1E_AF), (("ym0de", "kxv-Telu"), _A1E_AF), (("ym0de", "ky"), _A1E_AF), (("ym0de", "lb"), _A1E_AF), (("ym0de", "lij"), _A1E_AF), (("ym0de", "lmo"), _A1E_AF), (("ym0de", "lo"), _A1E_AF), (("ym0de", "lt"), _YM0DE_LT), (("ym0de", "lv"), _A1E_AF), (("ym0de", "mai"), _A1E_AF), (("ym0de", "mi"), _A1E_AF), (("ym0de", "mk"), _A1E_AF), (("ym0de", "ml"), _A1E_AF), (("ym0de", "mn"), _A1E_AF), (("ym0de", "mni"), _A1E_AF), (("ym0de", "mr"), _A1E_AF), (("ym0de", "ms"), _A1E_AF), (("ym0de", "mt"), _A1E_AF), (("ym0de", "my"), _A1E_AF), (("ym0de", "nds"), _A1E_AF), (("ym0de", "ne"), _A1E_AF), (("ym0de", "nl"), _YM0DE_NL), (("ym0de", "no"), _YM0DE_NO), (("ym0de", "nqo"), _A1E_AF), (("ym0de", "oc"), _A1E_AF), (("ym0de", "or"), _A1E_AF), (("ym0de", "pa"), _A1E_AF), (("ym0de", "pcm"), _A1E_AF), (("ym0de", "pl"), _A1E_AF), (("ym0de", "prg"), _A1E_AF), (("ym0de", "ps"), _A1E_AF), (("ym0de", "pt"), _A1E_PT), (("ym0de", "qu"), _A1E_AF), (("ym0de", "raj"), _A1E_AF), (("ym0de", "rm"), _A1E_AF), (("ym0de", "ro"), _A1E_AF), (("ym0de", "ru"), _YM0DE_RU), (("ym0de", "sa"), _A1E_AF), (("ym0de", "sah"), _A1E_AF), (("ym0de", "sat"), _A1E_AF), (("ym0de", "sc"), _YM0DE_SC), (("ym0de", "sd"), _A1E_AF), (("ym0de", "sd-Deva"), _A1E_AF), (("ym0de", "si"), _A1E_AF), (("ym0de", "sk"), _A1E_AF), (("ym0de", "sl"), _A1E_AF), (("ym0de", "so"), _A1E_AF), (("ym0de", "sq"), _A1E_AF), (("ym0de", "sr"), _A1E_AF), (("ym0de", "sr-Latn"), _A1E_AF), (("ym0de", "su"), _A1E_AF), (("ym0de", "sv"), _YM0DE_SV), (("ym0de", "sw"), _A1E_AF), (("ym0de", "syr"), _A1E_AF), (("ym0de", "szl"), _A1E_AF), (("ym0de", "ta"), _A1E_AF), (("ym0de", "te"), _A1E_AF), (("ym0de", "tg"), _A1E_AF), (("ym0de", "th"), _A1E_AF), (("ym0de", "ti"), _A1E_AF), (("ym0de", "tk"), _A1E_AF), (("ym0de", "to"), _A1E_AF), (("ym0de", "tr"), _A1E_AF), (("ym0de", "tt"), _A1E_AF), (("ym0de", "ug"), _A1E_AF), (("ym0de", "uk"), _A1E_AF), (("ym0de", "und"), _A1E_AF), (("ym0de", "ur"), _A1E_AF), (("ym0de", "uz"), _A1E_AF), (("ym0de", "uz-Cyrl"), _A1E_AF), (("ym0de", "vec"), _A1E_AF), (("ym0de", "vi"), _YM0DE_VI), (("ym0de", "vmw"), _A1E_AF), (("ym0de", "wo"), _A1E_AF), (("ym0de", "xh"), _A1E_AF), (("ym0de", "xnr"), _A1E_AF), (("ym0de", "yo"), _A1E_AF), (("ym0de", "yrl"), _A1E_AF), (("ym0de", "yue"), _YM0DE_YUE), (("ym0de", "yue-Hans"), _YM0DE_YUE), (("ym0de", "za"), _A1E_AF), (("ym0de", "zh"), _YM0DE_ZH), (("ym0de", "zh-HK"), _YM0DE_ZH_HK), (("ym0de", "zh-Hant"), _YM0DE_ZH_HANT), (("ym0de", "zh-MO"), _YM0DE_ZH_HK), (("ym0de", "zu"), _A1E_AF)])
            };
        }
        #[clippy::msrv = "1.70"]
        impl icu_provider::DataProvider<icu::datetime::provider::neo::ChineseDateNeoSkeletonPatternsV1Marker> for $provider {
            fn load(&self, req: icu_provider::DataRequest) -> Result<icu_provider::DataResponse<icu::datetime::provider::neo::ChineseDateNeoSkeletonPatternsV1Marker>, icu_provider::DataError> {
                let mut metadata = icu_provider::DataResponseMetadata::default();
                let payload = if let Some(payload) = icu_provider_baked::DataStore::get(&Self::DATA_CHINESE_DATE_NEO_SKELETON_PATTERNS_V1_MARKER, req.id) {
                    payload
                } else {
                    const FALLBACKER: icu::locale::fallback::LocaleFallbackerWithConfig<'static> = icu::locale::fallback::LocaleFallbacker::new().for_config(<icu::datetime::provider::neo::ChineseDateNeoSkeletonPatternsV1Marker as icu_provider::DataMarker>::INFO.fallback_config);
                    let mut fallback_iterator = FALLBACKER.fallback_for(req.id.locale.clone());
                    loop {
                        if let Some(payload) = icu_provider_baked::DataStore::get(&Self::DATA_CHINESE_DATE_NEO_SKELETON_PATTERNS_V1_MARKER, icu_provider::DataIdentifierBorrowed::for_marker_attributes_and_locale(req.id.marker_attributes, fallback_iterator.get())) {
                            metadata.locale = Some(fallback_iterator.take());
                            break payload;
                        }
                        if fallback_iterator.get().is_und() {
                            return Err(icu_provider::DataErrorKind::MissingLocale.with_req(<icu::datetime::provider::neo::ChineseDateNeoSkeletonPatternsV1Marker as icu_provider::DataMarker>::INFO, req));
                        }
                        fallback_iterator.step();
                    }
                };
                Ok(icu_provider::DataResponse { payload: icu_provider::DataPayload::from_static_ref(payload), metadata })
            }
        }
        impl icu_provider::CanLoad<icu::datetime::provider::neo::ChineseDateNeoSkeletonPatternsV1Marker> for $provider {
            fn can_load(&self, req: icu_provider::DataRequest) -> Result<bool, icu_provider::DataError> {
                Ok(icu_provider_baked::DataStore::contains(&Self::DATA_CHINESE_DATE_NEO_SKELETON_PATTERNS_V1_MARKER, req.id))
            }
        }
    };
    ($ provider : ty , ITER) => {
        __impl_chinese_date_neo_skeleton_patterns_v1_marker!($provider);
        #[clippy::msrv = "1.70"]
        impl icu_provider::IterableDataProvider<icu::datetime::provider::neo::ChineseDateNeoSkeletonPatternsV1Marker> for $provider {
            fn iter_ids(&self) -> Result<std::collections::HashSet<icu_provider::DataIdentifierCow<'static>>, icu_provider::DataError> {
                Ok(icu_provider_baked::DataStore::iter(&Self::DATA_CHINESE_DATE_NEO_SKELETON_PATTERNS_V1_MARKER).collect())
            }
        }
    };
}
#[doc(inline)]
pub use __impl_chinese_date_neo_skeleton_patterns_v1_marker as impl_chinese_date_neo_skeleton_patterns_v1_marker;
